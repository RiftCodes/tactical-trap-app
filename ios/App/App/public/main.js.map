{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AAAyC;AACiC;AAE1E,MAAMG,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEA,CAAA,KAAM,wJAA4B,CAACC,IAAI,CAAEC,CAAC,IAAIA,CAAC,CAACC,cAAc;CAC7E,EACD;EACEJ,IAAI,EAAE,EAAE;EACRK,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;CACZ,CACF;AAQM,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB,GAAI;AAApBA,gBAAgB,GAAAC,iDAAA,EAN5BZ,uDAAQ,CAAC;EACRa,OAAO,EAAE,CACPX,yDAAY,CAACY,OAAO,CAACX,MAAM,EAAE;IAAEY,kBAAkB,EAAEd,8DAAiBA;EAAA,CAAE,CAAC,CACxE;EACDe,OAAO,EAAE,CAACd,yDAAY;CACvB,CAAC,GACWS,gBAAgB,CAAI;;;;;;;;;;;;;;;;;;;;;;;;ACrBS;AAEA;AACc;AACN;AAM3C,IAAMU,YAAY,GAAlB,MAAMA,YAAY;EACvBC,YACUC,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;IAEhB,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAaA,CAAA;IACX,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE,CAACnB,IAAI,CAAEoB,GAAG,IAAI;MACjCN,4DAAS,CAACO,IAAI,EAAE;MAChBR,kEAAY,CAACQ,IAAI,EAAE;MACnB,IAAIC,aAAa,GAAG,CAAC,cAAc,CAAC;MACpC;MACAC,MAAM,CAACC,WAAW,CAACC,KAAK,CAACH,aAAa,CAAC;IACzC,CAAC,CAAC;EACJ;;;;;;;AAfWP,YAAY,GAAAT,iDAAA,EAJxBK,wDAAS,CAAC;EACTe,QAAQ,EAAE,UAAU;EACpBC,QAAA,EAAAC,2DAAAA;CACD,CAAC,GACWb,YAAY,CAgBxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BwC;AACiB;AACL;AAEY;AACU;AAC5B;AACS;AAEZ;AACQ;AACQ;AACG;AAoBxD,IAAMuB,SAAS,GAAf,MAAMA,SAAS,GAAG;AAAZA,SAAS,GAAAhC,iDAAA,EAnBrBZ,uDAAQ,CAAC;EACN6C,YAAY,EAAE,CACVxB,wDAAY,CACf;EACDR,OAAO,EAAE,CACLsB,oEAAa,EACbE,wDAAW,CAACvB,OAAO,EAAE,EACrBH,iEAAgB,CACnB;EACDmC,SAAS,EAAE,CACPN,sDAAG,EACHC,6DAAU,EACVC,qEAAc,EACdC,wEAAe,EACfJ,qFAAkB,EAClB;IAAEQ,OAAO,EAAEX,gEAAkB;IAAEY,QAAQ,EAAEV,+DAAkBA;EAAA,CAAE,CAChE;EACDW,SAAS,EAAE,CAAC5B,wDAAY;CAC3B,CAAC,GACWuB,SAAS,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCzB;;;;;;AAMuD;AACoB;AACM;AACrC;AACyB;AAEhB;AAmBrD,MAAMW,GAAG,GAAG,CAAC;AACb,MAAMC,GAAG,GAAG,CAAC;AACb,MAAMC,GAAG,GAAG,CAAC;AACb,MAAMC,GAAG,GAAG,CAAC;AACb,MAAMC,IAAI,GAAG,CAAC;AACd,MAAMC,QAAQ,GAAG,EAAE;AACnB,MAAMC,cAAc,GAAG,OAAO;AAC9B,MAAMC,cAAc,GAAG,YAAY;AAC5B,MAAMC,WAAW,GAAG,IAAI;AACxB,MAAMC,WAAW,GAAG,IAAI;AACxB,MAAMC,WAAW,GAAG,IAAI;AACxB,MAAMC,WAAW,GAAG,IAAI;AACxB,MAAMC,YAAY,GAAG,IAAI;AACzB,MAAMC,yBAAyB,GAAG,IAAI;AACtC,MAAMC,uBAAuB,GAAG,IAAI;AACpC,MAAMC,WAAW,GAAG;EACvB,CAACP,WAAW,GAAI,mBAAmB;EACnC,CAACC,WAAW,GAAI,iBAAiB;EACjC,CAACC,WAAW,GAAI,SAAS;EACzB,CAACC,WAAW,GAAI,iBAAiB;EACjC,CAACC,YAAY,GAAI,eAAe;EAChC,CAACC,yBAAyB,GAAI,kCAAkC;EAChE,CAACC,uBAAuB,GAAI;CAC/B;AAMM,MAAME,QAAQ,GAAG,IAAI;AACrB,MAAMC,UAAU,GAAG,IAAI;AAC9B,MAAMC,QAAQ,GAAG,CAACD,UAAU;AACrB,MAAME,sBAAsB,GAAG,GAAG,CAAC,CAAE;AAG5C,MAAMC,SAAS,GAAG,IAAI;AAKf,IAAMlC,UAAU,GAAhB,MAAMA,UAAU;EA2BnBnB,YAAoBsD,kBAAsC,EAAUC,GAAQ;IAAxD,KAAAD,kBAAkB,GAAlBA,kBAAkB;IAA8B,KAAAC,GAAG,GAAHA,GAAG;IAvBvE,KAAAC,QAAQ,GAAW,IAAI;IAEvB,KAAAC,iBAAiB,GAAiB,IAAI;IACtC,KAAAC,sBAAsB,GAAiB,IAAI;IAC3C,KAAAC,eAAe,GAAiB,IAAI;IACpC,KAAAC,OAAO,GAAiB,IAAI5B,6DAAY,EAAE;IAG1C,KAAA6B,cAAc,GAAG,IAAI;IACrB,KAAAC,YAAY,GAAG,IAAI;IACnB,KAAAC,aAAa,GAAG,KAAK;IAErB;IACA,KAAAC,eAAe,GAAG,sCAAsC;IAExD,KAAAC,cAAc,GAAI,sCAAsC;IAExD,KAAAC,eAAe,GAAG,sCAAsC;IAExD,KAAAC,cAAc,GAAI,sCAAsC;IAKpD;IACA,IAAI,CAACb,kBAAkB,CAACc,UAAU,CAACC,iBAAiB,EAAE;MAClDf,kBAAkB,CAACc,UAAU,CAACC,iBAAiB,GAAG,sCAAsC;IAC5F;IACA,IAAI,CAACf,kBAAkB,CAACc,UAAU,CAACE,cAAc,EAAE;MAC/ChB,kBAAkB,CAACc,UAAU,CAACE,cAAc,GAAG,mCAAmC;IACtF;EACH;EAGD;EAEAC,KAAKA,CAACC,eAAe,EAAEC,aAAa;IAChCC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,IAAI,CAACH,eAAe,IAAI,CAACC,aAAa,EAAE;MACpC,MAAM,yBAAyB;IACnC;IACA,IAAI,CAACG,aAAa,GAAG9C,qDAAM,CAAC+C,OAAO,EAAE,CAAC,CAAE;IACxC,IAAI,CAAChB,cAAc,GAAGW,eAAe;IACrC,IAAI,CAACV,YAAY,GAAGW,aAAa;IACjC;IACA,IAAI,CAAC,IAAI,CAAClB,GAAG,EAAE;MACX,IAAIuB,OAAO,GAAG;QACVC,SAAS,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKC,OAAO,CAACC,MAAM,EAAE;QACrCC,MAAM,EAAEA,CAAA,KAAMF,OAAO,CAACC,MAAM,EAAE;QAC9BE,SAAS,EAAEA,CAAA,KAAM,IAAI;QACrBC,QAAQ,EAAEA,CAAA,KAAM;OACnB;MACD,IAAI,CAAC/B,GAAG,GAAGuB,OAAc;MACzBS,KAAK,CAAC,uEAAuE,CAAC;IAClF;IACA,4DACK;MACD,IAAIC,CAAC,GAAG,IAAI,CAACjC,GAAG,CAAC,CAAI;MACrB,IAAI,EAAG,QAAQ,IAAIiC,CAAC,CAAC,EAAE;QACnB,IAAI,CAACjC,GAAG,CAAC6B,MAAM,GAAG,IAAI,CAACK,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;MAC/C;IACJ;IACA;EACJ;EAEA;;;EAGMC,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,6MAAA;MACb,IAAIC,SAAS,GAAG,KAAK;MACrBF,KAAI,CAAC/B,cAAc,CAAC,uBAAuB,CAAC;MAC5C,IAAI;QACA,MAAMkC,UAAU,SAASH,KAAI,CAAChB,aAAa;QAC3CgB,KAAI,CAAC3F,QAAQ,GAAG8F,UAAU,CAACC,eAAe;QAC1CJ,KAAI,CAACK,SAAS,GAAGF,UAAU,CAACE,SAAS;QACrC,MAAML,KAAI,CAACrC,GAAG,CAACwB,SAAS,EAAE;QAC1Ba,KAAI,CAAC/B,cAAc,CAAC,iBAAiB,CAAC;QACtCiC,SAAS,GAAG,IAAI;MACpB,CAAC,CAAC,OAAOI,CAAC,EAAE;QACR;QACA,IAAI;UACA,MAAMN,KAAI,CAACrC,GAAG,CAAC6B,MAAM,EAAE;UACvBQ,KAAI,CAAC/B,cAAc,CAAC,2BAA2B,CAAC;UAChDiC,SAAS,GAAG,IAAI;QACpB,CAAC,CAAC,OAAOK,GAAG,EAAE;UAC1B;UACkBP,KAAI,CAAC/B,cAAc,CAAC,wCAAwC,GAAGsC,GAAG,CAAC;QACrF;MACQ;MACA,IAAIP,KAAI,CAAC3F,QAAQ,IAAI,SAAS,IAAI2F,KAAI,CAACK,SAAS,IAAI5C,SAAS,EAAE;QAC3D,IAAI+C,MAAM,EAAEC,SAAS,EAAEC,QAAQ;QAC/B,IAAIR,SAAS,EAAE;UACXF,KAAI,CAAC/B,cAAc,CAAC,wBAAwB,CAAC;UAC7C,IAAI;YACAuC,MAAM,SAASR,KAAI,CAACtC,kBAAkB,CAACiD,eAAe,CAACX,KAAI,CAACtC,kBAAkB,CAACc,UAAU,CAACoC,SAAS,CAAC;YACpGH,SAAS,GAAGD,MAAM,CAACK,aAAa;YAChCL,MAAM,SAASR,KAAI,CAACtC,kBAAkB,CAACiD,eAAe,CAACX,KAAI,CAACtC,kBAAkB,CAACc,UAAU,CAACsC,oBAAoB,CAAC;YAC/GJ,QAAQ,GAAGF,MAAM,CAACK,aAAa;YAC/B,IAAI,CAACJ,SAAS,IAAI,CAACC,QAAQ,EAAE;cACzB,MAAMV,KAAI,CAAC9B,YAAY,CAAC,wEAAwE,EAAE,IAAI,CAAC;YAC3G;UACJ,CAAC,CAAC,OAAOqC,GAAG,EAAE;YACVZ,KAAK,CAAC,qCAAqC,GAAGoB,IAAI,CAACC,SAAS,CAACT,GAAG,CAAC,CAAC;YAClEL,SAAS,GAAG,KAAK;UACrB;QACJ;QACA,IAAIA,SAAS,IAAI,CAACO,SAAS,EAAE;UACzBT,KAAI,CAAC/B,cAAc,CAAC,mCAAmC,CAAC;UACxD,IAAI;YACpB;YACoBuC,MAAM,SAASR,KAAI,CAACtC,kBAAkB,CAACuD,iBAAiB,CAACjB,KAAI,CAACtC,kBAAkB,CAACc,UAAU,CAACoC,SAAS,CAAC;YACtGZ,KAAI,CAAC/B,cAAc,CAAC,8BAA8B,CAAC;YACnDiC,SAAS,GAAGM,MAAM,CAACK,aAAa;UACpC,CAAC,CAAC,OAAON,GAAG,EAAE;YACVZ,KAAK,CAACY,GAAG,CAAC;YACVL,SAAS,GAAG,KAAK;UACrB;QACJ;QACA,IAAIA,SAAS,IAAI,CAACQ,QAAQ,EAAE;UACxBV,KAAI,CAAC/B,cAAc,CAAC,kCAAkC,CAAC;UACvD,IAAI;YACpB;YACoBuC,MAAM,SAASR,KAAI,CAACtC,kBAAkB,CAACuD,iBAAiB,CAACjB,KAAI,CAACtC,kBAAkB,CAACc,UAAU,CAACsC,oBAAoB,CAAC;YACjHd,KAAI,CAAC/B,cAAc,CAAC,8BAA8B,CAAC;YACnDiC,SAAS,GAAGM,MAAM,CAACK,aAAa;UACpC,CAAC,CAAC,OAAON,GAAG,EAAE;YACVZ,KAAK,CAACY,GAAG,CAAC;YACVL,SAAS,GAAG,KAAK;UACrB;QACJ;QACAF,KAAI,CAAC/B,cAAc,CAAC,4CAA4CwC,SAAS,wBAAwBC,QAAQ,EAAE,CAAC;MAChH;MACA,IAAIV,KAAI,CAAC3F,QAAQ,IAAI,SAAS,IAAI2F,KAAI,CAACK,SAAS,GAAG5C,SAAS,EAAE;QAC1D,IAAI+C,MAAM,EAAEU,IAAI,EAAEC,OAAO;QACzB,IAAIjB,SAAS,EAAE;UACXF,KAAI,CAAC/B,cAAc,CAAC,wBAAwB,CAAC;UAC7C,IAAI;YACAuC,MAAM,SAASR,KAAI,CAACtC,kBAAkB,CAACiD,eAAe,CAACX,KAAI,CAACtC,kBAAkB,CAACc,UAAU,CAACE,cAAc,CAAC;YACzGwC,IAAI,GAAGV,MAAM,CAACK,aAAa;YAC3BL,MAAM,SAASR,KAAI,CAACtC,kBAAkB,CAACiD,eAAe,CAACX,KAAI,CAACtC,kBAAkB,CAACc,UAAU,CAACC,iBAAiB,CAAC;YAC5G0C,OAAO,GAAGX,MAAM,CAACK,aAAa;YAC9Bb,KAAI,CAAC/B,cAAc,CAAC,4CAA4CiD,IAAI,uBAAuBC,OAAO,EAAE,CAAC;YACrG,IAAI,CAACD,IAAI,IAAI,CAACC,OAAO,EAAE;cACnB,MAAMnB,KAAI,CAAC9B,YAAY,CAAC,uDAAuD,EAAE,IAAI,CAAC;YAC1F;UACJ,CAAC,CAAC,OAAOqC,GAAG,EAAE;YACVZ,KAAK,CAAC,qCAAqC,GAAGoB,IAAI,CAACC,SAAS,CAACT,GAAG,CAAC,CAAC;YAClEL,SAAS,GAAG,KAAK;UACrB;QACJ;QACA,IAAIA,SAAS,IAAI,CAACgB,IAAI,EAAE;UACpBlB,KAAI,CAAC/B,cAAc,CAAC,kCAAkC,CAAC;UACvD,IAAI;YACpB;YACoBuC,MAAM,SAASR,KAAI,CAACtC,kBAAkB,CAACuD,iBAAiB,CAACjB,KAAI,CAACtC,kBAAkB,CAACc,UAAU,CAACE,cAAc,CAAC;YAC3GwC,IAAI,GAAGV,MAAM,CAACK,aAAa;YAC3BX,SAAS,GAAGM,MAAM,CAACK,aAAa;UACpC,CAAC,CAAC,OAAON,GAAG,EAAE;YACVZ,KAAK,CAACY,GAAG,CAAC;YACVL,SAAS,GAAG,KAAK;UACrB;QACJ;QACA,IAAIA,SAAS,IAAI,CAACiB,OAAO,EAAE;UACvBnB,KAAI,CAAC/B,cAAc,CAAC,qCAAqC,CAAC;UAC1D,IAAI;YACpB;YACoBuC,MAAM,SAASR,KAAI,CAACtC,kBAAkB,CAACuD,iBAAiB,CAACjB,KAAI,CAACtC,kBAAkB,CAACc,UAAU,CAACC,iBAAiB,CAAC;YAC9G0C,OAAO,GAAGX,MAAM,CAACK,aAAa;YAC9BX,SAAS,GAAGM,MAAM,CAACK,aAAa;UACpC,CAAC,CAAC,OAAON,GAAG,EAAE;YACVZ,KAAK,CAACY,GAAG,CAAC;YACVL,SAAS,GAAG,KAAK;UACrB;QACJ;QACAF,KAAI,CAAC/B,cAAc,CAAC,uCAAuCiD,IAAI,uBAAuBC,OAAO,EAAE,CAAC;MACpG;MACA,OAAOjB,SAAS;IAAC;EACrB;EAEA;;;EAGAL,SAASA,CAAA;IACL,MAAMuB,IAAI,GAAG,IAAI;IACjB,IAAI,CAACnD,cAAc,CAAC,oBAAoB,CAAC;IAEzC;IACA,IAAIoD,QAAQ,GAAG,IAAI,CAAC1D,GAAG,CAAC2D,uBAAuB,EAAE;IACjD,IAAID,QAAQ,KAAK,IAAI,EAAE;MACpB,OAAO/B,OAAO,CAACC,MAAM,CAAC,kBAAkB,CAAC;IAC5C;IAEA;IACA,IAAI,CAACrB,YAAY,CAAC,4DAA4D,CAAC;IAC/E,OAAO,IAAIoB,OAAO,CAAC,CAACiC,OAAO,EAAEhC,MAAM,KAAI;MACnC,IAAIiC,YAAY,GAAiB,IAAI;MACrC,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAK;QAC1BnC,MAAM,CAAC,cAAc,CAAC;MAC1B,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC;MAEdiC,YAAY,GAAGH,QAAQ,CAACM,SAAS,CAACC,KAAK,IAAG;QACtCR,IAAI,CAACnD,cAAc,CAAC,wBAAwB2D,KAAK,EAAE,CAAC;QACpD,IAAIC,OAAO,GAAG,KAAK;QACnB,IAAID,KAAK,KAAK,IAAI,EAAE;UAChBL,OAAO,CAAC,IAAI,CAAC;UACbM,OAAO,GAAG,IAAI;QAClB,CAAC,MACI,IAAID,KAAK,KAAK,cAAc,IAAIA,KAAK,KAAK,aAAa,EAAE;UAC1DrC,MAAM,CAAC,iBAAiB,GAAGqC,KAAK,CAAC;UACjCC,OAAO,GAAG,IAAI;QAClB;QACA,IAAIA,OAAO,EAAE;UACTC,YAAY,CAACL,KAAK,CAAC;UACnBD,YAAY,CAACO,WAAW,EAAE;UAC1BP,YAAY,GAAG,IAAI;UACnBH,QAAQ,GAAG,IAAI;UACfD,IAAI,CAACzD,GAAG,CAACqE,sBAAsB,EAAE,CAAC5I,IAAI,CAAC,MAAK;YACxCgI,IAAI,CAACnD,cAAc,CAAC,4BAA4B,CAAC;UACrD,CAAC,CAAC,CAACgE,KAAK,CAAEC,MAAM,IAAI;YAChBd,IAAI,CAACnD,cAAc,CAAC,8BAA8B,GAAGiE,MAAM,CAAC;UAChE,CAAC,CAAC;UACFd,IAAI,CAAClD,YAAY,CAAC,IAAI,CAAC;QAC3B;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEA;EAEAuB,SAASA,CAAC0C,QAAkB;IACxB,OAAO,IAAI,CAACxE,GAAG,CAAC8B,SAAS,CAAC0C,QAAQ,CAAC;EACvC;EAEAzC,QAAQA,CAAA;IACJ,OAAO,IAAI,CAAC/B,GAAG,CAAC+B,QAAQ,EAAE;EAC9B;EAEF;;;;;;;EAOE0C,SAASA,CAACC,QAAgB;IACtB,MAAMjB,IAAI,GAAG,IAAI;IACjB,IAAI,CAACxD,QAAQ,GAAG,IAAI;IACpBkB,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGsD,QAAQ,CAACC,EAAE,CAAC;IAChD,IAAI,CAACC,WAAW,CAACF,QAAQ,CAAC;IAC1B,IAAI,CAACtE,eAAe,GAAG,IAAI5B,yCAAO,EAAO;IACzC,IAAIqG,GAAG,GAAoB,IAAI,CAAC7E,GAAG,CAACwD,OAAO,CAACkB,QAAQ,CAACC,EAAE,CAAC;IACxD,IAAIjB,QAAQ,GAAoB,IAAI;IACpC,IAAI,CAACxD,iBAAiB,GAAG2E,GAAG,CAACb,SAAS;IAAA;IAClC;IAAA;MAAA,IAAAc,IAAA,GAAAxC,6MAAA,CACA,WAAOyC,cAAmB,EAAI;QAC1BtB,IAAI,CAACnD,cAAc,CAAC,qCAAqCyE,cAAc,CAACC,IAAI,QAAQD,cAAc,CAACJ,EAAE,EAAE,CAAC;QACxGlB,IAAI,CAACxD,QAAQ,GAAGyE,QAAQ,CAACC,EAAE;QAC3BlB,IAAI,CAACrD,eAAe,CAAC6E,IAAI,CAACF,cAAc,CAAC;QACzCtB,IAAI,CAACpD,OAAO,CAAC6E,KAAK,EAAE;QACpBxB,QAAQ,GAAGD,IAAI,CAACzD,GAAG,CAACmF,iBAAiB,CAACT,QAAQ,CAACC,EAAE,EAAElB,IAAI,CAAC2B,WAAW,EAAE3B,IAAI,CAAC4B,UAAU,CAAC;QACrF,IAAIlF,sBAAsB,GAAGuD,QAAQ,CAACM,SAAS,CAAC;UAC5CiB,IAAI,EAAGK,KAAK,IAAK7B,IAAI,CAAC8B,mBAAmB,CAACD,KAAK,CAAC;UAChDE,KAAK,EAAGA,KAAK,IAAK/B,IAAI,CAACgC,iBAAiB,CAACD,KAAK;SACjD,CAAC;QACF/B,IAAI,CAACvD,iBAAiB,CAACwF,GAAG,CAACvF,sBAAsB,CAAC;MACtD,CAAC;MAAA,iBAAAwF,EAAA;QAAA,OAAAb,IAAA,CAAAc,KAAA,OAAAC,SAAA;MAAA;IAAA;IAAA;IACD;IAAA;MAAA,IAAAC,KAAA,GAAAxD,6MAAA,CACA,WAAOO,MAAM,EAAI;QACb;QACA;QACAA,MAAM,CAACkD,aAAa,GAAGtC,IAAI,CAACxD,QAAQ,KAAK,IAAI;QAC7CwD,IAAI,CAACnD,cAAc,CAAC,wBAAwB,IACvCuC,MAAM,CAACkD,aAAa,GAAG,eAAe,GAAG,GAAG,CAAC,GAC5C3C,IAAI,CAACC,SAAS,CAACR,MAAM,CAAC,CAC3B;QACDY,IAAI,CAACrD,eAAe,CAACoF,KAAK,CAAC3C,MAAM,CAAC;QAClCY,IAAI,CAACvD,iBAAiB,CAACkE,WAAW,EAAE;QACpCX,IAAI,CAACvD,iBAAiB,GAAG,IAAI;QAC7C;QACgB,IAAI,CAAC2C,MAAM,CAACkD,aAAa,EAAE;UACvBtC,IAAI,CAACuC,eAAe,CAACvC,IAAI,CAACxD,QAAQ,CAAC,CAAC,CAAE;QAC1C;QACAwD,IAAI,CAACxD,QAAQ,GAAG,IAAI;MACxB,CAAC;MAAA,iBAAAgG,GAAA;QAAA,OAAAH,KAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;IAAA,IACJ;IACD,OAAO,IAAI,CAACzF,eAAe;EAC/B;EAEA;;EAEQ8F,mBAAmBA,CAACC,iBAAyB;IACjD,IAAIC,CAAC,GAAG,EAAE;IACVD,iBAAiB,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAChCC,CAAC,IAAG;MAAEH,CAAC,CAACI,IAAI,CAACC,QAAQ,CAACF,CAAC,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC,CAAC;IACF,OAAOG,UAAU,CAACC,IAAI,CAACP,CAAC,CAAC;EAC7B;EAEA;;EAEQQ,mBAAmBA,CAACC,MAAkB;IAC1C,OAAOC,KAAK,CACPH,IAAI,CAAEE,MAAM,CAAC,CACbE,GAAG,CAAErF,CAAC,IAAIA,CAAC,CAACsF,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAC3CC,IAAI,CAAE,GAAG,CAAC;EACnB;EAEAC,UAAUA,CAAA;IACN,OAAO,IAAI,CAAC3G,aAAa;EAC7B;EAEA;;;;;EAKQ4G,WAAWA,CAACC,WAAmB,EAAEC,OAAmB;IAAA,IAAAC,MAAA;IAChE;IACQ,IAAIC,cAAc,EAAEC,aAAa;IACjC,IAAIC,oBAAoB,GAAG,IAAI;IAEvC;IACQ,IAAI,IAAI,CAACzH,QAAQ,KAAK,IAAI,EAAE;MACxB,IAAI,CAACK,cAAc,CAAC,kBAAkB+G,WAAW,qBAAqB,CAAC;MACvE,OAAO1F,OAAO,CAACC,MAAM,CAAC,gCAAgC,CAAC;IAC3D;IACA,IAAI,IAAI,CAACpB,aAAa,KAAK,IAAI,EAAE;MAC7B,IAAI,CAACF,cAAc,CAAC,mBAAmB+G,WAAW,sCAAsC,CAAC;MACzF,OAAO1F,OAAO,CAACC,MAAM,CAAC,iCAAiC,CAAC;IAC5D;IACA,IAAI,IAAI,CAAC2D,mBAAmB,IAAI,IAAI,EAAE;MAClC,IAAI,CAACjF,cAAc,CAAC,mBAAmB+G,WAAW,iCAAiC,CAAC;MACpF,OAAO1F,OAAO,CAACC,MAAM,CAAC,uCAAuC,CAAC;IAClE;IACA,IAAI,CAACpB,aAAa,GAAG,IAAI;IACzB8G,OAAO,CAACzI,GAAG,CAAC,GAAG,CAAC;IAChByI,OAAO,CAACzI,GAAG,CAAC,GAAGyI,OAAO,CAACK,MAAM,CAAC,CAACC,QAAQ,EAAEC,OAAO,KAAMD,QAAQ,GAAGC,OAAO,GAAI,IAAI,CAAC;IACjF,OAAO,IAAIlG,OAAO;MAAA,IAAAmG,KAAA,GAAAxF,6MAAA,CAAa,WAAOsB,OAAO,EAAEhC,MAAM,EAAI;QACrD4F,cAAc,GAAG5D,OAAO;QACxB6D,aAAa,GAAG7F,MAAM;QACtB,IAAI;UACA2F,MAAI,CAACjH,cAAc,CAAC,gBAAgB+G,WAAW,OAAOE,MAAI,CAACX,mBAAmB,CAACU,OAAO,CAAC,EAAE,CAAC;UAC1FC,MAAI,CAAChC,mBAAmB,GAAGwC,eAAe,CAAC5F,IAAI,CAACoF,MAAI,CAAC;UACrDA,MAAI,CAAC9B,iBAAiB,GAAGuC,YAAY,CAAC7F,IAAI,CAACoF,MAAI,CAAC;UAChD,MAAMA,MAAI,CAACvH,GAAG,CAACiI,KAAK,CAACV,MAAI,CAACtH,QAAQ,EAAEsH,MAAI,CAACnC,WAAW,EAAEmC,MAAI,CAACW,WAAW,EAAEZ,OAAO,CAACT,MAAqB,CAAC;UACtG,IAAIQ,WAAW,KAAK,eAAe,EAAE;YACjC;YACAK,oBAAoB,GAAG3D,UAAU,CAAC,MAAK;cACnC2D,oBAAoB,GAAG,IAAI;cAC3B,IAAIS,iBAAiB,GAAG,CACpBZ,MAAI,CAACrB,mBAAmB,CAAC,sBAAsB,CAAC,EAChD,CAAC,CACJ;cACD6B,eAAe,CAAC5F,IAAI,CAACoF,MAAI,CAAC,CAACY,iBAAiB,CAAC;YACjD,CAAC,EAAE,GAAG,CAAC;UACX;QACJ,CAAC,CAAC,OAAO3C,KAAK,EAAE;UACZ;UACAxD,KAAK,CAAC,iCAAiC,GAAGoB,IAAI,CAACC,SAAS,CAACmC,KAAK,CAAC,CAAC;UAChE5D,MAAM,CAAC,cAAc,CAAC;UACtB2F,MAAI,CAAC/G,aAAa,GAAG,KAAK;QAC9B;MACJ,CAAC;MAAA,iBAAA4H,GAAA,EAAAC,GAAA;QAAA,OAAAP,KAAA,CAAAlC,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;IAEF;;;;;IAKA,SAASkC,eAAeA,CAACO,IAAgB;MACrC,IAAI;QACA;QACA,IAAIZ,oBAAoB,EAAE;UACtBvD,YAAY,CAACuD,oBAAoB,CAAC;QACtC;QACA,IAAIL,WAAW,KAAKrI,cAAc,EAAE;UAChCwI,cAAc,CAAC;YAAEe,QAAQ,EAAErJ;UAAW,CAAe,CAAC;QAC1D,CAAC,MACI;UACD,IAAIsJ,MAAM,GAAG,SAAS;UACtB,IAAIF,IAAI,IAAI,IAAI,EAAE;YACd,MAAM,oCAAoC;UAC9C;UACA,IAAIzB,MAAM,GAAgByB,IAAI,CAAC,CAAC,CAAC;UACjC,IAAIzB,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,wCAAwC;UAClD;UACA,MAAM4B,KAAK,GAAG,IAAI/B,UAAU,CAACG,MAAM,CAAC;UACpC2B,MAAM,GAAG,UAAU,GAAG,IAAI,CAAC5B,mBAAmB,CAAC6B,KAAK,CAAC;UACrD,IAAIA,KAAK,CAACC,MAAM,GAAG5J,IAAI,EAAE;YACrB,IAAI,CAACwB,cAAc,CAACkI,MAAM,CAAC;YAC3B,MAAM,qBAAqB,GAAGC,KAAK;UACvC;UACA,IAAIE,CAAC,GAAgB;YACjBJ,QAAQ,EAAEE,KAAK,CAAC9J,GAAG,CAAC;YACpBiK,UAAU,EAAEH,KAAK,CAAC7J,GAAG,CAAC;YACtBiK,QAAQ,EAAE,KAAK;YACfC,OAAO,EAAEL,KAAK,CAAC9J,GAAG,CAAC,GAAG,IAAI,IAAI8J,KAAK,CAAC9J,GAAG,CAAC,GAAG,IAAI;YAC/CoK,QAAQ,EAAE,KAAK;YACfC,OAAO,EAAE,IAAI;YACbC,QAAQ,EAAE;WACb;UACDN,CAAC,CAACO,WAAW,GAAGzJ,WAAW,CAACkJ,CAAC,CAACJ,QAAQ,CAAC;UACvC,IAAI,CAACI,CAAC,CAACO,WAAW,EAAE;YAChBP,CAAC,CAACO,WAAW,GAAG,UAAU,GAAGP,CAAC,CAACJ,QAAQ;UAC3C;UACA,QAAQE,KAAK,CAAC/J,GAAG,CAAC;YACd,KAAK,IAAI;cAAG;cACR,IAAI+J,KAAK,CAAC9J,GAAG,CAAC,KAAKO,WAAW,EAAE;gBAC5ByJ,CAAC,CAACI,QAAQ,GAAG,IAAI;gBACjBP,MAAM,IAAI,YAAY;cAC1B,CAAC,MACI;gBACDA,MAAM,IAAI,IAAI,IACD,CAACG,CAAC,CAACG,OAAO,GAAG,uBAAuB,GAAG,oBAAoB,CAAC,GAAGH,CAAC,CAACO,WAAW;cAC7F;cACA;YACJ,KAAK,IAAI;cAAG;cACRP,CAAC,CAACE,QAAQ,GAAG,IAAI;cACjBF,CAAC,CAACQ,cAAc,GAAGV,KAAK,CAAC3J,IAAI,CAAC;cAC9B6J,CAAC,CAACS,SAAS,GAAGX,KAAK,CAAC3J,IAAI,GAAG,CAAC,CAAC;cAC7B6J,CAAC,CAACU,YAAY,GAAGZ,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAM;cACjDE,CAAC,CAACW,MAAM,GAAG,CAACb,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,KAAKA,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IACrCA,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAGA,KAAK,CAAC,EAAE,CAAC;cACtCE,CAAC,CAACY,QAAQ,GAAGd,KAAK,CAAC1J,QAAQ,CAAC;cAC5B;YACJ,KAAK,IAAI;cAAG;cACR4J,CAAC,CAACK,OAAO,GAAGP,KAAK,CAAC3J,IAAI,CAAC,KAAK,CAAC;cAC7B,IAAI2J,KAAK,CAAC7J,GAAG,CAAC,KAAK,CAAC,EAAE;gBAClB4J,MAAM,IAAI,UAAU,IAAIC,KAAK,CAAC3J,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;cAC7D;cACA,IAAIwI,OAAO,CAAC5I,GAAG,CAAC,KAAK+J,KAAK,CAAC/J,GAAG,CAAC,EAAE;gBAC7B8J,MAAM,IAAI,oBAAoB;cAClC;cACA;YACJ,KAAK,IAAI;cAAG;cACRG,CAAC,CAACM,QAAQ,GAAGR,KAAK,CAAC3J,IAAI,CAAC,KAAK,CAAC;cAC9B,IAAI2J,KAAK,CAAC7J,GAAG,CAAC,KAAK,CAAC,EAAE;gBAClB4J,MAAM,IAAI,WAAW,IAAIC,KAAK,CAAC3J,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;cAC9D;cACA,IAAIwI,OAAO,CAAC5I,GAAG,CAAC,KAAK+J,KAAK,CAAC/J,GAAG,CAAC,EAAE;gBAC7B8J,MAAM,IAAI,oBAAoB;cAClC;cACA;UACR;UACA,IAAI,CAAClI,cAAc,CAACkI,MAAM,CAAC;UAC3BhB,cAAc,CAACmB,CAAC,CAAC;QACrB;MACJ,CAAC,CAAC,OAAOnD,KAAK,EAAE;QACZ,IAAIgE,GAAG,GAAG,8BAA8B,GAAGpG,IAAI,CAACC,SAAS,CAACmC,KAAK,CAAC;QAChE,IAAI,CAAClF,cAAc,CAACkJ,GAAG,CAAC;QACxBxH,KAAK,CAACwH,GAAG,CAAC;QACV/B,aAAa,CAAC,aAAa,CAAC;MAChC;MACA,IAAI,CAACjH,aAAa,GAAG,KAAK;MAC1B,IAAI,CAAC+E,mBAAmB,GAAG,IAAI;MAC/BiC,cAAc,GAAG,IAAI;MACrBC,aAAa,GAAG,IAAI;IACxB;IAEA,SAASO,YAAYA,CAACxC,KAAK;MACvB;MACA,IAAI6B,WAAW,KAAKrI,cAAc,EAAE;QAChCwI,cAAc,CAAC;UAAEe,QAAQ,EAAErJ;QAAW,CAAe,CAAC;MAC1D,CAAC,MACI,IAAI4H,KAAK,CAAC2C,OAAO,CAACjE,KAAK,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAI,yBAAyB,EAAE;QACpE;MAAA;MAEJ;MAAA,KACK;QACD,IAAIgE,GAAG,GAAG,sCAAsC,GAAGpG,IAAI,CAACC,SAAS,CAACmC,KAAK,CAAC;QACxE,IAAI,CAAClF,cAAc,CAACkJ,GAAG,CAAC;QACxBxH,KAAK,CAACwH,GAAG,CAAC;QACV/B,aAAa,CAAC,aAAa,CAAC;MAChC;MACA,IAAI,CAACjH,aAAa,GAAG,KAAK;MAC1B,IAAI,CAAC+E,mBAAmB,GAAG,IAAI;MAC/BiC,cAAc,GAAG,IAAI;MACrBC,aAAa,GAAG,IAAI;IACxB;EACJ;EAEA;EACAiC,cAAcA,CAAA;IACV,MAAMpC,OAAO,GAAG,IAAI,CAACpB,mBAAmB,CAAC,mBAAmB,CAAC;IAC7D,OAA6B,IAAI,CAAC7F,OAAO,CAACsJ,OAAO,CAC5C,MAAK,IAAI,CAACvC,WAAW,CAAC,YAAY,EAAEE,OAAO,CAAC,CAChD;EACL;EAEA;;;;;;EAMAsC,kBAAkBA,CAACC,QAAwB;IACvC,IAAIC,QAAQ,GAAG,mBAAmB;IAClC,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,CAAC,EAAEA,EAAE,EAAE,EAAE;MACvC;MACYD,QAAQ,IAAI,GAAG,GAAGD,QAAQ,CAACG,GAAG,CAACC,UAAU,CAACF,EAAE,CAAC,CAAC/C,QAAQ,CAAC,EAAE,CAAC;IAC9D;IACA,MAAMM,OAAO,GAAG,IAAI,CAACpB,mBAAmB,CAAC4D,QAAQ,CAAC;IAClD,OAAiC,IAAI,CAACzJ,OAAO,CAACsJ,OAAO,CACjD,MAAK,IAAI,CAACvC,WAAW,CAAC,QAAQ,EAAEE,OAAO,CAAC,CAAC7L,IAAI,CAAGoH,MAAkB,IAAI;MAClE,OAAO;QAAEkG,QAAQ,EAAElG,MAAM,CAACkG,QAAQ;QAAED,OAAO,EAAEjG,MAAM,CAACiG,OAAO;QAAEU,GAAG,EAAE3G,MAAM,CAACqG;MAAW,CAAC;IACzF,CAAC,CAAC,CACL;EACL;EAEA;;;;EAIAgB,aAAaA,CAAA;IACT,MAAM5C,OAAO,GAAG,IAAI,CAACpB,mBAAmB,CAAC,mBAAmB,CAAC;IAC7D,OAA0B,IAAI,CAAC7F,OAAO,CAACsJ,OAAO,CAC1C,MAAK,IAAI,CAACvC,WAAW,CAAC,eAAe,EAAEE,OAAO,CAAC,CAClD,CAAC7L,IAAI,CAAGoH,MAAkB,IAAI;MAC3B,IAAIA,MAAM,CAACmG,OAAO,KAAK,IAAI,EAAE;QACzB,IAAI,CAAC1I,cAAc,CAAC,iCAAiC,GAAG8C,IAAI,CAACC,SAAS,CAACR,MAAM,CAAC,CAAC;MACnF;MACA,OAAOA,MAAM,CAACmG,OAAO,KAAK,IAAI,IAAInG,MAAM,CAACmG,OAAO;IACpD,CAAC,CAAC;EACN;EAEA;;;;;EAKMmB,aAAaA,CAACC,OAAO;IAAA,IAAAC,MAAA;IAAA,OAAA/H,6MAAA;MAEvB,IAAIgF,OAAO,GAAG+C,MAAI,CAACnE,mBAAmB,CAAC,oBAAoB,IAAIkE,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;MACtF,IAAIvH,MAAM,SAA+BwH,MAAI,CAAChK,OAAO,CAACsJ,OAAO,CACzD,MAAKU,MAAI,CAACjD,WAAW,CAAC,gBAAgB,EAAEE,OAAO,CAAC,CACnD;MAED;MACA,MAAM+C,MAAI,CAACC,mBAAmB,CAAC,GAAG,CAAC;MAEnChD,OAAO,GAAG+C,MAAI,CAACnE,mBAAmB,CAAC,oBAAoB,IAAIkE,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;MAClFvH,MAAM,SAA+BwH,MAAI,CAAChK,OAAO,CAACsJ,OAAO,CACrD,MAAKU,MAAI,CAACjD,WAAW,CAAC,eAAe,EAAEE,OAAO,CAAC,CAClD;MACD,OAAOzE,MAAM;IAAC;EACnB;EAEA;;;;;;;;;;;EAWC;EACA;EACA;EACA;EACA;EACA;EAEA0H,WAAWA,CAACC,MAAkC,EAAEC,WAAmB;IAC/D,IAAInD,OAAO,GAAG,IAAI,CAACpB,mBAAmB,CAAC,sBAAsB,CAAC;IAC9DoB,OAAO,CAACxI,IAAI,CAAC,GAAG,CAAC0L,MAAM,KAAK,QAAQ,GAAG,IAAI,GAAG,IAAI,IAAIC,WAAW;IACzE;IACQ,OAA8B,IAAI,CAACpK,OAAO,CAACsJ,OAAO,CAC9C,MAAK,IAAI,CAACvC,WAAW,CAACoD,MAAM,EAAElD,OAAO,CAAC,CACzC;EACL;EAEAoD,WAAWA,CAACC,GAAS;IACjB,IAAIrD,OAAO,GAAG,IAAI,CAACpB,mBAAmB,CAAC,mBAAmB,GACpD,GAAG,GAAG,CAAC,GAAG,GAAGyE,GAAG,CAACC,WAAW,EAAE,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,GACzC,GAAG,GAAG,CAAC,GAAG,GAAGF,GAAG,CAACG,QAAQ,EAAE,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC,GACtC,GAAG,GAAG,CAAC,GAAG,GAAGF,GAAG,CAACI,OAAO,EAAE,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC,GACrC,GAAG,GAAG,CAAC,GAAG,GAAGF,GAAG,CAACK,QAAQ,EAAE,EAAEH,KAAK,CAAC,CAAC,CAAC,CAAC,GACtC,GAAG,GAAG,CAAC,GAAG,GAAGF,GAAG,CAACM,UAAU,EAAE,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC,GACxC,GAAG,GAAG,CAAC,GAAG,GAAGF,GAAG,CAACO,UAAU,EAAE,EAAEL,KAAK,CAAC,CAAC,CAAC,CAAC,CAC7C;IACD,OAA8B,IAAI,CAACxK,OAAO,CAACsJ,OAAO,CAC9C,MAAK,IAAI,CAACvC,WAAW,CAAC,SAAS,EAAEE,OAAO,CAAC,CAC5C;EACL;EAGA;EACA6D,cAAcA,CAAA;IACV,MAAM7D,OAAO,GAAG,IAAI,CAACpB,mBAAmB,CAAC,mBAAmB,CAAC;IAC7D,OAA8B,IAAI,CAAC7F,OAAO,CAACsJ,OAAO,CAC9C,MAAK,IAAI,CAACvC,WAAW,CAACpI,cAAc,EAAEsI,OAAO,CAAC,CACjD;EACL;EAEA;EACA8D,cAAcA,CAAA;IACV,MAAM9D,OAAO,GAAG,IAAI,CAACpB,mBAAmB,CAAC,mBAAmB,CAAC;IAC7D,OAA8B,IAAI,CAAC7F,OAAO,CAACsJ,OAAO,CAC9C,MAAK,IAAI,CAACvC,WAAW,CAACnI,cAAc,EAAEqI,OAAO,CAAC,CACjD;EACL;EAEA;;;EAGQtB,eAAeA,CAAC/F,QAAQ;IAC5B,IAAI,CAACD,GAAG,CAACqL,UAAU,CAACpL,QAAQ,CAAC,CAACxE,IAAI,CAAC,MAAK;MACpC0F,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC/B,CAAC,CAAC,CAACkD,KAAK,CAACC,MAAM,IAAG;MACd,IAAI,CAACjE,cAAc,CAAC,qBAAqB,GAAGiE,MAAM,CAAC;IACvD,CAAC,CAAC;EACN;EAEA+G,WAAWA,CAACrL,QAAQ;IAChB,OAAO,IAAI,CAACD,GAAG,CAACsL,WAAW,CAACrL,QAAQ,CAAC;EACzC;EAEAsL,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACvL,GAAG,CAACuL,QAAQ,CAAC,IAAI,CAACtL,QAAQ,CAAC;EAC3C;EAEA2E,WAAWA,CAAC4G,MAAc;IACtB,SAASC,OAAOA,CAACC,IAAI,EAAEC,OAAO;MAC1B,OAAOA,OAAO,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGH,IAAI;IAC1D;IAEA,IAAIF,MAAM,KAAKM,SAAS,IAAI,EAAE,IAAI,IAAIN,MAAM,CAAC,EAAE;MAC1C,MAAM,oBAAoB;IAC/B;IACA,MAAMO,OAAO,GAAG,CAACP,MAAM,CAACQ,YAAY;IACpC,IAAI,CAAC5G,WAAW,GAAGqG,OAAO,CAAC,IAAI,CAAChL,eAAe,EAAEsL,OAAO,CAAC;IACzD,IAAI,CAAC1G,UAAU,GAAGoG,OAAO,CAAC,IAAI,CAAC/K,cAAc,EAAEqL,OAAO,CAAC;IACvD,IAAI,CAAC7D,WAAW,GAAGuD,OAAO,CAAC,IAAI,CAAC9K,eAAe,EAAEoL,OAAO,CAAC;IACzD,IAAI,CAACE,UAAU,GAAGR,OAAO,CAAC,IAAI,CAAC7K,cAAc,EAAEmL,OAAO,CAAC;IACvD;EACJ;EAEA;;;;;;;EAOMG,eAAeA,CAACC,MAAc;IAAA,IAAAC,MAAA;IAAA,OAAA9J,6MAAA;MAChC,IAAI8J,MAAI,CAAC1P,QAAQ,IAAI,SAAS,EAAE;QAC5B;QACA0P,MAAI,CAAC9L,cAAc,CAAC,6BAA6B,CAAC;QAClD8L,MAAI,CAACpM,GAAG,CAACqL,UAAU,CAACc,MAAM,CAACxH,EAAE,CAAC,CAACL,KAAK,CAAC1B,GAAG,IAAG;UACvCwJ,MAAI,CAAC9L,cAAc,CAAC,0BAA0B,CAAC;QACnD,CAAC,CAAC;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACJ;IAAC;EACL;EAEMgK,mBAAmBA,CAAC+B,EAAE;IAAA,OAAA/J,6MAAA;MACxB,OAAO,IAAIX,OAAO,CAACiC,OAAO,IAAG;QACzBG,UAAU,CAACH,OAAO,EAAEyI,EAAE,CAAC;MAC3B,CAAC,CAAC;IAAC;EACP;EAEAC,WAAWA,CAAA,GACX;;;;;;;;;AAzqBS1O,UAAU,GAAA7B,iDAAA,EAHtBsC,yDAAU,CAAC;EACVkO,UAAU,EAAE;CACb,CAAC,GACW3O,UAAU,CA0qBtB;;;;;;;;;;;;;;;;;;;ACjvBD;;;;;;AAM4C;AAYrC,MAAM4O,iBAAiB,GAAG,gBAAgB;AAM1C,IAAM3O,cAAc,GAApB,MAAMA,cAAc;EAMvBpB,YAAA;IAJA,KAAAgQ,OAAO,GAAkB,EAAE;IAC3B,KAAAC,OAAO,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;IAClC,KAAAC,QAAQ,GAAG,KAAK;IAGZzL,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC/C;EAEAyL,OAAOA,CAACzG,CAAC;IACL,OAAO,CAAC,GAAG,GAAGA,CAAC,CAACY,QAAQ,CAAC,EAAE,CAAC,EAAE4E,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE;EAC7D;EAEA;;;EAGAiB,oBAAoBA,CAACjG,MAAM;IACvB,IAAI,CAAC+F,QAAQ,GAAG,IAAI;IACpB,IAAIG,UAAU,GAAG,EAAE;IACnB,MAAMtE,KAAK,GAAG,IAAI/B,UAAU,CAACG,MAAM,CAAC;IACpC,IAAImG,KAAK,GAAG,CAAC;IACb,OAAOA,KAAK,GAAGvE,KAAK,CAACC,MAAM,EAAE;MACzB,IAAIuE,CAAC,EAAEC,KAAK;MACZ,IAAIC,QAAQ,GAAG1E,KAAK,CAACuE,KAAK,EAAE,CAAC;MAC7B,IAAIG,QAAQ,KAAK,CAAC,EAAE;MACpB,MAAMC,MAAM,GAAG3E,KAAK,CAACuE,KAAK,EAAE,CAAC;MAC7BG,QAAQ,GAAGA,QAAQ,GAAG,CAAC;MACvB,IAAIE,MAAM,GAAG,IAAI3G,UAAU,CAACG,MAAM,EAAEmG,KAAK,EAAEG,QAAQ,CAAC;MACpD,QAAQC,MAAM;QACV,KAAK,CAAC;UACFH,CAAC,GAAG,SAAS,GAAG,IAAI,CAACJ,OAAO,CAACpE,KAAK,CAACuE,KAAK,CAAC,CAAC;UAC1C;QACJ,KAAK,CAAC;UACFE,KAAK,GAAGC,QAAQ,GAAG,CAAC;UACpBF,CAAC,GAAG,UAAU;UACd,KAAK,IAAIlD,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGmD,KAAK,EAAEnD,EAAE,EAAE,EAAE;YAC/BkD,CAAC,IAAI,GAAG,GAAG,IAAI,CAACJ,OAAO,CAACQ,MAAM,CAACtD,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC8C,OAAO,CAACQ,MAAM,CAACtD,EAAE,GAAG,CAAC,CAAC,CAAC;UAC9E;UACA;QACJ,KAAK,CAAC;UACFkD,CAAC,GAAG,QAAQ;UACZ,IAAIK,EAAE,GAAG,EAAE;YAAEC,EAAE,GAAG,EAAE;UACpB,KAAK,IAAIxD,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGoD,QAAQ,EAAEpD,EAAE,EAAE,EAAE;YAClCuD,EAAE,CAACE,OAAO,CAAC,IAAI,CAACX,OAAO,CAACQ,MAAM,CAACtD,EAAE,CAAC,CAAC,CAAC;UACxC;UACAwD,EAAE,CAAC/G,IAAI,CAAC8G,EAAE,CAACzC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC3D,IAAI,CAAC,EAAE,CAAC,CAAC;UAChCqG,EAAE,CAAC/G,IAAI,CAAC8G,EAAE,CAACzC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC3D,IAAI,CAAC,EAAE,CAAC,CAAC;UAChCqG,EAAE,CAAC/G,IAAI,CAAC8G,EAAE,CAACzC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC3D,IAAI,CAAC,EAAE,CAAC,CAAC;UAChCqG,EAAE,CAAC/G,IAAI,CAAC8G,EAAE,CAACzC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC3D,IAAI,CAAC,EAAE,CAAC,CAAC;UACjCqG,EAAE,CAAC/G,IAAI,CAAC8G,EAAE,CAACzC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC3D,IAAI,CAAC,EAAE,CAAC,CAAC;UAClC+F,CAAC,GAAGM,EAAE,CAACrG,IAAI,CAAC,GAAG,CAAC;UAChB;QACJ,KAAK,CAAC;QAAE,KAAK,CAAC;UACV,IAAIuG,MAAM,GAAG,IAAIC,QAAQ,CAAC7G,MAAM,EAAEmG,KAAK,EAAEG,QAAQ,CAAC;UAClD,IAAI;YACAF,CAAC,GAAG,IAAI,CAACP,OAAO,CAACiB,MAAM,CAACF,MAAM,CAAC;UACnC,CAAC,CAAC,OAAO9K,CAAC,EAAE;YACRsK,CAAC,GAAGQ,MAAM;UACd;UACA;QACJ;UACIR,CAAC,GAAG,OAAO;UACX,KAAK,IAAIlD,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGoD,QAAQ,EAAEpD,EAAE,EAAE,EAAE;YAClC,IAAIA,EAAE,GAAG,CAAC,EAAEkD,CAAC,IAAI,IAAI;YACrBA,CAAC,IAAI,IAAI,CAACJ,OAAO,CAACQ,MAAM,CAACtD,EAAE,CAAC,CAAC;UACjC;UACA;MACR;MACAgD,UAAU,CAACvG,IAAI,CAAC,IAAI,GAAG4G,MAAM,CAACpG,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,GAAGiG,CAAC,CAAC;MACtDD,KAAK,IAAIG,QAAQ;IACrB;IACA,IAAI,CAACP,QAAQ,GAAG,KAAK;IACrB,OAAOG,UAAU;EACrB;EAEAa,SAASA,CAACzB,MAAM;IACZhL,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAG+K,MAAM,CAACxH,EAAE,GAAG,MAAM,GAAGwH,MAAM,CAACnH,IAAI,GAAG,GAAG,CAAC;IACjF;IACA,IAAI,CAAC,IAAI,CAAC4H,QAAQ,EAAE;MAChB,IAAIiB,OAAO,GAAG,IAAI,CAACf,oBAAoB,CAACX,MAAM,CAAC2B,WAAW,CAAC;MACvE;MACA;IACQ;IACA,IAAI,IAAI,CAACrB,OAAO,CAACsB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACrJ,EAAE,KAAKwH,MAAM,CAACxH,EAAE,IAAIqJ,IAAI,CAAChJ,IAAI,KAAKmH,MAAM,CAACnH,IAAI,CAAC,EAAE;MAC/E7D,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5B,CAAC,MACI;MACD,IAAI,CAACqL,OAAO,CAACjG,IAAI,CAAC2F,MAAM,CAAC;IAC7B;IACA,OAAO,IAAI,CAACM,OAAO;EAC3B;EAEIwB,UAAUA,CAAA;IACN9M,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,OAAO,IAAI,CAACqL,OAAO;EACvB;EAEAyB,SAASA,CAACvJ,EAAE;IACRxD,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGuD,EAAE,GAAG,GAAG,CAAC;IACnD,IAAIqI,KAAK,GAAG,IAAI,CAACP,OAAO,CAAC0B,SAAS,CAAChC,MAAM,IAAIA,MAAM,CAACxH,EAAE,KAAKA,EAAE,CAAC;IAC5D,OAAOqI,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAACP,OAAO,CAACO,KAAK,CAAC,GAAG,IAAI;EACpD;EAEAoB,KAAKA,CAAA;IACHjN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,IAAI,CAACqL,OAAO,GAAG,EAAE;EACnB;;;;;AA3GS5O,cAAc,GAAA9B,iDAAA,EAH1BsC,yDAAU,CAAC;EACVkO,UAAU,EAAE;CACb,CAAC,GACW1O,cAAc,CA6G1B;;;;;;;;;;;;;;;;;;;;ACrID;;;;;;AAM4C;AACS;AAS9C,MAAMyQ,cAAc,GAAG;EAC1BC,OAAO,EAAE,CAAC;EACVC,mBAAmB,EAAG,CAAC;EACvBC,cAAc,EAAG,CAAC;EAClBC,cAAc,EAAG,CAAC;EAClBC,cAAc,EAAG,CAAC;EAClBC,UAAU,EAAG,CAAC;EACdC,eAAe,EAAG,CAAC;EACnB;EACAC,aAAa,EAAG,CAAC;EACjBC,QAAQ,EAAG;CACd;AAWM,IAAMjR,eAAe,GAArB,MAAMA,eAAe;EAMxBrB,YAAA;IAJA,KAAAuS,KAAK,GAAqB,EAAE;IAC5B,KAAApC,QAAQ,GAAG,KAAK;IAChB,KAAAqC,qBAAqB,GAAG,UAAS1I,CAAC,GAAG,CAAC;IAGlCpF,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EACjD;EAEA;;;EAIAJ,KAAKA,CAACkO,oBAAoB;IACtB,IAAIA,oBAAoB,EAAE;MACtB,IAAI,CAACD,qBAAqB,GAAGC,oBAAoB;IACrD;IACA,IAAI,CAACD,qBAAqB,CAAC,qBAAqB,CAAC;EACrD;EAEAE,QAAQA,CAACC,YAAY,EAAEpF,GAAG;IACtB,OAAO;MAAEoF,YAAY;MAAEpF,GAAG;MAAEhF,IAAI,EAAE;IAAE,CAAE;EAC1C;EAEA6H,OAAOA,CAACzG,CAAC;IACL,OAAO,CAAC,GAAG,GAAGA,CAAC,CAACY,QAAQ,CAAC,EAAE,CAAC,EAAE4E,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE;EAC7D;EAEA;;EAEAwD,KAAKA,CAAA;IACD,OAAOhB,+DAAW,CAACgB,KAAK,EAAE;EAC9B;EAEA;;;;;EAKAC,gBAAgBA,CAACtK,IAAI;IACjB,IAAI,CAACiK,qBAAqB,CAAC,wBAAwB,GAAGjK,IAAI,GAAG,GAAG,CAAC;IACjE,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC1B,OAAOrD,OAAO,CAACC,MAAM,CAAC;QAAC2N,SAAS,EAAE,+BAA+BvK,IAAI,GAAG;QAAEwK,IAAI,EAAElB,cAAc,CAACS;MAAQ,CAAC,CAAE;IAC9G;IACA,OAAOV,+DAAW,CAACoB,GAAG,CAAC;MAAEC,GAAG,EAAE1K;IAAI,CAAE,CAAC,CAACvJ,IAAI,CAACkU,CAAC,IAAG;MAC3C,IAAIA,CAAC,CAACrK,KAAK,KAAK,IAAI,EAAE;QAClB,MAAM;UAAEkK,IAAI,EAAElB,cAAc,CAACG;QAAc,CAAE;MACjD;MACA,OAAOkB,CAAC,CAACrK,KAAK;IAClB,CAAC,CAAC;EACN;EAEA;;;;EAIAsK,gBAAgBA,CAACC,IAAoB;IACjC,IAAI,CAACZ,qBAAqB,CAAC,sBAAsB,GAAGY,IAAI,CAACT,YAAY,GAAG,MAAM,GAAGS,IAAI,CAAC7F,GAAG,GAAG,GAAG,CAAC;IAEhG,OAAO,IAAI,CAACsF,gBAAgB,CAACO,IAAI,CAACT,YAAY,CAAC,CAAC3T,IAAI,CAAC,MAAK;MACtD,IAAI,CAACwT,qBAAqB,CAAC,oCAAoC,CAAC;MAChEjN,KAAK,CAAC,mCAAmC,CAAC;MAC1C,OAAOsM,cAAc,CAACQ,aAAa;IACvC,CAAC,CAAC,CACDxK,KAAK,CAAC,MAAK;MACR,OAAO+J,+DAAW,CAACyB,GAAG,CAAC;QAAEJ,GAAG,EAAEG,IAAI,CAACT,YAAY;QAAE9J,KAAK,EAAEuK,IAAI,CAAC7F;MAAG,CAAE,CAAC,CAACvO,IAAI,CAAC,MAAK;QAC1E,OAAO6S,cAAc,CAACC,OAAO;MACjC,CAAC,CAAC;IACN,CAAC,CAAC,CACDjK,KAAK,CAAEkB,KAAK,IAAI;MACb,IAAI,CAACyJ,qBAAqB,CAAC7L,IAAI,CAACC,SAAS,CAACmC,KAAK,CAAC,CAAC;MACjD,OAAO8I,cAAc,CAACE,mBAAmB;IAC7C,CAAC,CAAC;EACN;EAEA;;;;;EAKCuB,QAAQA,CAAC/K,IAAI;IACV,IAAI,CAACiK,qBAAqB,CAAC,gBAAgB,GAAGjK,IAAI,GAAG,GAAG,CAAC;IACzD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC1B,OAAOrD,OAAO,CAACC,MAAM,CAAE;QAAC2N,SAAS,EAAE,uBAAuBvK,IAAI,GAAG;QAAEwK,IAAI,EAAElB,cAAc,CAACS;MAAQ,CAAC,CAAE;IACvG;IACA,OAAOV,+DAAW,CAACoB,GAAG,CAAC;MAAEC,GAAG,EAAE1K;IAAI,CAAE,CAAC,CAACvJ,IAAI,CAACkU,CAAC,IAAG;MAC3C,OAAOA,CAAC,CAACrK,KAAK;IAClB,CAAC,CAAC;EACN;EAEA0K,YAAYA,CAAChL,IAAI;IACb,OAAO,IAAI,CAAC+K,QAAQ,CAAC/K,IAAI,CAAC,CAACvJ,IAAI,CAAC6J,KAAK,IAAG;MACpC,OAAOlC,IAAI,CAAC6M,KAAK,CAAC3K,KAAK,CAAC;IAC5B,CAAC,CAAC;EACN;EAEA;;;EAGA4K,QAAQA,CAACR,GAAW,EAAEpK,KAAa;IAC/B,OAAO+I,+DAAW,CAACyB,GAAG,CAAC;MAACJ,GAAG;MAAEpK;IAAK,CAAC,CAAC,CAAC7J,IAAI,CAAC,MAAK;MAC3C,OAAO6S,cAAc,CAACC,OAAO;IACjC,CAAC,CAAC;EACN;EAEA;;;EAGC4B,YAAYA,CAACnL,IAAI,EAAEoL,MAAW;IAC3B,OAAO,IAAI,CAACF,QAAQ,CAAClL,IAAI,EAAE5B,IAAI,CAACC,SAAS,CAAC+M,MAAM,CAAC,CAAC;EACtD;;;;;AA/GStS,eAAe,GAAA/B,iDAAA,EAH3BsC,yDAAU,CAAC;EACVkO,UAAU,EAAE;CACb,CAAC,GACWzO,eAAe,CAiH3B;;;;;;;;;;;;;;;;ACvJD;;;;;AAMA;;;;;AAMM,MAAOW,YAAY;EAAzBhC,YAAA;IACI,KAAA4T,KAAK,GAAG,EAAE;IACV,KAAAC,cAAc,GAAG,KAAK;IACtB,KAAAC,gBAAgB,GAAG,KAAK;EA0D5B;EAxDIrL,KAAKA,CAAA;IACD,IAAI,CAACmL,KAAK,GAAG,EAAE;EACnB;EAEA;;;;;;;;EAQC1G,OAAOA,CAAC6G,SAA6B;IAClC,OAAO,IAAI7O,OAAO,CAAC,CAACiC,OAAO,EAAEhC,MAAM,KAAI;MACnC,IAAI,CAACyO,KAAK,CAAC7J,IAAI,CAAC;QACZgK,SAAS;QACT5M,OAAO;QACPhC;OACH,CAAC;MACF,IAAI,CAAC6O,OAAO,EAAE;IAClB,CAAC,CAAC;EACN;EAEA;;;;;EAKQA,OAAOA,CAAA;IACX,IAAI,IAAI,CAACF,gBAAgB,EAAE;MACvB,OAAO,KAAK;IAChB;IACA,MAAMvC,IAAI,GAAG,IAAI,CAACqC,KAAK,CAACK,KAAK,EAAE;IAC/B,IAAI,CAAC1C,IAAI,EAAE;MACP,OAAO,KAAK;IAChB;IACA,IAAI;MACA,IAAI,CAACuC,gBAAgB,GAAG,IAAI;MAC5BvC,IAAI,CAACwC,SAAS,EAAE,CACX/U,IAAI,CAAE6J,KAAK,IAAI;QACZ,IAAI,CAACiL,gBAAgB,GAAG,KAAK;QAC7BvC,IAAI,CAACpK,OAAO,CAAC0B,KAAK,CAAC;QACnB,IAAI,CAACmL,OAAO,EAAE;MAClB,CAAC,CAAC,CACDnM,KAAK,CAAC1B,GAAG,IAAG;QACT,IAAI,CAAC2N,gBAAgB,GAAG,KAAK;QAC7BvC,IAAI,CAACpM,MAAM,CAACgB,GAAG,CAAC;QAChB,IAAI,CAAC6N,OAAO,EAAE;MAClB,CAAC,CAAC;IACV,CAAC,CAAC,OAAO7N,GAAG,EAAE;MACV,IAAI,CAAC2N,gBAAgB,GAAG,KAAK;MAC7BvC,IAAI,CAACpM,MAAM,CAACgB,GAAG,CAAC;MAChB,IAAI,CAAC6N,OAAO,EAAE;IAClB;IACA,OAAO,IAAI;EACf;;;;;;;;;;;;;;;;ACxEJ;AACA;AACA;AAEO,MAAME,WAAW,GAAG;EACzBC,UAAU,EAAE;CACb;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;ACf+C;AAC4B;AAE9B;AACY;AAEzD,IAAID,kEAAW,CAACC,UAAU,EAAE;EAC1BC,6DAAc,EAAE;AAClB;AAEAC,yFAAsB,EAAE,CAACC,eAAe,CAAChT,sDAAS,CAAC,CAChDuG,KAAK,CAAC1B,GAAG,IAAIzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC,CAAC;;;;;;;;;;ACXjsources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/ble.service.ts","./src/app/services/devices.service.ts","./src/app/services/lock-data.service.ts","./src/app/util/dynamic-queue.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./node_modules/@stencil/core/internal/client/ lazy ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ strict namespace object"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    loadChildren: () => import('./home/home.module').then( m => m.HomePageModule)\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\nimport { Platform } from '@ionic/angular';\r\nimport { SplashScreen } from '@capacitor/splash-screen';\r\nimport { StatusBar } from '@capacitor/status-bar';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent {\r\n  constructor(\r\n    private platform: Platform\r\n  ) {\r\n    this.initializeApp();\r\n  }\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then((val) => {\r\n      StatusBar.hide();\r\n      SplashScreen.hide();\r\n      let clickyClasses = ['click-sounds'];\r\n      // @ts-ignore\r\n      window.nativeclick.watch(clickyClasses);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\n\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { BLE } from '@ionic-native/ble/ngx';\r\nimport { BleService } from './services/ble.service';\r\nimport { DevicesService } from './services/devices.service';\r\nimport { LockDataService } from './services/lock-data.service';\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        IonicModule.forRoot(),\r\n        AppRoutingModule\r\n    ],\r\n    providers: [\r\n        BLE,\r\n        BleService,\r\n        DevicesService,\r\n        LockDataService,\r\n        AndroidPermissions,\r\n        { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","/**\r\n * Tactical Traps Bluetooth Lock App\r\n * (c) 2019-2022 Tactical Traps https://www.tacticaltraps.com/\r\n * License: Proprietary, by permission only\r\n */\r\n\r\n import { Injectable, OnDestroy } from '@angular/core';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\r\nimport { Device as System, DeviceInfo, OperatingSystem } from '@capacitor/device'\r\nimport { BLE } from '@ionic-native/ble/ngx';\r\nimport { Observable, Subject, throwError, Subscription } from 'rxjs';\r\nimport { LockParameters } from './lock-data.service';\r\nimport { DynamicQueue } from '../util/dynamic-queue';\r\nimport { Device, UnknownDeviceName } from './devices.service';\r\n\r\nexport interface LockStatus {\r\n    response: number;               // ubyte\r\n    responseMsg?: string;\r\n    extraBytes: number;             // ubyte\r\n    isStatus: boolean;              // true if a lock status message\r\n    isError?: boolean;              // indicates the operation went wrong\r\n    verified: any;                  // null or true/false result\r\n    alarmOn: any;                   // null or true/false result\r\n    buzzerOn: any;                  // null or true/false result\r\n    openCloseState?: number;        // ubyte - 00 when bolt extended\r\n    hookState?: number;             // ubyte - 00 when shelf open\r\n    voltageValue?: number;          // ushort: big-endian numbers\r\n    lockId?: number;                // uint\r\n    randData?: number;              // ubyte\r\n    error?: string;\r\n}\r\nconst CMD = 1;\r\nconst ASK = 2;\r\nconst EXT = 3;\r\nconst SUM = 5;\r\nconst DATA = 6;\r\nconst RANDDATA = 14;\r\nconst CMD_SystemExit = 'sleep';\r\nconst CMD_SystemInit = 'initialize';\r\nexport const ASK_correct = 0x10;\r\nexport const ASK_failure = 0x11;\r\nexport const ASK_timeout = 0x12;\r\nexport const ASK_unknown = 0x13;\r\nexport const ASK_checksum = 0x16;\r\nexport const ASK_password_not_verified = 0x26;\r\nexport const ASK_failed_verification = 0x27;\r\nexport const ResponseMap = {\r\n    [ASK_correct] : 'Correct operation',\r\n    [ASK_failure] : 'Wrong operation',\r\n    [ASK_timeout] : 'Timeout',\r\n    [ASK_unknown] : 'Unknown command',\r\n    [ASK_checksum] : 'Fail checksum',\r\n    [ASK_password_not_verified] : 'Pairing password is not verified',\r\n    [ASK_failed_verification] : 'Password failed verification'\r\n}\r\nexport interface VerifyOutcome {\r\n    verified:boolean,\r\n    isError:boolean,\r\n    msg:string\r\n}\r\nexport const IsLocked = 0x00;\r\nexport const IsUnhooked = 0x00;\r\nconst IsHooked = ~IsUnhooked;\r\nexport const InactiveDisconnectTime = 180;  // locks disconnect after 3 mins to save power\r\n\r\nexport declare type QuirksMode = 'android' | 'iOS';\r\nconst Android11 = '11';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BleService implements OnDestroy {\r\n    platform:  OperatingSystem;\r\n    osDataRequest: Promise<DeviceInfo>;\r\n    osVersion: string;\r\n    deviceId: string = null;\r\n\r\n    connectSubscriber: Subscription = null;\r\n    notificationSubscriber: Subscription = null;\r\n    connectRepeater: Subject<any> = null;\r\n    opQueue: DynamicQueue = new DynamicQueue();\r\n    notificationHandler: (data: any) => void;\r\n    notificationError: (error: any) => void;\r\n    messageHandler = null;\r\n    alertHandler = null;\r\n    writeLockBusy = false;\r\n\r\n    // BLE lock Service and Characteristic\r\n    LongServiceUuid = '0000fff0-0000-1000-8000-00805f9b34fb';\r\n    ServiceUuid;\r\n    LongStatusUuid =  '0000fff1-0000-1000-8000-00805f9b34fb';\r\n    StatusUuid;\r\n    LongCommandUuid = '0000fff2-0000-1000-8000-00805f9b34fb';\r\n    CommandUuid;\r\n    LongConfigUuid =  '0000fff3-0000-1000-8000-00805f9b34fb';\r\n    ConfigUuid;\r\n\r\n\r\n    constructor(private androidPermissions: AndroidPermissions, private ble: BLE) {\r\n        // Permissions plugin needs to be updated to Android 12; add missing constants\r\n        if (!androidPermissions.PERMISSION.BLUETOOTH_CONNECT) {\r\n            androidPermissions.PERMISSION.BLUETOOTH_CONNECT = \"android.permission.BLUETOOTH_CONNECT\";\r\n        }\r\n        if (!androidPermissions.PERMISSION.BLUETOOTH_SCAN) {\r\n            androidPermissions.PERMISSION.BLUETOOTH_SCAN = \"android.permission.BLUETOOTH_SCAN\";\r\n        }\r\n     }\r\n\r\n\r\n    /* Call on platform ready to do inital setup connected to Bluetooth plugin */\r\n\r\n    setup(_messageHandler, _alertHandler) {\r\n        console.log('ble: activate');\r\n        if (!_messageHandler || !_alertHandler) {\r\n            throw \"handlers cannot be null\";\r\n        }\r\n        this.osDataRequest = System.getInfo();  // start read, use it later\r\n        this.messageHandler = _messageHandler;\r\n        this.alertHandler = _alertHandler;\r\n        /* catch ble plugin problem */\r\n        if (!this.ble) {\r\n            let standin = {\r\n                isEnabled: (a, b) => Promise.reject(),\r\n                enable: () => Promise.reject(),\r\n                startScan: () => null,\r\n                stopScan: () => null\r\n            };\r\n            this.ble = standin as any;\r\n            alert('Something is amiss with the Bluetooth plugin\\nCommunication disabled!');\r\n        }\r\n        /* on iOS, add missing enable() for Bluetooth plugin */\r\n        else {\r\n            let q = this.ble;    // 'in this.ble' redefines it to type 'never'\r\n            if (! ('enable' in q)) {\r\n                this.ble.enable = this.iosEnable.bind(this);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    /* check that Bluetooth is on and that we have permission to use it; need to\r\n     * do this at startup and before each connection attempt\r\n     */\r\n    async isAvailable(): Promise<boolean> {\r\n        let available = false;\r\n        this.messageHandler('checking availability');\r\n        try {\r\n            const deviceInfo = await this.osDataRequest;\r\n            this.platform = deviceInfo.operatingSystem;\r\n            this.osVersion = deviceInfo.osVersion;\r\n            await this.ble.isEnabled();\r\n            this.messageHandler('ble: is enabled');\r\n            available = true;\r\n        } catch (e) {\r\n            // Bluetooth not yet enabled so we try to enable it\r\n            try {\r\n                await this.ble.enable();\r\n                this.messageHandler('ble: successfully enabled');\r\n                available = true;\r\n            } catch (err) {\r\n//                this.alertHandler('Bluetooth is required to connect to a lock.');\r\n                  this.messageHandler('ble: Bluetooth enable not successful: ' + err);\r\n}\r\n        }\r\n        if (this.platform == 'android' && this.osVersion <= Android11) {\r\n            let result, bluetooth, location;\r\n            if (available) {\r\n                this.messageHandler('ble: check permissions');\r\n                try {\r\n                    result = await this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.BLUETOOTH);\r\n                    bluetooth = result.hasPermission;\r\n                    result = await this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.ACCESS_FINE_LOCATION);\r\n                    location = result.hasPermission;\r\n                    if (!bluetooth || !location) {\r\n                        await this.alertHandler(\"Bluetooth and Location permission are both required to scan for locks.\", true)\r\n                    }\r\n                } catch (err) {\r\n                    alert('Cannot check Bluetooth permission: ' + JSON.stringify(err));\r\n                    available = false;\r\n                }\r\n            }\r\n            if (available && !bluetooth) {\r\n                this.messageHandler('ble: request Bluetooth permission');\r\n                try {\r\n//                        await this.alertHandler(\"Bluetooth permission is necessary to connect to your lock.\", true);\r\n                    result = await this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.BLUETOOTH);\r\n                    this.messageHandler('ble: request permission done');\r\n                    available = result.hasPermission;\r\n                } catch (err) {\r\n                    alert(err);\r\n                    available = false;\r\n                }\r\n            }\r\n            if (available && !location) {\r\n                this.messageHandler('ble: request location permission');\r\n                try {\r\n//                        await this.alertHandler(\"Location permission is required to scan for locks.\", true);\r\n                    result = await this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.ACCESS_FINE_LOCATION);\r\n                    this.messageHandler('ble: request permission done');\r\n                    available = result.hasPermission;\r\n                } catch (err) {\r\n                    alert(err);\r\n                    available = false;\r\n                }\r\n            }\r\n            this.messageHandler(`ble: after requests, bluetooth allowed = ${bluetooth}, location allowed = ${location}`);\r\n        }\r\n        if (this.platform == 'android' && this.osVersion > Android11) {\r\n            let result, scan, connect;\r\n            if (available) {\r\n                this.messageHandler('ble: check permissions');\r\n                try {\r\n                    result = await this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.BLUETOOTH_SCAN);\r\n                    scan = result.hasPermission;\r\n                    result = await this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.BLUETOOTH_CONNECT);\r\n                    connect = result.hasPermission;\r\n                    this.messageHandler(`ble: checking permission, scan allowed = ${scan}, connect allowed = ${connect}`);\r\n                    if (!scan || !connect) {\r\n                        await this.alertHandler(\"Bluetooth permissions are required to scan for locks.\", true)\r\n                    }\r\n                } catch (err) {\r\n                    alert('Cannot check Bluetooth permission: ' + JSON.stringify(err));\r\n                    available = false;\r\n                }\r\n            }\r\n            if (available && !scan) {\r\n                this.messageHandler('bluetooth: check scan permission');\r\n                try {\r\n//                        await this.alertHandler(\"Bluetooth Scan permission is necessary to discover locks.\", true);\r\n                    result = await this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.BLUETOOTH_SCAN);\r\n                    scan = result.hasPermission;\r\n                    available = result.hasPermission;\r\n                } catch (err) {\r\n                    alert(err);\r\n                    available = false;\r\n                }\r\n            }\r\n            if (available && !connect) {\r\n                this.messageHandler('bluetooth: check connect permission');\r\n                try {\r\n//                        await this.alertHandler(\"Bluetooth Connect permission is required to access paired devices.\", true);\r\n                    result = await this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.BLUETOOTH_CONNECT);\r\n                    connect = result.hasPermission;\r\n                    available = result.hasPermission;\r\n                } catch (err) {\r\n                    alert(err);\r\n                    available = false;\r\n                }\r\n            }\r\n            this.messageHandler(`ble: after requests, scan allowed = ${scan}, connect allowed = ${connect}`);\r\n        }\r\n        return available;\r\n    }\r\n\r\n    /* Logic to handle enabling Bluetooth on iOS only; Android does this through\r\n     * permissions logic within the plugin.\r\n     */\r\n    iosEnable(): Promise<any> {\r\n        const that = this;\r\n        this.messageHandler('iosEnable() begins');\r\n\r\n        // start state change watcher to detect connect event only\r\n        let notifier = this.ble.startStateNotifications();\r\n        if (notifier === null) {\r\n           return Promise.reject('missing notifier');\r\n        }\r\n\r\n        // put up message to user to turn on bluetooth\r\n        this.alertHandler('Bluetooth is off.  Please turn it on to connect to a lock.');\r\n        return new Promise((resolve, reject) => {\r\n            let stateWatcher: Subscription = null;\r\n            const timer = setTimeout(() => {\r\n                reject('time expired');\r\n            }, 120 * 1000);\r\n\r\n            stateWatcher = notifier.subscribe(state => {\r\n                that.messageHandler(`new Bluetooth state: ${state}`);\r\n                let handled = false;\r\n                if (state === 'on') {\r\n                    resolve('ok');\r\n                    handled = true;\r\n                }\r\n                else if (state === 'unauthorized' || state === 'unsupported') {\r\n                    reject('invalid state: ' + state);\r\n                    handled = true;\r\n                }\r\n                if (handled) {\r\n                    clearTimeout(timer);\r\n                    stateWatcher.unsubscribe();\r\n                    stateWatcher = null;\r\n                    notifier = null;\r\n                    that.ble.stopStateNotifications().then(() => {\r\n                        that.messageHandler('change notifications ended');\r\n                    }).catch((reason) => {\r\n                        that.messageHandler('change notifications error: ' + reason);\r\n                    });\r\n                    that.alertHandler(null);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /* Pass-throughs to isolate native BLE service */\r\n\r\n    startScan(services: string[]): Observable<any> {\r\n        return this.ble.startScan(services);\r\n    }\r\n\r\n    stopScan(): Promise<any> {\r\n        return this.ble.stopScan();\r\n    }\r\n\r\n  /* Connect to an advertised BLE device.  Receives the\r\n   * advertising message from the device of interest.\r\n   * Tracks the connection state and identifies specific\r\n   * states to be noted through messageHandler.\r\n   * Returns a Subject that will echo the connection\r\n   * activity to the caller.\r\n   */\r\n    connectTo(scanData: Device): Observable<string> {\r\n        const that = this;\r\n        this.deviceId = null;\r\n        console.log('ble connecting to: ' + scanData.id);\r\n        this.selectUuids(scanData);\r\n        this.connectRepeater = new Subject<any>();\r\n        let obs: Observable<any> = this.ble.connect(scanData.id);\r\n        let notifier: Observable<any> = null;\r\n        this.connectSubscriber = obs.subscribe(\r\n            // peripheral connecting\r\n            async (peripheralData: any) => {\r\n                that.messageHandler(`bluetooth connect succeeded: name ${peripheralData.name}, id ${peripheralData.id}`);\r\n                that.deviceId = scanData.id;\r\n                that.connectRepeater.next(peripheralData);\r\n                that.opQueue.flush();\r\n                notifier = that.ble.startNotification(scanData.id, that.ServiceUuid, that.StatusUuid);\r\n                let notificationSubscriber = notifier.subscribe({\r\n                    next: (value) => that.notificationHandler(value),\r\n                    error: (error) => that.notificationError(error)\r\n                });\r\n                that.connectSubscriber.add(notificationSubscriber);\r\n            },\r\n            // peripheral disconnecting (only when initiated by peripheral)\r\n            async (result) => {\r\n                // connectFailed is true when key exchange succeeds but service list can't be\r\n                // delivered - that annoying timeout user sees when pairing.\r\n                result.connectFailed = that.deviceId === null;\r\n                that.messageHandler('bluetooth disconnected' +\r\n                    (result.connectFailed ? ' prematurely:' : ':')\r\n                    + JSON.stringify(result)\r\n                );\r\n                that.connectRepeater.error(result);\r\n                that.connectSubscriber.unsubscribe();\r\n                that.connectSubscriber = null;\r\n//              that.messageHandler('bluetooth disconnected: ' + JSON.stringify(result));\r\n                if (!result.connectFailed) {\r\n                    that.purgeConnection(that.deviceId);  // tell the OS to drop its side\r\n                }\r\n                that.deviceId = null;\r\n            }\r\n        );\r\n        return this.connectRepeater;\r\n    }\r\n\r\n    /* Convert string like F3 00 94 01 to Uint8Array\r\n     */\r\n    private readableHexToBuffer(spaceSeparatedHex: string): Uint8Array {\r\n        let n = [];\r\n        spaceSeparatedHex.split(' ').forEach(\r\n            x => {n.push(parseInt(x, 16));\r\n        });\r\n        return Uint8Array.from(n);\r\n    }\r\n\r\n    /* Convert Uint8Array to string like F3 00 94 01\r\n     */\r\n    private bufferToReadableHex(buffer: Uint8Array): string {\r\n        return Array\r\n            .from (buffer)\r\n            .map (b => b.toString(16).padStart (2, '0'))\r\n            .join (' ');\r\n    }\r\n\r\n    isLockBusy() {\r\n        return this.writeLockBusy;\r\n    }\r\n\r\n    /* writeToLock sends a command sequence to the command UUID, waits a 1/10 second\r\n     * and then reads the status UUID.  That status could be the command status or\r\n     * the lock status.  Returns a promise that resolves to either a decoded status\r\n     * object or an error message.\r\n     */\r\n    private writeToLock(commandName: string, command: Uint8Array): Promise<LockStatus> {\r\n//        const that = this;\r\n        let pendingResolve, pendingReject;\r\n        let notificationInjector = null;\r\n\r\n//        this.messageHandler(`writeToLock \"${commandName}\"`);\r\n        if (this.deviceId === null) {\r\n            this.messageHandler(`Tried to send \"${commandName}\" when disconnected`);\r\n            return Promise.reject('Disconnected - Command refused');\r\n        }\r\n        if (this.writeLockBusy === true) {\r\n            this.messageHandler(`Tried to issue \"${commandName}\" before previous operation complete`);\r\n            return Promise.reject('writeToLock - execution overlap');\r\n        }\r\n        if (this.notificationHandler != null) {\r\n            this.messageHandler(`Tried to issue \"${commandName} while waiting for notification`)\r\n            return Promise.reject('writeToLock - notification incomplete');\r\n        }\r\n        this.writeLockBusy = true;\r\n        command[SUM] = 0;\r\n        command[SUM] = command.reduce((previous, current) => (previous + current) & 0xFF);\r\n        return new Promise<LockStatus>(async (resolve, reject) => {\r\n            pendingResolve = resolve;\r\n            pendingReject = reject;\r\n            try {\r\n                this.messageHandler(`writeToLock \"${commandName}\" : ${this.bufferToReadableHex(command)}`);\r\n                this.notificationHandler = responseHandler.bind(this);\r\n                this.notificationError = errorHandler.bind(this);\r\n                await this.ble.write(this.deviceId, this.ServiceUuid, this.CommandUuid, command.buffer as ArrayBuffer);\r\n                if (commandName === 'setAlarmState') {\r\n                    // set alarm state isn't returning a notification  - inject 'correct operation' if missing\r\n                    notificationInjector = setTimeout(() => {\r\n                        notificationInjector = null;\r\n                        let fakeAlarmResponse = [\r\n                            this.readableHexToBuffer('F5 74 10 00 5F D8 FF'),\r\n                            0\r\n                        ];\r\n                        responseHandler.bind(this)(fakeAlarmResponse);\r\n                    }, 400);\r\n                }\r\n            } catch (error) {\r\n                // Error 13 indicates RESULT_INVALID_ATTRIBUTE_LENGTH\r\n                alert('Failed to write data to device:' + JSON.stringify(error));\r\n                reject('write failed');\r\n                this.writeLockBusy = false;\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Handles the notification data from Status characteristic.\r\n         *\r\n         * @param data array of notification data\r\n         */\r\n        function responseHandler(data: Array<any>) {\r\n            try {\r\n                // clear fake notification injector if active\r\n                if (notificationInjector) {\r\n                    clearTimeout(notificationInjector);\r\n                }\r\n                if (commandName === CMD_SystemExit) {\r\n                    pendingResolve({ response: ASK_correct} as LockStatus);\r\n                }\r\n                else {\r\n                    let output = 'No data';\r\n                    if (data == null) {\r\n                        throw \"No data returned from notification\";\r\n                    }\r\n                    let buffer: ArrayBuffer = data[0];\r\n                    if (buffer == null) {\r\n                        throw \"No buffer returned from notification()\";\r\n                    }\r\n                    const bytes = new Uint8Array(buffer);\r\n                    output = 'result: ' + this.bufferToReadableHex(bytes);\r\n                    if (bytes.length < DATA) {\r\n                        this.messageHandler(output);\r\n                        throw \"Truncated response \" + bytes;\r\n                    }\r\n                    let S: LockStatus  = {\r\n                        response: bytes[ASK],\r\n                        extraBytes: bytes[EXT],\r\n                        isStatus: false,\r\n                        isError: bytes[ASK] > 0x10 && bytes[ASK] < 0x26,\r\n                        verified: false,\r\n                        alarmOn: null,\r\n                        buzzerOn: null\r\n                    };\r\n                    S.responseMsg = ResponseMap[S.response];\r\n                    if (!S.responseMsg) {\r\n                        S.responseMsg = \"Unknown \" + S.response;\r\n                    }\r\n                    switch (bytes[CMD]) {\r\n                        case 0x0F:  // verify PIN\r\n                            if (bytes[ASK] === ASK_correct) {\r\n                                S.verified = true;\r\n                                output += ', verified';\r\n                            }\r\n                            else {\r\n                                output += ', ' +\r\n                                            (!S.isError ? 'unverified, returned ' : 'invalid response: ') + S.responseMsg;\r\n                            }\r\n                            break;\r\n                        case 0x60:  // read status\r\n                            S.isStatus = true;\r\n                            S.openCloseState = bytes[DATA];\r\n                            S.hookState = bytes[DATA + 1];\r\n                            S.voltageValue = bytes[8] * 256 + bytes[9];      // big-endian numbers\r\n                            S.lockId = (bytes[10] << 24) + (bytes[11] << 16)\r\n                                    + (bytes[12] << 8) + bytes[13];\r\n                            S.randData = bytes[RANDDATA];\r\n                            break;\r\n                        case 0x74:  // read/set alarm state\r\n                            S.alarmOn = bytes[DATA] === 0;\r\n                            if (bytes[EXT] !== 0) {\r\n                                output += ', alarm ' + (bytes[DATA] === 0 ? 'on' : 'off');\r\n                            }\r\n                            if (command[CMD] !== bytes[CMD]) {\r\n                                output += '  *** MISMATCH ***';\r\n                            }\r\n                            break;\r\n                        case 0x75:  // read/set buzzer state\r\n                            S.buzzerOn = bytes[DATA] === 0;\r\n                            if (bytes[EXT] !== 0) {\r\n                                output += ', buzzer ' + (bytes[DATA] === 0 ? 'on' : 'off');\r\n                            }\r\n                            if (command[CMD] !== bytes[CMD]) {\r\n                                output += '  *** MISMATCH ***';\r\n                            }\r\n                            break;\r\n                    }\r\n                    this.messageHandler(output);\r\n                    pendingResolve(S);\r\n                }\r\n            } catch (error) {\r\n                let msg = 'Failed to read lock status: ' + JSON.stringify(error);\r\n                this.messageHandler(msg);\r\n                alert(msg);\r\n                pendingReject('read failed');\r\n            }\r\n            this.writeLockBusy = false;\r\n            this.notificationHandler = null;\r\n            pendingResolve = null;\r\n            pendingReject = null;\r\n        }\r\n\r\n        function errorHandler(error) {\r\n            // iOS closes the subscription with an error() call\r\n            if (commandName === CMD_SystemExit) {\r\n                pendingResolve({ response: ASK_correct} as LockStatus);\r\n            }\r\n            else if (Array.isArray(error) && error[0] == 'Peripheral disconnected') {\r\n                // do nothing for inactivity timeout; this is an out of sequence event\r\n            }\r\n            // This handles the unexpected errors\r\n            else {\r\n                let msg = 'Notification stream returned error: ' + JSON.stringify(error);\r\n                this.messageHandler(msg);\r\n                alert(msg);\r\n                pendingReject('read failed');\r\n            }\r\n            this.writeLockBusy = false;\r\n            this.notificationHandler = null;\r\n            pendingResolve = null;\r\n            pendingReject = null;\r\n        }\r\n    }\r\n\r\n    // read data from a characteristic, turn binary struct into status object\r\n    readLockStatus(): Promise<LockStatus> {\r\n        const command = this.readableHexToBuffer('F5 60 00 00 5F B4');\r\n        return <Promise<LockStatus>> this.opQueue.enqueue(\r\n             ()=> this.writeToLock('read-state', command)\r\n        );\r\n    }\r\n\r\n    /* Handle verification of PIN code to enable lock access.  From connect point,\r\n     * lock allows 30 seconds to complete verification before it disconnects.  For\r\n     * simplicity and to limit guessing, a failed verification will block until\r\n     * the disconnect, rather than juggling live connect periods with the user\r\n     * trying to enter new PINs.\r\n     */\r\n    handleVerification(lockPair: LockParameters): Promise<VerifyOutcome> {\r\n        let readable = 'F5 0F 00 04 5F 3B';\r\n        for (let zi = 0; zi < 4; zi++) {\r\n//            readable = readable + ' 3' + lockPair.pin.substr(zi, 1);\r\n            readable += ' ' + lockPair.pin.charCodeAt(zi).toString(16);\r\n        }\r\n        const command = this.readableHexToBuffer(readable);\r\n        return  <Promise<VerifyOutcome>> this.opQueue.enqueue(\r\n            ()=> this.writeToLock('verify', command).then( (result: LockStatus) => {\r\n                return { verified: result.verified, isError: result.isError, msg: result.responseMsg};\r\n            })\r\n        );\r\n    }\r\n\r\n    /* Query the lock to get the alarm state.  The buzzer should be in the same\r\n     * state, so it won't be checked.  Returns a Promise with TRUE meaning alarm\r\n     * is audible.\r\n     */\r\n    getAlarmState(): Promise<boolean> {\r\n        const command = this.readableHexToBuffer('F5 74 00 00 5F 3B');\r\n        return <Promise<boolean>> this.opQueue.enqueue(\r\n            ()=> this.writeToLock('getAlarmState', command)\r\n        ).then( (result: LockStatus) => {\r\n            if (result.alarmOn === null) {\r\n                this.messageHandler('getAlarmState: invalid status: ' + JSON.stringify(result));\r\n            }\r\n            return result.alarmOn !== null && result.alarmOn;\r\n        });\r\n    }\r\n\r\n    /* Called to set the volume on/off for both the alarm and the buzzer.\r\n     * These operations seem to take a lot of time - without a significant\r\n     * intervening delay, the second will fail to return a notification.\r\n     * Outcome seems to be random.\r\n     */\r\n    async setAlarmState(enabled): Promise<LockStatus> {\r\n\r\n        let command = this.readableHexToBuffer('F5 75 00 01 5F 3B ' + (enabled ? '00' : '01'));\r\n        let result = await <Promise<LockStatus>> this.opQueue.enqueue(\r\n            ()=> this.writeToLock('setBuzzerState', command)\r\n        );\r\n\r\n        // include significant delay to not get ahead of lock's processor\r\n        await this.waitForMilliseconds(600);\r\n\r\n        command = this.readableHexToBuffer('F5 74 00 01 5F 3B ' + (enabled ? '00' : '01'));\r\n        result = await <Promise<LockStatus>> this.opQueue.enqueue(\r\n            ()=> this.writeToLock('setAlarmState', command)\r\n        );\r\n        return result;\r\n   }\r\n\r\n   /* Finding the correct unlock command has been a battle.\r\n     *\r\n     * The following did open the lock, but isn't documented:\r\n     *    F5 61 00 01 5F EB 35\r\n     * This is the official unlock command, but we can't figure out how to read RandData\r\n     *    F5 61 00 01 5F XX (0x35 ^ RandData)\r\n     * The convenient 'unlock for 5 seconds' command, again crippled by not having RandData\r\n     *    F5 61 00 01 5F XX (0x36 ^ RandData)\r\n     * The V1.0 document says to use:\r\n     *    F5 61 00 00 5F B5\r\n     */\r\n    // toggleLock(encryptByte): Promise<LockStatus> {\r\n    //     let command = this.readableHexToBuffer('F5 61 00 01 5F 00 00');\r\n    //     command[DATA] = 0x35 ^ encryptByte;\r\n    //     command[SUM] = (0x01B6 + command[DATA]) & 0xFF;\r\n    //     return this.writeToLock('toggle', command);\r\n    // }\r\n\r\n    triggerLock(toggle: ('toggle' | 'auto-relock'), encryptByte: number): Promise<LockStatus> {\r\n        let command = this.readableHexToBuffer('F5 61 00 01 5F 00 00');\r\n        command[DATA] = (toggle === 'toggle' ? 0x35 : 0x36) ^ encryptByte;\r\n//        command[SUM] = (0x01B6 + command[DATA]) & 0xFF;\r\n        return  <Promise<LockStatus>> this.opQueue.enqueue(\r\n            ()=> this.writeToLock(toggle, command)\r\n        );\r\n    }\r\n\r\n    setDateTime(now: Date) {\r\n        let command = this.readableHexToBuffer('F5 62 00 06 5F 00'\r\n            + ' ' + ('0' + now.getFullYear()).slice(-2)\r\n            + ' ' + ('0' + now.getMonth()).slice(-2)\r\n            + ' ' + ('0' + now.getDate()).slice(-2)\r\n            + ' ' + ('0' + now.getHours()).slice(-2)\r\n            + ' ' + ('0' + now.getMinutes()).slice(-2)\r\n            + ' ' + ('0' + now.getSeconds()).slice(-2)\r\n        );\r\n        return  <Promise<LockStatus>> this.opQueue.enqueue(\r\n            ()=> this.writeToLock('setTime', command)\r\n        );\r\n    }\r\n\r\n\r\n    // Send system-exit command; lock should break the connection\r\n    putLockToSleep(): Promise<LockStatus> {\r\n        const command = this.readableHexToBuffer('F5 6F 00 00 5F C3');\r\n        return  <Promise<LockStatus>> this.opQueue.enqueue(\r\n            ()=> this.writeToLock(CMD_SystemExit, command)\r\n        );\r\n    }\r\n\r\n    // Restores lock back to factory default or similar - used only in FAB menu\r\n    initializeLock(): Promise<LockStatus> {\r\n        const command = this.readableHexToBuffer('F5 65 00 00 5F B9');\r\n        return  <Promise<LockStatus>> this.opQueue.enqueue(\r\n            ()=> this.writeToLock(CMD_SystemInit, command)\r\n        );\r\n    }\r\n\r\n    /* Called to ensure the OS has dropped any logical connection.  Will not trigger\r\n     * a disconnect event.\r\n     */\r\n    private purgeConnection(deviceId) {\r\n        this.ble.disconnect(deviceId).then(() => {\r\n            console.log('Disconnected');\r\n        }).catch(reason => {\r\n            this.messageHandler('purgeConnection(): ' + reason);\r\n        });\r\n    }\r\n\r\n    isConnected(deviceId) {\r\n        return this.ble.isConnected(deviceId);\r\n    }\r\n\r\n    readRSSI() {\r\n        return this.ble.readRSSI(this.deviceId)\r\n    }\r\n\r\n    selectUuids(target: Device) {\r\n        function shorten(uuid, extract) {\r\n            return extract ? uuid.substr(4,4).toUpperCase() : uuid;\r\n        }\r\n\r\n        if (target === undefined || !('id' in target)) {\r\n             throw 'no device provided';\r\n        }\r\n        const isShort = !target.hasLongUuids;\r\n        this.ServiceUuid = shorten(this.LongServiceUuid, isShort);\r\n        this.StatusUuid = shorten(this.LongStatusUuid, isShort);\r\n        this.CommandUuid = shorten(this.LongCommandUuid, isShort);\r\n        this.ConfigUuid = shorten(this.LongConfigUuid, isShort);\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Force disconnect - assume (on Android) the connection has been interrupted\r\n     * but not properly dropped.  None of the state information or subscriptions\r\n     * are usable.  Do a brute force write to the lock to tell it to disconnect.\r\n     * @param MAC or UUID\r\n     * @returns void\r\n     */\r\n    async forceDisconnect(device: Device) {\r\n        if (this.platform == 'android') {\r\n            // do stuff\r\n            this.messageHandler(`** Attempting Disconnect **`);\r\n            this.ble.disconnect(device.id).catch(err => {\r\n                this.messageHandler('-- disconnected failed\\n');\r\n            })\r\n            // :: this is the hard way to do the same thing\r\n            // try {\r\n            //     // sleep command: CMD_SystemExit\r\n            //     const command = this.readableHexToBuffer('F5 6F 00 00 5F C3');\r\n            //     command[SUM] = 0;\r\n            //     command[SUM] = command.reduce((previous, current) => (previous + current) & 0xFF);\r\n            //     this.selectUuids(device);\r\n            //     await this.ble.write(device.id, this.ServiceUuid, this.CommandUuid, command.buffer as ArrayBuffer);\r\n            // } catch (error) {\r\n            //     // Error 13 indicates RESULT_INVALID_ATTRIBUTE_LENGTH\r\n            //     this.messageHandler('Failed to write data to device:' + JSON.stringify(error));\r\n            // }\r\n        }\r\n    }\r\n\r\n    async waitForMilliseconds(ms): Promise<void> {\r\n        return new Promise(resolve => {\r\n            setTimeout(resolve, ms);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n    }\r\n}\r\n","/**\r\n * Tactical Traps Bluetooth Lock App\r\n * (c) 2019-2022 Tactical Traps https://www.tacticaltraps.com/\r\n * License: Proprietary, by permission only\r\n */\r\n\r\n import { Injectable } from '@angular/core';\r\n\r\nexport interface Device {\r\n    id: string;\r\n    name: string;\r\n    rssi: any;\r\n    advertising: any;\r\n    hasProperName?: boolean;\r\n    hasLongUuids?: boolean;\r\n    isNotAGhost?: boolean;\r\n}\r\n\r\nexport const UnknownDeviceName = 'Unknown Device';\r\nexport type BleDeviceList = Device[];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DevicesService {\r\n\r\n    devices: BleDeviceList = [];\r\n    decoder = new TextDecoder('utf-8');\r\n    blocking = false;\r\n\r\n    constructor() {\r\n        console.log('Devices Service initializing');\r\n    }\r\n\r\n    hexByte(n) {\r\n        return ('0' + n.toString(16)).substr(-2, 2).toUpperCase();\r\n    }\r\n\r\n    /* decode the peripheral connection data received with a\r\n     * successful connection\r\n     */\r\n    advertisementDecoder(buffer) {\r\n        this.blocking = true;\r\n        let advStrings = [];\r\n        const bytes = new Uint8Array(buffer);\r\n        let index = 0;\r\n        while (index < bytes.length) {\r\n            let s, count;\r\n            let adLength = bytes[index++];\r\n            if (adLength === 0) break;\r\n            const adType = bytes[index++];\r\n            adLength = adLength - 1;\r\n            let adData = new Uint8Array(buffer, index, adLength);\r\n            switch (adType) {\r\n                case 1:\r\n                    s = 'Flags: ' + this.hexByte(bytes[index]);\r\n                    break;\r\n                case 3:\r\n                    count = adLength / 2;\r\n                    s = 'service:';\r\n                    for (let zi = 0; zi < count; zi++) {\r\n                        s += ' ' + this.hexByte(adData[zi * 2 + 1]) + this.hexByte(adData[zi * 2]);\r\n                    }\r\n                    break;\r\n                case 7:\r\n                    s = 'UUID: ';\r\n                    let p1 = [], p2 = [];\r\n                    for (let zi = 0; zi < adLength; zi++) {\r\n                        p1.unshift(this.hexByte(adData[zi]));\r\n                    }\r\n                    p2.push(p1.slice(0, 4).join(''));\r\n                    p2.push(p1.slice(4, 6).join(''));\r\n                    p2.push(p1.slice(6, 8).join(''));\r\n                    p2.push(p1.slice(8, 10).join(''));\r\n                    p2.push(p1.slice(10, 16).join(''));\r\n                    s = p2.join('-');\r\n                    break;\r\n                case 8: case 9:\r\n                    let adView = new DataView(buffer, index, adLength);\r\n                    try {\r\n                        s = this.decoder.decode(adView);\r\n                    } catch (e) {\r\n                        s = adView;\r\n                    }\r\n                    break;\r\n                default:\r\n                    s = 'raw: ';\r\n                    for (let zi = 0; zi < adLength; zi++) {\r\n                        if (zi > 0) s += \", \";\r\n                        s += this.hexByte(adData[zi]);\r\n                    }\r\n                    break;\r\n            }\r\n            advStrings.push('0x' + adType.toString(16) + ': ' + s);\r\n            index += adLength;\r\n        }\r\n        this.blocking = false;\r\n        return advStrings;\r\n    }\r\n\r\n    addDevice(device): any[] {\r\n        console.log('DeviceFactory addDevice \"' + device.id + '\", \"' + device.name + '\"');\r\n        // decode advertisement to console unless debugger is paused in decoder\r\n        if (!this.blocking) {\r\n            let adverts = this.advertisementDecoder(device.advertising);\r\n//            adverts.forEach(function(s) { console.log(s); });\r\n//            console.log('.. RSSI = ' + device.rssi);\r\n        }\r\n        if (this.devices.find(item => item.id === device.id && item.name === device.name)) {\r\n            console.log('duplicate');\r\n        }\r\n        else {\r\n            this.devices.push(device);\r\n        }\r\n        return this.devices;\r\n}\r\n\r\n    getDevices(): BleDeviceList {\r\n        console.log('DeviceFactory getDevices');\r\n        return this.devices;\r\n    }\r\n\r\n    getDevice(id) {\r\n        console.log('DeviceFactory getDevice \"' + id + '\"');\r\n        let index = this.devices.findIndex(device => device.id === id);\r\n          return index > -1 ? this.devices[index] : null;\r\n    }\r\n\r\n    reset() {\r\n      console.log('DeviceFactory reset');\r\n      this.devices = [];\r\n    }\r\n\r\n}\r\n","/**\r\n * Tactical Traps Bluetooth Lock App\r\n * (c) 2019-2022 Tactical Traps https://www.tacticaltraps.com/\r\n * License: Proprietary, by permission only\r\n */\r\n\r\n import { Injectable } from '@angular/core';\r\nimport { Preferences } from '@capacitor/preferences';\r\n\r\nexport interface LockParameters {\r\n    serialNumber: string;\r\n    pin: string;\r\n    name: string;\r\n    \r\n}\r\n\r\nexport const LockDataErrors = {\r\n    SUCCESS: 0,\r\n    NATIVE_WRITE_FAILED : 1,\r\n    ITEM_NOT_FOUND : 2,\r\n    NULL_REFERENCE : 3,\r\n    UNDEFINED_TYPE : 4,\r\n    JSON_ERROR : 5,\r\n    WRONG_PARAMETER : 6,\r\n    // additional parameter errors\r\n    DUPLICATE_KEY : 7,\r\n    BAD_NAME : 8\r\n};\r\n\r\nexport interface LockDataResult {\r\n    code: number;\r\n    exception?: string;\r\n    source?: string\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LockDataService {\r\n\r\n    locks: LockParameters[] = [];\r\n    blocking = false;\r\n    _statusMessageHandler = function(x) {};\r\n\r\n    constructor() {\r\n        console.log('Pin Store Service initializing');\r\n    }\r\n\r\n    /* Call at startup to load any exising Pin pairs.  Return a Promise producing\r\n     * either TRUE or an error message.\r\n     */\r\n\r\n    setup(statusMessageHandler) {\r\n        if (statusMessageHandler) {\r\n            this._statusMessageHandler = statusMessageHandler;\r\n        }\r\n        this._statusMessageHandler('lock-data: activate');\r\n    }\r\n\r\n    makeLock(serialNumber, pin): LockParameters {\r\n        return { serialNumber, pin, name: '' };\r\n    }\r\n\r\n    hexByte(n) {\r\n        return ('0' + n.toString(16)).substr(-2, 2).toUpperCase();\r\n    }\r\n\r\n    /* clear the store of any existing serial/PIN pairs\r\n     */\r\n    clear(): Promise<void> {\r\n        return Preferences.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if a device already exists.\r\n     * @param name device id found by scanning\r\n     * @returns Promise<Pin>, rejects with LockDataError\r\n     */\r\n    getAuthorization(name): Promise<string> {\r\n        this._statusMessageHandler('getAuthorization for \"' + name + '\"');\r\n        if (typeof name !== 'string') {\r\n            return Promise.reject({exception: `getAuthorization: bad name \"${name}\"`, code: LockDataErrors.BAD_NAME} );\r\n        }\r\n        return Preferences.get({ key: name }).then(v => {\r\n            if (v.value === null) {\r\n                throw { code: LockDataErrors.ITEM_NOT_FOUND };\r\n            }\r\n            return v.value;\r\n        });\r\n    }\r\n\r\n    /** Add a new device to permanent storage.\r\n     * @param lock target device\r\n     * @returns result of storage save as Promise of LockDataErrors\r\n     */\r\n    addAuthorization(lock: LockParameters): Promise<number> {\r\n        this._statusMessageHandler('LockData addDevice \"' + lock.serialNumber + '\", \"' + lock.pin + '\"');\r\n\r\n        return this.getAuthorization(lock.serialNumber).then(() => {\r\n            this._statusMessageHandler('*** error: adding duplicate device');\r\n            alert('LockData: adding duplicate device');\r\n            return LockDataErrors.DUPLICATE_KEY;\r\n        })\r\n        .catch(() => {\r\n            return Preferences.set({ key: lock.serialNumber, value: lock.pin }).then(() => {\r\n                return LockDataErrors.SUCCESS;\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            this._statusMessageHandler(JSON.stringify(error));\r\n            return LockDataErrors.NATIVE_WRITE_FAILED;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets an arbitrary item from storage.\r\n     * @param name\r\n     * @returns Promise of string or LockDataResult\r\n     */\r\n     getValue(name): Promise<string> {\r\n        this._statusMessageHandler('getValue for \"' + name + '\"');\r\n        if (typeof name !== 'string') {\r\n            return Promise.reject( {exception: `getValue: bad name \"${name}\"`, code: LockDataErrors.BAD_NAME} );\r\n        }\r\n        return Preferences.get({ key: name }).then(v => {\r\n            return v.value;\r\n        });\r\n    }\r\n\r\n    getJsonValue(name): Promise<object> {\r\n        return this.getValue(name).then(value => {\r\n            return JSON.parse(value);\r\n        });\r\n    }\r\n\r\n    /** set arbitrary <key :: string> in storage\r\n     * @returns Promise to success or LockDataResult\r\n     */\r\n    setValue(key: string, value: string): Promise<any> {\r\n        return Preferences.set({key, value}).then(() => {\r\n            return LockDataErrors.SUCCESS;\r\n        });\r\n    }\r\n\r\n    /** set arbitrary <key :: object> in storage\r\n     * @returns Promise to success or LockDataResult\r\n     */\r\n     setJsonValue(name, object: any): Promise<object> {\r\n        return this.setValue(name, JSON.stringify(object));\r\n    }\r\n\r\n}\r\n","/**\r\n * Tactical Traps Bluetooth Lock App\r\n * (c) 2019-2022 Tactical Traps https://www.tacticaltraps.com/\r\n * License: Proprietary, by permission only\r\n */\r\n\r\n/** DynamicQueue\r\n *\r\n * A class designed to queue Promise-returning functions for\r\n * sequential execution.\r\n */\r\n\r\nexport class DynamicQueue {\r\n    queue = [];\r\n    pendingPromise = false;\r\n    workingOnPromise = false;\r\n    \r\n    flush() {\r\n        this.queue = [];\r\n    }\r\n\r\n    /**\r\n     * Add a function to the queue for execution; return an enclosing Promise.\r\n     * The secondary Promise is needed because the function's Promise can only\r\n     * be secured by beginning execution.\r\n     *\r\n     * @param operation\r\n     * @returns Promise for operation\r\n     */\r\n     enqueue(operation: () => Promise<any>): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            this.queue.push({\r\n                operation,\r\n                resolve,\r\n                reject,\r\n            });\r\n            this.dequeue();\r\n        });\r\n    }\r\n\r\n    /** If not busy, pull next function from queue and execute it.  When the\r\n     *  promise completes, the next item is recursively started.  Repeats until\r\n     *  the queue is empty.  With promises, the enqueueing task only needs to\r\n     *  invoke dequeue() when it pushes onto an empty queue.\r\n     */\r\n    private dequeue() {\r\n        if (this.workingOnPromise) {\r\n            return false;\r\n        }\r\n        const item = this.queue.shift();\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        try {\r\n            this.workingOnPromise = true;\r\n            item.operation()\r\n                .then((value) => {\r\n                    this.workingOnPromise = false;\r\n                    item.resolve(value);\r\n                    this.dequeue();\r\n                })\r\n                .catch(err => {\r\n                    this.workingOnPromise = false;\r\n                    item.reject(err);\r\n                    this.dequeue();\r\n                });\r\n        } catch (err) {\r\n            this.workingOnPromise = false;\r\n            item.reject(err);\r\n            this.dequeue();\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t7518,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t1981,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t1603,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t2273,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t9642,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t2095,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t2335,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t8221,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t7184,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t8759,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t4248,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t9863,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t1769,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t2569,\n\t\t\"default-node_modules_ionic_core_dist_esm_data-174ad5e0_js\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t6534,\n\t\t\"default-node_modules_ionic_core_dist_esm_data-174ad5e0_js\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t5458,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t654,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t6034,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input-password-toggle.entry.js\": [\n\t\t5196,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input-password-toggle_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t761,\n\t\t\"default-node_modules_ionic_core_dist_esm_input_utils-28bf4ef0_js-node_modules_ionic_core_dist-c72fbc\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t6492,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t9557,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t8353,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t1024,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t9160,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t393,\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-option.entry.js\": [\n\t\t8442,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-option_entry_js\"\n\t],\n\t\"./ion-picker-column.entry.js\": [\n\t\t3110,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column_entry_js\"\n\t],\n\t\"./ion-picker.entry.js\": [\n\t\t5575,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t6772,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t4810,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t4639,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t628,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t852,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t1479,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t4065,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t7971,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t3184,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment-content.entry.js\": [\n\t\t4312,\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment-content_entry_js\"\n\t],\n\t\"./ion-segment-view.entry.js\": [\n\t\t4540,\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment-view_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t469,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select-modal.entry.js\": [\n\t\t7101,\n\t\t\"node_modules_ionic_core_dist_esm_ion-select-modal_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t8471,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t388,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t2392,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t6059,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t5427,\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t198,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t1735,\n\t\t\"default-node_modules_ionic_core_dist_esm_input_utils-28bf4ef0_js-node_modules_ionic_core_dist-c72fbc\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t7510,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5297,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8996;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 4140;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["NgModule","PreloadAllModules","RouterModule","routes","path","loadChildren","then","m","HomePageModule","redirectTo","pathMatch","AppRoutingModule","__decorate","imports","forRoot","preloadingStrategy","exports","Component","Platform","SplashScreen","StatusBar","AppComponent","constructor","platform","initializeApp","ready","val","hide","clickyClasses","window","nativeclick","watch","selector","template","__NG_CLI_RESOURCE__0","BrowserModule","RouteReuseStrategy","IonicModule","IonicRouteStrategy","AndroidPermissions","BLE","BleService","DevicesService","LockDataService","AppModule","declarations","providers","provide","useClass","bootstrap","Injectable","Device","System","Subject","DynamicQueue","CMD","ASK","EXT","SUM","DATA","RANDDATA","CMD_SystemExit","CMD_SystemInit","ASK_correct","ASK_failure","ASK_timeout","ASK_unknown","ASK_checksum","ASK_password_not_verified","ASK_failed_verification","ResponseMap","IsLocked","IsUnhooked","IsHooked","InactiveDisconnectTime","Android11","androidPermissions","ble","deviceId","connectSubscriber","notificationSubscriber","connectRepeater","opQueue","messageHandler","alertHandler","writeLockBusy","LongServiceUuid","LongStatusUuid","LongCommandUuid","LongConfigUuid","PERMISSION","BLUETOOTH_CONNECT","BLUETOOTH_SCAN","setup","_messageHandler","_alertHandler","console","log","osDataRequest","getInfo","standin","isEnabled","a","b","Promise","reject","enable","startScan","stopScan","alert","q","iosEnable","bind","isAvailable","_this","_asyncToGenerator","available","deviceInfo","operatingSystem","osVersion","e","err","result","bluetooth","location","checkPermission","BLUETOOTH","hasPermission","ACCESS_FINE_LOCATION","JSON","stringify","requestPermission","scan","connect","that","notifier","startStateNotifications","resolve","stateWatcher","timer","setTimeout","subscribe","state","handled","clearTimeout","unsubscribe","stopStateNotifications","catch","reason","services","connectTo","scanData","id","selectUuids","obs","_ref","peripheralData","name","next","flush","startNotification","ServiceUuid","StatusUuid","value","notificationHandler","error","notificationError","add","_x","apply","arguments","_ref2","connectFailed","purgeConnection","_x2","readableHexToBuffer","spaceSeparatedHex","n","split","forEach","x","push","parseInt","Uint8Array","from","bufferToReadableHex","buffer","Array","map","toString","padStart","join","isLockBusy","writeToLock","commandName","command","_this2","pendingResolve","pendingReject","notificationInjector","reduce","previous","current","_ref3","responseHandler","errorHandler","write","CommandUuid","fakeAlarmResponse","_x3","_x4","data","response","output","bytes","length","S","extraBytes","isStatus","isError","verified","alarmOn","buzzerOn","responseMsg","openCloseState","hookState","voltageValue","lockId","randData","msg","isArray","readLockStatus","enqueue","handleVerification","lockPair","readable","zi","pin","charCodeAt","getAlarmState","setAlarmState","enabled","_this3","waitForMilliseconds","triggerLock","toggle","encryptByte","setDateTime","now","getFullYear","slice","getMonth","getDate","getHours","getMinutes","getSeconds","putLockToSleep","initializeLock","disconnect","isConnected","readRSSI","target","shorten","uuid","extract","substr","toUpperCase","undefined","isShort","hasLongUuids","ConfigUuid","forceDisconnect","device","_this4","ms","ngOnDestroy","providedIn","UnknownDeviceName","devices","decoder","TextDecoder","blocking","hexByte","advertisementDecoder","advStrings","index","s","count","adLength","adType","adData","p1","p2","unshift","adView","DataView","decode","addDevice","adverts","advertising","find","item","getDevices","getDevice","findIndex","reset","Preferences","LockDataErrors","SUCCESS","NATIVE_WRITE_FAILED","ITEM_NOT_FOUND","NULL_REFERENCE","UNDEFINED_TYPE","JSON_ERROR","WRONG_PARAMETER","DUPLICATE_KEY","BAD_NAME","locks","_statusMessageHandler","statusMessageHandler","makeLock","serialNumber","clear","getAuthorization","exception","code","get","key","v","addAuthorization","lock","set","getValue","getJsonValue","parse","setValue","setJsonValue","object","queue","pendingPromise","workingOnPromise","operation","dequeue","shift","environment","production","enableProdMode","platformBrowserDynamic","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[9,10]}