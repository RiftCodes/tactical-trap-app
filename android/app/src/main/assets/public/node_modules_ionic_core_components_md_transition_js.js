"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_components_md_transition_js"],{

/***/ 5678:
/*!**************************************************************!*\
  !*** ./node_modules/@ionic/core/components/md.transition.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   mdTransitionAnimation: () => (/* binding */ mdTransitionAnimation)
/* harmony export */ });
/* harmony import */ var _animation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animation.js */ 318);
/* harmony import */ var _index2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index2.js */ 3112);
/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */


const mdTransitionAnimation = (_, opts) => {
  var _a, _b, _c;
  const OFF_BOTTOM = '40px';
  const CENTER = '0px';
  const backDirection = opts.direction === 'back';
  const enteringEl = opts.enteringEl;
  const leavingEl = opts.leavingEl;
  const ionPageElement = (0,_index2_js__WEBPACK_IMPORTED_MODULE_0__.g)(enteringEl);
  const enteringToolbarEle = ionPageElement.querySelector('ion-toolbar');
  const rootTransition = (0,_animation_js__WEBPACK_IMPORTED_MODULE_1__.c)();
  rootTransition.addElement(ionPageElement).fill('both').beforeRemoveClass('ion-page-invisible');
  // animate the component itself
  if (backDirection) {
    rootTransition.duration(((_a = opts.duration) !== null && _a !== void 0 ? _a : 0) || 200).easing('cubic-bezier(0.47,0,0.745,0.715)');
  } else {
    rootTransition.duration(((_b = opts.duration) !== null && _b !== void 0 ? _b : 0) || 280).easing('cubic-bezier(0.36,0.66,0.04,1)').fromTo('transform', `translateY(${OFF_BOTTOM})`, `translateY(${CENTER})`).fromTo('opacity', 0.01, 1);
  }
  // Animate toolbar if it's there
  if (enteringToolbarEle) {
    const enteringToolBar = (0,_animation_js__WEBPACK_IMPORTED_MODULE_1__.c)();
    enteringToolBar.addElement(enteringToolbarEle);
    rootTransition.addAnimation(enteringToolBar);
  }
  // setup leaving view
  if (leavingEl && backDirection) {
    // leaving content
    rootTransition.duration(((_c = opts.duration) !== null && _c !== void 0 ? _c : 0) || 200).easing('cubic-bezier(0.47,0,0.745,0.715)');
    const leavingPage = (0,_animation_js__WEBPACK_IMPORTED_MODULE_1__.c)();
    leavingPage.addElement((0,_index2_js__WEBPACK_IMPORTED_MODULE_0__.g)(leavingEl)).onFinish(currentStep => {
      if (currentStep === 1 && leavingPage.elements.length > 0) {
        leavingPage.elements[0].style.setProperty('display', 'none');
      }
    }).fromTo('transform', `translateY(${CENTER})`, `translateY(${OFF_BOTTOM})`).fromTo('opacity', 1, 0);
    rootTransition.addAnimation(leavingPage);
  }
  return rootTransition;
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfY29tcG9uZW50c19tZF90cmFuc2l0aW9uX2pzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNzRDtBQUNEO0FBRXJELE1BQU1JLHFCQUFxQixHQUFHQSxDQUFDQyxDQUFDLEVBQUVDLElBQUksS0FBSztFQUN2QyxJQUFJQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRTtFQUNkLE1BQU1DLFVBQVUsR0FBRyxNQUFNO0VBQ3pCLE1BQU1DLE1BQU0sR0FBRyxLQUFLO0VBQ3BCLE1BQU1DLGFBQWEsR0FBR04sSUFBSSxDQUFDTyxTQUFTLEtBQUssTUFBTTtFQUMvQyxNQUFNQyxVQUFVLEdBQUdSLElBQUksQ0FBQ1EsVUFBVTtFQUNsQyxNQUFNQyxTQUFTLEdBQUdULElBQUksQ0FBQ1MsU0FBUztFQUNoQyxNQUFNQyxjQUFjLEdBQUdiLDZDQUFpQixDQUFDVyxVQUFVLENBQUM7RUFDcEQsTUFBTUcsa0JBQWtCLEdBQUdELGNBQWMsQ0FBQ0UsYUFBYSxDQUFDLGFBQWEsQ0FBQztFQUN0RSxNQUFNQyxjQUFjLEdBQUdsQixnREFBZSxDQUFDLENBQUM7RUFDeENrQixjQUFjLENBQUNDLFVBQVUsQ0FBQ0osY0FBYyxDQUFDLENBQUNLLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsb0JBQW9CLENBQUM7RUFDOUY7RUFDQSxJQUFJVixhQUFhLEVBQUU7SUFDZk8sY0FBYyxDQUFDSSxRQUFRLENBQUMsQ0FBQyxDQUFDaEIsRUFBRSxHQUFHRCxJQUFJLENBQUNpQixRQUFRLE1BQU0sSUFBSSxJQUFJaEIsRUFBRSxLQUFLLEtBQUssQ0FBQyxHQUFHQSxFQUFFLEdBQUcsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDaUIsTUFBTSxDQUFDLGtDQUFrQyxDQUFDO0VBQ3hJLENBQUMsTUFDSTtJQUNETCxjQUFjLENBQ1RJLFFBQVEsQ0FBQyxDQUFDLENBQUNmLEVBQUUsR0FBR0YsSUFBSSxDQUFDaUIsUUFBUSxNQUFNLElBQUksSUFBSWYsRUFBRSxLQUFLLEtBQUssQ0FBQyxHQUFHQSxFQUFFLEdBQUcsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUMxRWdCLE1BQU0sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUN4Q0MsTUFBTSxDQUFDLFdBQVcsRUFBRSxjQUFjZixVQUFVLEdBQUcsRUFBRSxjQUFjQyxNQUFNLEdBQUcsQ0FBQyxDQUN6RWMsTUFBTSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0VBQ25DO0VBQ0E7RUFDQSxJQUFJUixrQkFBa0IsRUFBRTtJQUNwQixNQUFNUyxlQUFlLEdBQUd6QixnREFBZSxDQUFDLENBQUM7SUFDekN5QixlQUFlLENBQUNOLFVBQVUsQ0FBQ0gsa0JBQWtCLENBQUM7SUFDOUNFLGNBQWMsQ0FBQ1EsWUFBWSxDQUFDRCxlQUFlLENBQUM7RUFDaEQ7RUFDQTtFQUNBLElBQUlYLFNBQVMsSUFBSUgsYUFBYSxFQUFFO0lBQzVCO0lBQ0FPLGNBQWMsQ0FBQ0ksUUFBUSxDQUFDLENBQUMsQ0FBQ2QsRUFBRSxHQUFHSCxJQUFJLENBQUNpQixRQUFRLE1BQU0sSUFBSSxJQUFJZCxFQUFFLEtBQUssS0FBSyxDQUFDLEdBQUdBLEVBQUUsR0FBRyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUNlLE1BQU0sQ0FBQyxrQ0FBa0MsQ0FBQztJQUNwSSxNQUFNSSxXQUFXLEdBQUczQixnREFBZSxDQUFDLENBQUM7SUFDckMyQixXQUFXLENBQ05SLFVBQVUsQ0FBQ2pCLDZDQUFpQixDQUFDWSxTQUFTLENBQUMsQ0FBQyxDQUN4Q2MsUUFBUSxDQUFFQyxXQUFXLElBQUs7TUFDM0IsSUFBSUEsV0FBVyxLQUFLLENBQUMsSUFBSUYsV0FBVyxDQUFDRyxRQUFRLENBQUNDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDdERKLFdBQVcsQ0FBQ0csUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDRSxLQUFLLENBQUNDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDO01BQ2hFO0lBQ0osQ0FBQyxDQUFDLENBQ0dULE1BQU0sQ0FBQyxXQUFXLEVBQUUsY0FBY2QsTUFBTSxHQUFHLEVBQUUsY0FBY0QsVUFBVSxHQUFHLENBQUMsQ0FDekVlLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM1Qk4sY0FBYyxDQUFDUSxZQUFZLENBQUNDLFdBQVcsQ0FBQztFQUM1QztFQUNBLE9BQU9ULGNBQWM7QUFDekIsQ0FBQyIsInNvdXJjZXMiOlsiLi9ub2RlX21vZHVsZXMvQGlvbmljL2NvcmUvY29tcG9uZW50cy9tZC50cmFuc2l0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogKEMpIElvbmljIGh0dHA6Ly9pb25pY2ZyYW1ld29yay5jb20gLSBNSVQgTGljZW5zZVxuICovXG5pbXBvcnQgeyBjIGFzIGNyZWF0ZUFuaW1hdGlvbiB9IGZyb20gJy4vYW5pbWF0aW9uLmpzJztcbmltcG9ydCB7IGcgYXMgZ2V0SW9uUGFnZUVsZW1lbnQgfSBmcm9tICcuL2luZGV4Mi5qcyc7XG5cbmNvbnN0IG1kVHJhbnNpdGlvbkFuaW1hdGlvbiA9IChfLCBvcHRzKSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgY29uc3QgT0ZGX0JPVFRPTSA9ICc0MHB4JztcbiAgICBjb25zdCBDRU5URVIgPSAnMHB4JztcbiAgICBjb25zdCBiYWNrRGlyZWN0aW9uID0gb3B0cy5kaXJlY3Rpb24gPT09ICdiYWNrJztcbiAgICBjb25zdCBlbnRlcmluZ0VsID0gb3B0cy5lbnRlcmluZ0VsO1xuICAgIGNvbnN0IGxlYXZpbmdFbCA9IG9wdHMubGVhdmluZ0VsO1xuICAgIGNvbnN0IGlvblBhZ2VFbGVtZW50ID0gZ2V0SW9uUGFnZUVsZW1lbnQoZW50ZXJpbmdFbCk7XG4gICAgY29uc3QgZW50ZXJpbmdUb29sYmFyRWxlID0gaW9uUGFnZUVsZW1lbnQucXVlcnlTZWxlY3RvcignaW9uLXRvb2xiYXInKTtcbiAgICBjb25zdCByb290VHJhbnNpdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgIHJvb3RUcmFuc2l0aW9uLmFkZEVsZW1lbnQoaW9uUGFnZUVsZW1lbnQpLmZpbGwoJ2JvdGgnKS5iZWZvcmVSZW1vdmVDbGFzcygnaW9uLXBhZ2UtaW52aXNpYmxlJyk7XG4gICAgLy8gYW5pbWF0ZSB0aGUgY29tcG9uZW50IGl0c2VsZlxuICAgIGlmIChiYWNrRGlyZWN0aW9uKSB7XG4gICAgICAgIHJvb3RUcmFuc2l0aW9uLmR1cmF0aW9uKCgoX2EgPSBvcHRzLmR1cmF0aW9uKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAwKSB8fCAyMDApLmVhc2luZygnY3ViaWMtYmV6aWVyKDAuNDcsMCwwLjc0NSwwLjcxNSknKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJvb3RUcmFuc2l0aW9uXG4gICAgICAgICAgICAuZHVyYXRpb24oKChfYiA9IG9wdHMuZHVyYXRpb24pICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IDApIHx8IDI4MClcbiAgICAgICAgICAgIC5lYXNpbmcoJ2N1YmljLWJlemllcigwLjM2LDAuNjYsMC4wNCwxKScpXG4gICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWSgke09GRl9CT1RUT019KWAsIGB0cmFuc2xhdGVZKCR7Q0VOVEVSfSlgKVxuICAgICAgICAgICAgLmZyb21Ubygnb3BhY2l0eScsIDAuMDEsIDEpO1xuICAgIH1cbiAgICAvLyBBbmltYXRlIHRvb2xiYXIgaWYgaXQncyB0aGVyZVxuICAgIGlmIChlbnRlcmluZ1Rvb2xiYXJFbGUpIHtcbiAgICAgICAgY29uc3QgZW50ZXJpbmdUb29sQmFyID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGVudGVyaW5nVG9vbEJhci5hZGRFbGVtZW50KGVudGVyaW5nVG9vbGJhckVsZSk7XG4gICAgICAgIHJvb3RUcmFuc2l0aW9uLmFkZEFuaW1hdGlvbihlbnRlcmluZ1Rvb2xCYXIpO1xuICAgIH1cbiAgICAvLyBzZXR1cCBsZWF2aW5nIHZpZXdcbiAgICBpZiAobGVhdmluZ0VsICYmIGJhY2tEaXJlY3Rpb24pIHtcbiAgICAgICAgLy8gbGVhdmluZyBjb250ZW50XG4gICAgICAgIHJvb3RUcmFuc2l0aW9uLmR1cmF0aW9uKCgoX2MgPSBvcHRzLmR1cmF0aW9uKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiAwKSB8fCAyMDApLmVhc2luZygnY3ViaWMtYmV6aWVyKDAuNDcsMCwwLjc0NSwwLjcxNSknKTtcbiAgICAgICAgY29uc3QgbGVhdmluZ1BhZ2UgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgbGVhdmluZ1BhZ2VcbiAgICAgICAgICAgIC5hZGRFbGVtZW50KGdldElvblBhZ2VFbGVtZW50KGxlYXZpbmdFbCkpXG4gICAgICAgICAgICAub25GaW5pc2goKGN1cnJlbnRTdGVwKSA9PiB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFN0ZXAgPT09IDEgJiYgbGVhdmluZ1BhZ2UuZWxlbWVudHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGxlYXZpbmdQYWdlLmVsZW1lbnRzWzBdLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5mcm9tVG8oJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGVZKCR7Q0VOVEVSfSlgLCBgdHJhbnNsYXRlWSgke09GRl9CT1RUT019KWApXG4gICAgICAgICAgICAuZnJvbVRvKCdvcGFjaXR5JywgMSwgMCk7XG4gICAgICAgIHJvb3RUcmFuc2l0aW9uLmFkZEFuaW1hdGlvbihsZWF2aW5nUGFnZSk7XG4gICAgfVxuICAgIHJldHVybiByb290VHJhbnNpdGlvbjtcbn07XG5cbmV4cG9ydCB7IG1kVHJhbnNpdGlvbkFuaW1hdGlvbiB9O1xuIl0sIm5hbWVzIjpbImMiLCJjcmVhdGVBbmltYXRpb24iLCJnIiwiZ2V0SW9uUGFnZUVsZW1lbnQiLCJtZFRyYW5zaXRpb25BbmltYXRpb24iLCJfIiwib3B0cyIsIl9hIiwiX2IiLCJfYyIsIk9GRl9CT1RUT00iLCJDRU5URVIiLCJiYWNrRGlyZWN0aW9uIiwiZGlyZWN0aW9uIiwiZW50ZXJpbmdFbCIsImxlYXZpbmdFbCIsImlvblBhZ2VFbGVtZW50IiwiZW50ZXJpbmdUb29sYmFyRWxlIiwicXVlcnlTZWxlY3RvciIsInJvb3RUcmFuc2l0aW9uIiwiYWRkRWxlbWVudCIsImZpbGwiLCJiZWZvcmVSZW1vdmVDbGFzcyIsImR1cmF0aW9uIiwiZWFzaW5nIiwiZnJvbVRvIiwiZW50ZXJpbmdUb29sQmFyIiwiYWRkQW5pbWF0aW9uIiwibGVhdmluZ1BhZ2UiLCJvbkZpbmlzaCIsImN1cnJlbnRTdGVwIiwiZWxlbWVudHMiLCJsZW5ndGgiLCJzdHlsZSIsInNldFByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyIsInhfZ29vZ2xlX2lnbm9yZUxpc3QiOlswXX0=