"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-select-modal_entry_js"],{

/***/ 7101:
/*!*********************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-select-modal.entry.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ion_select_modal: () => (/* binding */ SelectModal)
/* harmony export */ });
/* harmony import */ var _index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-B_U9CtaY.js */ 4917);
/* harmony import */ var _overlays_8Y2rA_ps_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./overlays-8Y2rA-ps.js */ 548);
/* harmony import */ var _theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./theme-DiVJyqlX.js */ 247);
/* harmony import */ var _index_ZjP4CjeZ_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-ZjP4CjeZ.js */ 575);
/* harmony import */ var _helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers-1O4D2b7y.js */ 450);
/* harmony import */ var _hardware_back_button_DcH0BbDp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hardware-back-button-DcH0BbDp.js */ 3819);
/* harmony import */ var _framework_delegate_DxcnWic_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./framework-delegate-DxcnWic_.js */ 8104);
/* harmony import */ var _gesture_controller_BTEOs1at_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gesture-controller-BTEOs1at.js */ 566);
/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */








const ionicSelectModalMdCss = ".sc-ion-select-modal-ionic-h{height:100%}ion-list.sc-ion-select-modal-ionic ion-radio.sc-ion-select-modal-ionic::part(container){display:none}ion-list.sc-ion-select-modal-ionic ion-radio.sc-ion-select-modal-ionic::part(label){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}ion-item.sc-ion-select-modal-ionic{--inner-border-width:0}.item-radio-checked.sc-ion-select-modal-ionic{--background:rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.08);--background-focused:var(--ion-color-primary, #0054e9);--background-focused-opacity:0.2;--background-hover:var(--ion-color-primary, #0054e9);--background-hover-opacity:0.12}.item-checkbox-checked.sc-ion-select-modal-ionic{--background-activated:var(--ion-item-color, var(--ion-text-color, #000));--background-focused:var(--ion-item-color, var(--ion-text-color, #000));--background-hover:var(--ion-item-color, var(--ion-text-color, #000));--color:var(--ion-color-primary, #0054e9)}";
const selectModalIosCss = ".sc-ion-select-modal-ios-h{height:100%}ion-item.sc-ion-select-modal-ios{--inner-padding-end:0}ion-radio.sc-ion-select-modal-ios::after{bottom:0;position:absolute;width:calc(100% - 0.9375rem - 16px);border-width:0px 0px 0.55px 0px;border-style:solid;border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));content:\"\"}ion-radio.sc-ion-select-modal-ios::after{inset-inline-start:calc(0.9375rem + 16px)}";
const selectModalMdCss = ".sc-ion-select-modal-md-h{height:100%}ion-list.sc-ion-select-modal-md ion-radio.sc-ion-select-modal-md::part(container){display:none}ion-list.sc-ion-select-modal-md ion-radio.sc-ion-select-modal-md::part(label){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}ion-item.sc-ion-select-modal-md{--inner-border-width:0}.item-radio-checked.sc-ion-select-modal-md{--background:rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.08);--background-focused:var(--ion-color-primary, #0054e9);--background-focused-opacity:0.2;--background-hover:var(--ion-color-primary, #0054e9);--background-hover-opacity:0.12}.item-checkbox-checked.sc-ion-select-modal-md{--background-activated:var(--ion-item-color, var(--ion-text-color, #000));--background-focused:var(--ion-item-color, var(--ion-text-color, #000));--background-hover:var(--ion-item-color, var(--ion-text-color, #000));--color:var(--ion-color-primary, #0054e9)}";
const SelectModal = class {
  constructor(hostRef) {
    (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.options = [];
  }
  closeModal() {
    const modal = this.el.closest('ion-modal');
    if (modal) {
      modal.dismiss();
    }
  }
  findOptionFromEvent(ev) {
    const {
      options
    } = this;
    return options.find(o => o.value === ev.target.value);
  }
  getValues(ev) {
    const {
      multiple,
      options
    } = this;
    if (multiple) {
      // this is a modal with checkboxes (multiple value select)
      // return an array of all the checked values
      return options.filter(o => o.checked).map(o => o.value);
    }
    // this is a modal with radio buttons (single value select)
    // return the value that was clicked, otherwise undefined
    const option = ev ? this.findOptionFromEvent(ev) : null;
    return option ? option.value : undefined;
  }
  callOptionHandler(ev) {
    const option = this.findOptionFromEvent(ev);
    const values = this.getValues(ev);
    if (option === null || option === void 0 ? void 0 : option.handler) {
      (0,_overlays_8Y2rA_ps_js__WEBPACK_IMPORTED_MODULE_1__.s)(option.handler, values);
    }
  }
  setChecked(ev) {
    const {
      multiple
    } = this;
    const option = this.findOptionFromEvent(ev);
    // this is a modal with checkboxes (multiple value select)
    // we need to set the checked value for this option
    if (multiple && option) {
      option.checked = ev.detail.checked;
    }
  }
  renderRadioOptions() {
    const checked = this.options.filter(o => o.checked).map(o => o.value)[0];
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-radio-group", {
      value: checked,
      onIonChange: ev => this.callOptionHandler(ev)
    }, this.options.map(option => (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-item", {
      lines: "none",
      class: Object.assign({
        // TODO FW-4784
        'item-radio-checked': option.value === checked
      }, (0,_theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_2__.g)(option.cssClass))
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-radio", {
      value: option.value,
      disabled: option.disabled,
      justify: "start",
      labelPlacement: "end",
      onClick: () => this.closeModal(),
      onKeyUp: ev => {
        if (ev.key === ' ') {
          /**
           * Selecting a radio option with keyboard navigation,
           * either through the Enter or Space keys, should
           * dismiss the modal.
           */
          this.closeModal();
        }
      }
    }, option.text))));
  }
  renderCheckboxOptions() {
    return this.options.map(option => (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-item", {
      class: Object.assign({
        // TODO FW-4784
        'item-checkbox-checked': option.checked
      }, (0,_theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_2__.g)(option.cssClass))
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-checkbox", {
      value: option.value,
      disabled: option.disabled,
      checked: option.checked,
      justify: "start",
      labelPlacement: "end",
      onIonChange: ev => {
        this.setChecked(ev);
        this.callOptionHandler(ev);
        // TODO FW-4784
        (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.n)(this);
      }
    }, option.text)));
  }
  render() {
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.j, {
      key: 'b6c0dec240b2e41985b15fdf4e5a6d3a145c1567',
      class: (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.e)(this)
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-header", {
      key: 'cd177e85ee0f62a60a3a708342d6ab6eb19a44dc'
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-toolbar", {
      key: 'aee8222a5a4daa540ad202b2e4cac1ef93d9558c'
    }, this.header !== undefined && (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-title", {
      key: '5f8fecc764d97bf840d3d4cfddeeccd118ab4436'
    }, this.header), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-buttons", {
      key: '919033950d7c2b0101f96a9c9698219de9f568ea',
      slot: "end"
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-button", {
      key: '34b571cab6dced4bde555a077a21e91800829931',
      onClick: () => this.closeModal()
    }, "Close")))), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-content", {
      key: '3c9153d26ba7a5a03d3b20fcd628d0c3031661a7'
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-list", {
      key: 'e00b222c071bc97c82ad1bba4db95a8a5c43ed6d'
    }, this.multiple === true ? this.renderCheckboxOptions() : this.renderRadioOptions())));
  }
  get el() {
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_0__.k)(this);
  }
};
SelectModal.style = {
  ionic: ionicSelectModalMdCss,
  ios: selectModalIosCss,
  md: selectModalMdCss
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLXNlbGVjdC1tb2RhbF9lbnRyeV9qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDOEg7QUFDdkU7QUFDQTtBQUMxQjtBQUNFO0FBQ2E7QUFDRjtBQUNBO0FBRTFDLE1BQU1lLHFCQUFxQixHQUFHLHc2QkFBdzZCO0FBRXQ4QixNQUFNQyxpQkFBaUIsR0FBRyx3ZUFBd2U7QUFFbGdCLE1BQU1DLGdCQUFnQixHQUFHLGc1QkFBZzVCO0FBRXo2QixNQUFNQyxXQUFXLEdBQUcsTUFBTTtFQUN0QkMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ2pCbkIscURBQWdCLENBQUMsSUFBSSxFQUFFbUIsT0FBTyxDQUFDO0lBQy9CLElBQUksQ0FBQ0MsT0FBTyxHQUFHLEVBQUU7RUFDckI7RUFDQUMsVUFBVUEsQ0FBQSxFQUFHO0lBQ1QsTUFBTUMsS0FBSyxHQUFHLElBQUksQ0FBQ0MsRUFBRSxDQUFDQyxPQUFPLENBQUMsV0FBVyxDQUFDO0lBQzFDLElBQUlGLEtBQUssRUFBRTtNQUNQQSxLQUFLLENBQUNHLE9BQU8sQ0FBQyxDQUFDO0lBQ25CO0VBQ0o7RUFDQUMsbUJBQW1CQSxDQUFDQyxFQUFFLEVBQUU7SUFDcEIsTUFBTTtNQUFFUDtJQUFRLENBQUMsR0FBRyxJQUFJO0lBQ3hCLE9BQU9BLE9BQU8sQ0FBQ1EsSUFBSSxDQUFFQyxDQUFDLElBQUtBLENBQUMsQ0FBQ0MsS0FBSyxLQUFLSCxFQUFFLENBQUNJLE1BQU0sQ0FBQ0QsS0FBSyxDQUFDO0VBQzNEO0VBQ0FFLFNBQVNBLENBQUNMLEVBQUUsRUFBRTtJQUNWLE1BQU07TUFBRU0sUUFBUTtNQUFFYjtJQUFRLENBQUMsR0FBRyxJQUFJO0lBQ2xDLElBQUlhLFFBQVEsRUFBRTtNQUNWO01BQ0E7TUFDQSxPQUFPYixPQUFPLENBQUNjLE1BQU0sQ0FBRUwsQ0FBQyxJQUFLQSxDQUFDLENBQUNNLE9BQU8s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O0lBQU0sQ0FBQyxFQUFFNUQscURBQUMsQ0FBQyxZQUFZLEVBQUU7TUFBRXVELEdBQUcsRUFBRSwwQ0FBMEM7TUFBRUYsT0FBTyxFQUFFQSxDQUFBLEtBQU0sSUFBSSxDQUFDakMsVUFBVSxDQUFDO0lBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFcEIscURBQUMsQ0FBQyxhQUFhLEVBQUU7TUFBRXVELEdBQUcsRUFBRTtJQUEyQyxDQUFDLEVBQUV2RCxxREFBQyxDQUFDLFVBQVUsRUFBRTtNQUFFdUQsR0FBRyxFQUFFO0lBQTJDLENBQUMsRUFBRSxJQUFJLENBQUN2QixRQUFRLEtBQUssSUFBSSxHQUFHLElBQUksQ0FBQ3lCLHFCQUFxQixDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNkLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDaHdCO0VBQ0EsSUFBSXJCLEVBQUVBLENBQUEsRUFBRztJQUFFLE9BQU9kLHFEQUFVLENBQUMsSUFBSSxDQUFDO0VBQUU7QUFDeEMsQ0FBQztBQUNEUSxXQUFXLENBQUM2QyxLQUFLLEdBQUc7RUFDaEJDLEtBQUssRUFBRWpELHFCQUFxQjtFQUM1QmtELEdBQUcsRUFBRWpELGlCQUFpQjtFQUN0QmtELEVBQUUsRUFBRWpEO0FBQ1IsQ0FBQyIsInNvdXJjZXMiOlsiLi9ub2RlX21vZHVsZXMvQGlvbmljL2NvcmUvZGlzdC9lc20vaW9uLXNlbGVjdC1tb2RhbC5lbnRyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIChDKSBJb25pYyBodHRwOi8vaW9uaWNmcmFtZXdvcmsuY29tIC0gTUlUIExpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgciBhcyByZWdpc3Rlckluc3RhbmNlLCBoLCBuIGFzIGZvcmNlVXBkYXRlLCBlIGFzIGdldElvbk1vZGUsIGogYXMgSG9zdCwgayBhcyBnZXRFbGVtZW50IH0gZnJvbSAnLi9pbmRleC1CX1U5Q3RhWS5qcyc7XG5pbXBvcnQgeyBzIGFzIHNhZmVDYWxsIH0gZnJvbSAnLi9vdmVybGF5cy04WTJyQS1wcy5qcyc7XG5pbXBvcnQgeyBnIGFzIGdldENsYXNzTWFwIH0gZnJvbSAnLi90aGVtZS1EaVZKeXFsWC5qcyc7XG5pbXBvcnQgJy4vaW5kZXgtWmpQNENqZVouanMnO1xuaW1wb3J0ICcuL2hlbHBlcnMtMU80RDJiN3kuanMnO1xuaW1wb3J0ICcuL2hhcmR3YXJlLWJhY2stYnV0dG9uLURjSDBCYkRwLmpzJztcbmltcG9ydCAnLi9mcmFtZXdvcmstZGVsZWdhdGUtRHhjbldpY18uanMnO1xuaW1wb3J0ICcuL2dlc3R1cmUtY29udHJvbGxlci1CVEVPczFhdC5qcyc7XG5cbmNvbnN0IGlvbmljU2VsZWN0TW9kYWxNZENzcyA9IFwiLnNjLWlvbi1zZWxlY3QtbW9kYWwtaW9uaWMtaHtoZWlnaHQ6MTAwJX1pb24tbGlzdC5zYy1pb24tc2VsZWN0LW1vZGFsLWlvbmljIGlvbi1yYWRpby5zYy1pb24tc2VsZWN0LW1vZGFsLWlvbmljOjpwYXJ0KGNvbnRhaW5lcil7ZGlzcGxheTpub25lfWlvbi1saXN0LnNjLWlvbi1zZWxlY3QtbW9kYWwtaW9uaWMgaW9uLXJhZGlvLnNjLWlvbi1zZWxlY3QtbW9kYWwtaW9uaWM6OnBhcnQobGFiZWwpe21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjA7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH1pb24taXRlbS5zYy1pb24tc2VsZWN0LW1vZGFsLWlvbmljey0taW5uZXItYm9yZGVyLXdpZHRoOjB9Lml0ZW0tcmFkaW8tY2hlY2tlZC5zYy1pb24tc2VsZWN0LW1vZGFsLWlvbmljey0tYmFja2dyb3VuZDpyZ2JhKHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LXJnYiwgMCwgODQsIDIzMyksIDAuMDgpOy0tYmFja2dyb3VuZC1mb2N1c2VkOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMDA1NGU5KTstLWJhY2tncm91bmQtZm9jdXNlZC1vcGFjaXR5OjAuMjstLWJhY2tncm91bmQtaG92ZXI6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMwMDU0ZTkpOy0tYmFja2dyb3VuZC1ob3Zlci1vcGFjaXR5OjAuMTJ9Lml0ZW0tY2hlY2tib3gtY2hlY2tlZC5zYy1pb24tc2VsZWN0LW1vZGFsLWlvbmljey0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6dmFyKC0taW9uLWl0ZW0tY29sb3IsIHZhcigtLWlvbi10ZXh0LWNvbG9yLCAjMDAwKSk7LS1iYWNrZ3JvdW5kLWZvY3VzZWQ6dmFyKC0taW9uLWl0ZW0tY29sb3IsIHZhcigtLWlvbi10ZXh0LWNvbG9yLCAjMDAwKSk7LS1iYWNrZ3JvdW5kLWhvdmVyOnZhcigtLWlvbi1pdGVtLWNvbG9yLCB2YXIoLS1pb24tdGV4dC1jb2xvciwgIzAwMCkpOy0tY29sb3I6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMwMDU0ZTkpfVwiO1xuXG5jb25zdCBzZWxlY3RNb2RhbElvc0NzcyA9IFwiLnNjLWlvbi1zZWxlY3QtbW9kYWwtaW9zLWh7aGVpZ2h0OjEwMCV9aW9uLWl0ZW0uc2MtaW9uLXNlbGVjdC1tb2RhbC1pb3N7LS1pbm5lci1wYWRkaW5nLWVuZDowfWlvbi1yYWRpby5zYy1pb24tc2VsZWN0LW1vZGFsLWlvczo6YWZ0ZXJ7Ym90dG9tOjA7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6Y2FsYygxMDAlIC0gMC45Mzc1cmVtIC0gMTZweCk7Ym9yZGVyLXdpZHRoOjBweCAwcHggMC41NXB4IDBweDtib3JkZXItc3R5bGU6c29saWQ7Ym9yZGVyLWNvbG9yOnZhcigtLWlvbi1pdGVtLWJvcmRlci1jb2xvciwgdmFyKC0taW9uLWJvcmRlci1jb2xvciwgdmFyKC0taW9uLWNvbG9yLXN0ZXAtMjUwLCB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvci1zdGVwLTI1MCwgI2M4YzdjYykpKSk7Y29udGVudDpcXFwiXFxcIn1pb24tcmFkaW8uc2MtaW9uLXNlbGVjdC1tb2RhbC1pb3M6OmFmdGVye2luc2V0LWlubGluZS1zdGFydDpjYWxjKDAuOTM3NXJlbSArIDE2cHgpfVwiO1xuXG5jb25zdCBzZWxlY3RNb2RhbE1kQ3NzID0gXCIuc2MtaW9uLXNlbGVjdC1tb2RhbC1tZC1oe2hlaWdodDoxMDAlfWlvbi1saXN0LnNjLWlvbi1zZWxlY3QtbW9kYWwtbWQgaW9uLXJhZGlvLnNjLWlvbi1zZWxlY3QtbW9kYWwtbWQ6OnBhcnQoY29udGFpbmVyKXtkaXNwbGF5Om5vbmV9aW9uLWxpc3Quc2MtaW9uLXNlbGVjdC1tb2RhbC1tZCBpb24tcmFkaW8uc2MtaW9uLXNlbGVjdC1tb2RhbC1tZDo6cGFydChsYWJlbCl7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowfWlvbi1pdGVtLnNjLWlvbi1zZWxlY3QtbW9kYWwtbWR7LS1pbm5lci1ib3JkZXItd2lkdGg6MH0uaXRlbS1yYWRpby1jaGVja2VkLnNjLWlvbi1zZWxlY3QtbW9kYWwtbWR7LS1iYWNrZ3JvdW5kOnJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktcmdiLCAwLCA4NCwgMjMzKSwgMC4wOCk7LS1iYWNrZ3JvdW5kLWZvY3VzZWQ6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMwMDU0ZTkpOy0tYmFja2dyb3VuZC1mb2N1c2VkLW9wYWNpdHk6MC4yOy0tYmFja2dyb3VuZC1ob3Zlcjp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzAwNTRlOSk7LS1iYWNrZ3JvdW5kLWhvdmVyLW9wYWNpdHk6MC4xMn0uaXRlbS1jaGVja2JveC1jaGVja2VkLnNjLWlvbi1zZWxlY3QtbW9kYWwtbWR7LS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDp2YXIoLS1pb24taXRlbS1jb2xvciwgdmFyKC0taW9uLXRleHQtY29sb3IsICMwMDApKTstLWJhY2tncm91bmQtZm9jdXNlZDp2YXIoLS1pb24taXRlbS1jb2xvciwgdmFyKC0taW9uLXRleHQtY29sb3IsICMwMDApKTstLWJhY2tncm91bmQtaG92ZXI6dmFyKC0taW9uLWl0ZW0tY29sb3IsIHZhcigtLWlvbi10ZXh0LWNvbG9yLCAjMDAwKSk7LS1jb2xvcjp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzAwNTRlOSl9XCI7XG5cbmNvbnN0IFNlbGVjdE1vZGFsID0gY2xhc3Mge1xuICAgIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICAgICAgcmVnaXN0ZXJJbnN0YW5jZSh0aGlzLCBob3N0UmVmKTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gW107XG4gICAgfVxuICAgIGNsb3NlTW9kYWwoKSB7XG4gICAgICAgIGNvbnN0IG1vZGFsID0gdGhpcy5lbC5jbG9zZXN0KCdpb24tbW9kYWwnKTtcbiAgICAgICAgaWYgKG1vZGFsKSB7XG4gICAgICAgICAgICBtb2RhbC5kaXNtaXNzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZmluZE9wdGlvbkZyb21FdmVudChldikge1xuICAgICAgICBjb25zdCB7IG9wdGlvbnMgfSA9IHRoaXM7XG4gICAgICAgIHJldHVybiBvcHRpb25zLmZpbmQoKG8pID0+IG8udmFsdWUgPT09IGV2LnRhcmdldC52YWx1ZSk7XG4gICAgfVxuICAgIGdldFZhbHVlcyhldikge1xuICAgICAgICBjb25zdCB7IG11bHRpcGxlLCBvcHRpb25zIH0gPSB0aGlzO1xuICAgICAgICBpZiAobXVsdGlwbGUpIHtcbiAgICAgICAgICAgIC8vIHRoaXMgaXMgYSBtb2RhbCB3aXRoIGNoZWNrYm94ZXMgKG11bHRpcGxlIHZhbHVlIHNlbGVjdClcbiAgICAgICAgICAgIC8vIHJldHVybiBhbiBhcnJheSBvZiBhbGwgdGhlIGNoZWNrZWQgdmFsdWVzXG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5maWx0ZXIoKG8pID0+IG8uY2hlY2tlZCkubWFwKChvKSA9PiBvLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyB0aGlzIGlzIGEgbW9kYWwgd2l0aCByYWRpbyBidXR0b25zIChzaW5nbGUgdmFsdWUgc2VsZWN0KVxuICAgICAgICAvLyByZXR1cm4gdGhlIHZhbHVlIHRoYXQgd2FzIGNsaWNrZWQsIG90aGVyd2lzZSB1bmRlZmluZWRcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gZXYgPyB0aGlzLmZpbmRPcHRpb25Gcm9tRXZlbnQoZXYpIDogbnVsbDtcbiAgICAgICAgcmV0dXJuIG9wdGlvbiA/IG9wdGlvbi52YWx1ZSA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY2FsbE9wdGlvbkhhbmRsZXIoZXYpIHtcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gdGhpcy5maW5kT3B0aW9uRnJvbUV2ZW50KGV2KTtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gdGhpcy5nZXRWYWx1ZXMoZXYpO1xuICAgICAgICBpZiAob3B0aW9uID09PSBudWxsIHx8IG9wdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9uLmhhbmRsZXIpIHtcbiAgICAgICAgICAgIHNhZmVDYWxsKG9wdGlvbi5oYW5kbGVyLCB2YWx1ZXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNldENoZWNrZWQoZXYpIHtcbiAgICAgICAgY29uc3QgeyBtdWx0aXBsZSB9ID0gdGhpcztcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gdGhpcy5maW5kT3B0aW9uRnJvbUV2ZW50KGV2KTtcbiAgICAgICAgLy8gdGhpcyBpcyBhIG1vZGFsIHdpdGggY2hlY2tib3hlcyAobXVsdGlwbGUgdmFsdWUgc2VsZWN0KVxuICAgICAgICAvLyB3ZSBuZWVkIHRvIHNldCB0aGUgY2hlY2tlZCB2YWx1ZSBmb3IgdGhpcyBvcHRpb25cbiAgICAgICAgaWYgKG11bHRpcGxlICYmIG9wdGlvbikge1xuICAgICAgICAgICAgb3B0aW9uLmNoZWNrZWQgPSBldi5kZXRhaWwuY2hlY2tlZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXJSYWRpb09wdGlvbnMoKSB7XG4gICAgICAgIGNvbnN0IGNoZWNrZWQgPSB0aGlzLm9wdGlvbnMuZmlsdGVyKChvKSA9PiBvLmNoZWNrZWQpLm1hcCgobykgPT4gby52YWx1ZSlbMF07XG4gICAgICAgIHJldHVybiAoaChcImlvbi1yYWRpby1ncm91cFwiLCB7IHZhbHVlOiBjaGVja2VkLCBvbklvbkNoYW5nZTogKGV2KSA9PiB0aGlzLmNhbGxPcHRpb25IYW5kbGVyKGV2KSB9LCB0aGlzLm9wdGlvbnMubWFwKChvcHRpb24pID0+IChoKFwiaW9uLWl0ZW1cIiwgeyBsaW5lczogXCJub25lXCIsIGNsYXNzOiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgICAgICAvLyBUT0RPIEZXLTQ3ODRcbiAgICAgICAgICAgICAgICAnaXRlbS1yYWRpby1jaGVja2VkJzogb3B0aW9uLnZhbHVlID09PSBjaGVja2VkXG4gICAgICAgICAgICB9LCBnZXRDbGFzc01hcChvcHRpb24uY3NzQ2xhc3MpKSB9LCBoKFwiaW9uLXJhZGlvXCIsIHsgdmFsdWU6IG9wdGlvbi52YWx1ZSwgZGlzYWJsZWQ6IG9wdGlvbi5kaXNhYmxlZCwganVzdGlmeTogXCJzdGFydFwiLCBsYWJlbFBsYWNlbWVudDogXCJlbmRcIiwgb25DbGljazogKCkgPT4gdGhpcy5jbG9zZU1vZGFsKCksIG9uS2V5VXA6IChldikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChldi5rZXkgPT09ICcgJykge1xuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICogU2VsZWN0aW5nIGEgcmFkaW8gb3B0aW9uIHdpdGgga2V5Ym9hcmQgbmF2aWdhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICogZWl0aGVyIHRocm91Z2ggdGhlIEVudGVyIG9yIFNwYWNlIGtleXMsIHNob3VsZFxuICAgICAgICAgICAgICAgICAgICAgKiBkaXNtaXNzIHRoZSBtb2RhbC5cbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VNb2RhbCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gfSwgb3B0aW9uLnRleHQpKSkpKSk7XG4gICAgfVxuICAgIHJlbmRlckNoZWNrYm94T3B0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5tYXAoKG9wdGlvbikgPT4gKGgoXCJpb24taXRlbVwiLCB7IGNsYXNzOiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgICAgICAvLyBUT0RPIEZXLTQ3ODRcbiAgICAgICAgICAgICAgICAnaXRlbS1jaGVja2JveC1jaGVja2VkJzogb3B0aW9uLmNoZWNrZWRcbiAgICAgICAgICAgIH0sIGdldENsYXNzTWFwKG9wdGlvbi5jc3NDbGFzcykpIH0sIGgoXCJpb24tY2hlY2tib3hcIiwgeyB2YWx1ZTogb3B0aW9uLnZhbHVlLCBkaXNhYmxlZDogb3B0aW9uLmRpc2FibGVkLCBjaGVja2VkOiBvcHRpb24uY2hlY2tlZCwganVzdGlmeTogXCJzdGFydFwiLCBsYWJlbFBsYWNlbWVudDogXCJlbmRcIiwgb25Jb25DaGFuZ2U6IChldikgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0Q2hlY2tlZChldik7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWxsT3B0aW9uSGFuZGxlcihldik7XG4gICAgICAgICAgICAgICAgLy8gVE9ETyBGVy00Nzg0XG4gICAgICAgICAgICAgICAgZm9yY2VVcGRhdGUodGhpcyk7XG4gICAgICAgICAgICB9IH0sIG9wdGlvbi50ZXh0KSkpKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKGgoSG9zdCwgeyBrZXk6ICdiNmMwZGVjMjQwYjJlNDE5ODViMTVmZGY0ZTVhNmQzYTE0NWMxNTY3JywgY2xhc3M6IGdldElvbk1vZGUodGhpcykgfSwgaChcImlvbi1oZWFkZXJcIiwgeyBrZXk6ICdjZDE3N2U4NWVlMGY2MmE2MGEzYTcwODM0MmQ2YWI2ZWIxOWE0NGRjJyB9LCBoKFwiaW9uLXRvb2xiYXJcIiwgeyBrZXk6ICdhZWU4MjIyYTVhNGRhYTU0MGFkMjAyYjJlNGNhYzFlZjkzZDk1NThjJyB9LCB0aGlzLmhlYWRlciAhPT0gdW5kZWZpbmVkICYmIGgoXCJpb24tdGl0bGVcIiwgeyBrZXk6ICc1ZjhmZWNjNzY0ZDk3YmY4NDBkM2Q0Y2ZkZGVlY2NkMTE4YWI0NDM2JyB9LCB0aGlzLmhlYWRlciksIGgoXCJpb24tYnV0dG9uc1wiLCB7IGtleTogJzkxOTAzMzk1MGQ3YzJiMDEwMWY5NmE5Yzk2OTgyMTlkZTlmNTY4ZWEnLCBzbG90OiBcImVuZFwiIH0sIGgoXCJpb24tYnV0dG9uXCIsIHsga2V5OiAnMzRiNTcxY2FiNmRjZWQ0YmRlNTU1YTA3N2EyMWU5MTgwMDgyOTkzMScsIG9uQ2xpY2s6ICgpID0+IHRoaXMuY2xvc2VNb2RhbCgpIH0sIFwiQ2xvc2VcIikpKSksIGgoXCJpb24tY29udGVudFwiLCB7IGtleTogJzNjOTE1M2QyNmJhN2E1YTAzZDNiMjBmY2Q2MjhkMGMzMDMxNjYxYTcnIH0sIGgoXCJpb24tbGlzdFwiLCB7IGtleTogJ2UwMGIyMjJjMDcxYmM5N2M4MmFkMWJiYTRkYjk1YThhNWM0M2VkNmQnIH0sIHRoaXMubXVsdGlwbGUgPT09IHRydWUgPyB0aGlzLnJlbmRlckNoZWNrYm94T3B0aW9ucygpIDogdGhpcy5yZW5kZXJSYWRpb09wdGlvbnMoKSkpKSk7XG4gICAgfVxuICAgIGdldCBlbCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbn07XG5TZWxlY3RNb2RhbC5zdHlsZSA9IHtcbiAgICBpb25pYzogaW9uaWNTZWxlY3RNb2RhbE1kQ3NzLFxuICAgIGlvczogc2VsZWN0TW9kYWxJb3NDc3MsXG4gICAgbWQ6IHNlbGVjdE1vZGFsTWRDc3Ncbn07XG5cbmV4cG9ydCB7IFNlbGVjdE1vZGFsIGFzIGlvbl9zZWxlY3RfbW9kYWwgfTtcbiJdLCJuYW1lcyI6WyJyIiwicmVnaXN0ZXJJbnN0YW5jZSIsImgiLCJuIiwiZm9yY2VVcGRhdGUiLCJlIiwiZ2V0SW9uTW9kZSIsImoiLCJIb3N0IiwiayIsImdldEVsZW1lbnQiLCJzIiwic2FmZUNhbGwiLCJnIiwiZ2V0Q2xhc3NNYXAiLCJpb25pY1NlbGVjdE1vZGFsTWRDc3MiLCJzZWxlY3RNb2RhbElvc0NzcyIsInNlbGVjdE1vZGFsTWRDc3MiLCJTZWxlY3RNb2RhbCIsImNvbnN0cnVjdG9yIiwiaG9zdFJlZiIsIm9wdGlvbnMiLCJjbG9zZU1vZGFsIiwibW9kYWwiLCJlbCIsImNsb3Nlc3QiLCJkaXNtaXNzIiwiZmluZE9wdGlvbkZyb21FdmVudCIsImV2IiwiZmluZCIsIm8iLCJ2YWx1ZSIsInRhcmdldCIsImdldFZhbHVlcyIsIm11bHRpcGxlIiwiZmlsdGVyIiwiY2hlY2tlZCIsIm1hcCIsIm9wdGlvbiIsInVuZGVmaW5lZCIsImNhbGxPcHRpb25IYW5kbGVyIiwidmFsdWVzIiwiaGFuZGxlciIsInNldENoZWNrZWQiLCJkZXRhaWwiLCJyZW5kZXJSYWRpb09wdGlvbnMiLCJvbklvbkNoYW5nZSIsImxpbmVzIiwiY2xhc3MiLCJPYmplY3QiLCJhc3NpZ24iLCJjc3NDbGFzcyIsImRpc2FibGVkIiwianVzdGlmeSIsImxhYmVsUGxhY2VtZW50Iiwib25DbGljayIsIm9uS2V5VXAiLCJrZXkiLCJ0ZXh0IiwicmVuZGVyQ2hlY2tib3hPcHRpb25zIiwicmVuZGVyIiwiaGVhZGVyIiwic2xvdCIsInN0eWxlIiwiaW9uaWMiLCJpb3MiLCJtZCIsImlvbl9zZWxlY3RfbW9kYWwiXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIiwieF9nb29nbGVfaWdub3JlTGlzdCI6WzBdfQ==