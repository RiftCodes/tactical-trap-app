"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-img_entry_js"],{

/***/ 654:
/*!************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-img.entry.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ion_img: () => (/* binding */ Img)
/* harmony export */ });
/* harmony import */ var _index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-527b9e34.js */ 4514);
/* harmony import */ var _helpers_78efeec3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers-78efeec3.js */ 9522);
/* harmony import */ var _ionic_global_ca86cf32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ionic-global-ca86cf32.js */ 1367);
/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */



const imgCss = ":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}";
const IonImgStyle0 = imgCss;
const Img = class {
  constructor(hostRef) {
    (0,_index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.ionImgWillLoad = (0,_index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "ionImgWillLoad", 7);
    this.ionImgDidLoad = (0,_index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "ionImgDidLoad", 7);
    this.ionError = (0,_index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "ionError", 7);
    this.inheritedAttributes = {};
    this.onLoad = () => {
      this.ionImgDidLoad.emit();
    };
    this.onError = () => {
      this.ionError.emit();
    };
    this.loadSrc = undefined;
    this.loadError = undefined;
    this.alt = undefined;
    this.src = undefined;
  }
  srcChanged() {
    this.addIO();
  }
  componentWillLoad() {
    this.inheritedAttributes = (0,_helpers_78efeec3_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.el, ['draggable']);
  }
  componentDidLoad() {
    this.addIO();
  }
  addIO() {
    if (this.src === undefined) {
      return;
    }
    if (typeof window !== 'undefined' && 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'isIntersecting' in window.IntersectionObserverEntry.prototype) {
      this.removeIO();
      this.io = new IntersectionObserver(data => {
        /**
         * On slower devices, it is possible for an intersection observer entry to contain multiple
         * objects in the array. This happens when quickly scrolling an image into view and then out of
         * view. In this case, the last object represents the current state of the component.
         */
        if (data[data.length - 1].isIntersecting) {
          this.load();
          this.removeIO();
        }
      });
      this.io.observe(this.el);
    } else {
      // fall back to setTimeout for Safari and IE
      setTimeout(() => this.load(), 200);
    }
  }
  load() {
    this.loadError = this.onError;
    this.loadSrc = this.src;
    this.ionImgWillLoad.emit();
  }
  removeIO() {
    if (this.io) {
      this.io.disconnect();
      this.io = undefined;
    }
  }
  render() {
    const {
      loadSrc,
      alt,
      onLoad,
      loadError,
      inheritedAttributes
    } = this;
    const {
      draggable
    } = inheritedAttributes;
    return (0,_index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__.e, {
      key: 'da600442894427dee1974a28e545613afac69fca',
      class: (0,_ionic_global_ca86cf32_js__WEBPACK_IMPORTED_MODULE_2__.b)(this)
    }, (0,_index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__.h)("img", {
      key: '16df0c7069af86c0fa7ce5af598bc0f63b4eb71a',
      decoding: "async",
      src: loadSrc,
      alt: alt,
      onLoad: onLoad,
      onError: loadError,
      part: "image",
      draggable: isDraggable(draggable)
    }));
  }
  get el() {
    return (0,_index_527b9e34_js__WEBPACK_IMPORTED_MODULE_0__.f)(this);
  }
  static get watchers() {
    return {
      "src": ["srcChanged"]
    };
  }
};
/**
 * Enumerated strings must be set as booleans
 * as Stencil will not render 'false' in the DOM.
 * The need to explicitly render draggable="true"
 * as only certain elements are draggable by default.
 * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable.
 */
const isDraggable = draggable => {
  switch (draggable) {
    case 'true':
      return true;
    case 'false':
      return false;
    default:
      return undefined;
  }
};
Img.style = IonImgStyle0;


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLWltZ19lbnRyeV9qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQzZHO0FBQzlDO0FBQ0Y7QUFFN0QsTUFBTVksTUFBTSxHQUFHLG9NQUFvTTtBQUNuTixNQUFNQyxZQUFZLEdBQUdELE1BQU07QUFFM0IsTUFBTUUsR0FBRyxHQUFHLE1BQU07RUFDZEMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ2pCZixxREFBZ0IsQ0FBQyxJQUFJLEVBQUVlLE9BQU8sQ0FBQztJQUMvQixJQUFJLENBQUNDLGNBQWMsR0FBR2QscURBQVcsQ0FBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO0lBQzVELElBQUksQ0FBQ2UsYUFBYSxHQUFHZixxREFBVyxDQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsQ0FBQyxDQUFDO0lBQzFELElBQUksQ0FBQ2dCLFFBQVEsR0FBR2hCLHFEQUFXLENBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDaEQsSUFBSSxDQUFDaUIsbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO0lBQzdCLElBQUksQ0FBQ0MsTUFBTSxHQUFHLE1BQU07TUFDaEIsSUFBSSxDQUFDSCxhQUFhLENBQUNJLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFDRCxJQUFJLENBQUNDLE9BQU8sR0FBRyxNQUFNO01BQ2pCLElBQUksQ0FBQ0osUUFBUSxDQUFDRyxJQUFJLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBQ0QsSUFBSSxDQUFDRSxPQUFPLEdBQUdDLFNBQVM7SUFDeEIsSUFBSSxDQUFDQyxTQUFTLEdBQUdELFNBQVM7SUFDMUIsSUFBSSxDQUFDRSxHQUFHLEdBQUdGLFNBQVM7SUFDcEIsSUFBSSxDQUFDRyxHQUFHLEdBQUdILFNBQVM7RUFDeEI7RUFDQUksVUFBVUEsQ0FBQSxFQUFHO0lBQ1QsSUFBSSxDQUFDQyxLQUFLLENBQUMsQ0FBQztF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QUFXLEdBQUlMLFNBQVMsSUFBSztFQUMvQixRQUFRQSxTQUFTO0lBQ2IsS0FBSyxNQUFNO01BQ1AsT0FBTyxJQUFJO0lBQ2YsS0FBSyxPQUFPO01BQ1IsT0FBTyxLQUFLO0lBQ2hCO01BQ0ksT0FBT3ZCLFNBQVM7RUFDeEI7QUFDSixDQUFDO0FBQ0RYLEdBQUcsQ0FBQ3lDLEtBQUssR0FBRzFDLFlBQVkiLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL0Bpb25pYy9jb3JlL2Rpc3QvZXNtL2lvbi1pbWcuZW50cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiAoQykgSW9uaWMgaHR0cDovL2lvbmljZnJhbWV3b3JrLmNvbSAtIE1JVCBMaWNlbnNlXG4gKi9cbmltcG9ydCB7IHIgYXMgcmVnaXN0ZXJJbnN0YW5jZSwgYyBhcyBjcmVhdGVFdmVudCwgaCwgZSBhcyBIb3N0LCBmIGFzIGdldEVsZW1lbnQgfSBmcm9tICcuL2luZGV4LTUyN2I5ZTM0LmpzJztcbmltcG9ydCB7IGggYXMgaW5oZXJpdEF0dHJpYnV0ZXMgfSBmcm9tICcuL2hlbHBlcnMtNzhlZmVlYzMuanMnO1xuaW1wb3J0IHsgYiBhcyBnZXRJb25Nb2RlIH0gZnJvbSAnLi9pb25pYy1nbG9iYWwtY2E4NmNmMzIuanMnO1xuXG5jb25zdCBpbWdDc3MgPSBcIjpob3N0e2Rpc3BsYXk6YmxvY2s7LW8tb2JqZWN0LWZpdDpjb250YWluO29iamVjdC1maXQ6Y29udGFpbn1pbWd7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDoxMDAlOy1vLW9iamVjdC1maXQ6aW5oZXJpdDtvYmplY3QtZml0OmluaGVyaXQ7LW8tb2JqZWN0LXBvc2l0aW9uOmluaGVyaXQ7b2JqZWN0LXBvc2l0aW9uOmluaGVyaXR9XCI7XG5jb25zdCBJb25JbWdTdHlsZTAgPSBpbWdDc3M7XG5cbmNvbnN0IEltZyA9IGNsYXNzIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0UmVmKSB7XG4gICAgICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XG4gICAgICAgIHRoaXMuaW9uSW1nV2lsbExvYWQgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkltZ1dpbGxMb2FkXCIsIDcpO1xuICAgICAgICB0aGlzLmlvbkltZ0RpZExvYWQgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkltZ0RpZExvYWRcIiwgNyk7XG4gICAgICAgIHRoaXMuaW9uRXJyb3IgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkVycm9yXCIsIDcpO1xuICAgICAgICB0aGlzLmluaGVyaXRlZEF0dHJpYnV0ZXMgPSB7fTtcbiAgICAgICAgdGhpcy5vbkxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmlvbkltZ0RpZExvYWQuZW1pdCgpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLm9uRXJyb3IgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmlvbkVycm9yLmVtaXQoKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5sb2FkU3JjID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmxvYWRFcnJvciA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5hbHQgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuc3JjID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBzcmNDaGFuZ2VkKCkge1xuICAgICAgICB0aGlzLmFkZElPKCk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgICAgICB0aGlzLmluaGVyaXRlZEF0dHJpYnV0ZXMgPSBpbmhlcml0QXR0cmlidXRlcyh0aGlzLmVsLCBbJ2RyYWdnYWJsZSddKTtcbiAgICB9XG4gICAgY29tcG9uZW50RGlkTG9hZCgpIHtcbiAgICAgICAgdGhpcy5hZGRJTygpO1xuICAgIH1cbiAgICBhZGRJTygpIHtcbiAgICAgICAgaWYgKHRoaXMuc3JjID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgICAgICdJbnRlcnNlY3Rpb25PYnNlcnZlcicgaW4gd2luZG93ICYmXG4gICAgICAgICAgICAnSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeScgaW4gd2luZG93ICYmXG4gICAgICAgICAgICAnaXNJbnRlcnNlY3RpbmcnIGluIHdpbmRvdy5JbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5LnByb3RvdHlwZSkge1xuICAgICAgICAgICAgdGhpcy5yZW1vdmVJTygpO1xuICAgICAgICAgICAgdGhpcy5pbyA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcigoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIE9uIHNsb3dlciBkZXZpY2VzLCBpdCBpcyBwb3NzaWJsZSBmb3IgYW4gaW50ZXJzZWN0aW9uIG9ic2VydmVyIGVudHJ5IHRvIGNvbnRhaW4gbXVsdGlwbGVcbiAgICAgICAgICAgICAgICAgKiBvYmplY3RzIGluIHRoZSBhcnJheS4gVGhpcyBoYXBwZW5zIHdoZW4gcXVpY2tseSBzY3JvbGxpbmcgYW4gaW1hZ2UgaW50byB2aWV3IGFuZCB0aGVuIG91dCBvZlxuICAgICAgICAgICAgICAgICAqIHZpZXcuIEluIHRoaXMgY2FzZSwgdGhlIGxhc3Qgb2JqZWN0IHJlcHJlc2VudHMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBpZiAoZGF0YVtkYXRhLmxlbmd0aCAtIDFdLmlzSW50ZXJzZWN0aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUlPKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmlvLm9ic2VydmUodGhpcy5lbCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBmYWxsIGJhY2sgdG8gc2V0VGltZW91dCBmb3IgU2FmYXJpIGFuZCBJRVxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmxvYWQoKSwgMjAwKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsb2FkKCkge1xuICAgICAgICB0aGlzLmxvYWRFcnJvciA9IHRoaXMub25FcnJvcjtcbiAgICAgICAgdGhpcy5sb2FkU3JjID0gdGhpcy5zcmM7XG4gICAgICAgIHRoaXMuaW9uSW1nV2lsbExvYWQuZW1pdCgpO1xuICAgIH1cbiAgICByZW1vdmVJTygpIHtcbiAgICAgICAgaWYgKHRoaXMuaW8pIHtcbiAgICAgICAgICAgIHRoaXMuaW8uZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgdGhpcy5pbyA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgbG9hZFNyYywgYWx0LCBvbkxvYWQsIGxvYWRFcnJvciwgaW5oZXJpdGVkQXR0cmlidXRlcyB9ID0gdGhpcztcbiAgICAgICAgY29uc3QgeyBkcmFnZ2FibGUgfSA9IGluaGVyaXRlZEF0dHJpYnV0ZXM7XG4gICAgICAgIHJldHVybiAoaChIb3N0LCB7IGtleTogJ2RhNjAwNDQyODk0NDI3ZGVlMTk3NGEyOGU1NDU2MTNhZmFjNjlmY2EnLCBjbGFzczogZ2V0SW9uTW9kZSh0aGlzKSB9LCBoKFwiaW1nXCIsIHsga2V5OiAnMTZkZjBjNzA2OWFmODZjMGZhN2NlNWFmNTk4YmMwZjYzYjRlYjcxYScsIGRlY29kaW5nOiBcImFzeW5jXCIsIHNyYzogbG9hZFNyYywgYWx0OiBhbHQsIG9uTG9hZDogb25Mb2FkLCBvbkVycm9yOiBsb2FkRXJyb3IsIHBhcnQ6IFwiaW1hZ2VcIiwgZHJhZ2dhYmxlOiBpc0RyYWdnYWJsZShkcmFnZ2FibGUpIH0pKSk7XG4gICAgfVxuICAgIGdldCBlbCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbiAgICBzdGF0aWMgZ2V0IHdhdGNoZXJzKCkgeyByZXR1cm4ge1xuICAgICAgICBcInNyY1wiOiBbXCJzcmNDaGFuZ2VkXCJdXG4gICAgfTsgfVxufTtcbi8qKlxuICogRW51bWVyYXRlZCBzdHJpbmdzIG11c3QgYmUgc2V0IGFzIGJvb2xlYW5zXG4gKiBhcyBTdGVuY2lsIHdpbGwgbm90IHJlbmRlciAnZmFsc2UnIGluIHRoZSBET00uXG4gKiBUaGUgbmVlZCB0byBleHBsaWNpdGx5IHJlbmRlciBkcmFnZ2FibGU9XCJ0cnVlXCJcbiAqIGFzIG9ubHkgY2VydGFpbiBlbGVtZW50cyBhcmUgZHJhZ2dhYmxlIGJ5IGRlZmF1bHQuXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1ML0dsb2JhbF9hdHRyaWJ1dGVzL2RyYWdnYWJsZS5cbiAqL1xuY29uc3QgaXNEcmFnZ2FibGUgPSAoZHJhZ2dhYmxlKSA9PiB7XG4gICAgc3dpdGNoIChkcmFnZ2FibGUpIHtcbiAgICAgICAgY2FzZSAndHJ1ZSc6XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgY2FzZSAnZmFsc2UnOlxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59O1xuSW1nLnN0eWxlID0gSW9uSW1nU3R5bGUwO1xuXG5leHBvcnQgeyBJbWcgYXMgaW9uX2ltZyB9O1xuIl0sIm5hbWVzIjpbInIiLCJyZWdpc3Rlckluc3RhbmNlIiwiYyIsImNyZWF0ZUV2ZW50IiwiaCIsImUiLCJIb3N0IiwiZiIsImdldEVsZW1lbnQiLCJpbmhlcml0QXR0cmlidXRlcyIsImIiLCJnZXRJb25Nb2RlIiwiaW1nQ3NzIiwiSW9uSW1nU3R5bGUwIiwiSW1nIiwiY29uc3RydWN0b3IiLCJob3N0UmVmIiwiaW9uSW1nV2lsbExvYWQiLCJpb25JbWdEaWRMb2FkIiwiaW9uRXJyb3IiLCJpbmhlcml0ZWRBdHRyaWJ1dGVzIiwib25Mb2FkIiwiZW1pdCIsIm9uRXJyb3IiLCJsb2FkU3JjIiwidW5kZWZpbmVkIiwibG9hZEVycm9yIiwiYWx0Iiwic3JjIiwic3JjQ2hhbmdlZCIsImFkZElPIiwiY29tcG9uZW50V2lsbExvYWQiLCJlbCIsImNvbXBvbmVudERpZExvYWQiLCJ3aW5kb3ciLCJJbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5IiwicHJvdG90eXBlIiwicmVtb3ZlSU8iLCJpbyIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwiZGF0YSIsImxlbmd0aCIsImlzSW50ZXJzZWN0aW5nIiwibG9hZCIsIm9ic2VydmUiLCJzZXRUaW1lb3V0IiwiZGlzY29ubmVjdCIsInJlbmRlciIsImRyYWdnYWJsZSIsImtleSIsImNsYXNzIiwiZGVjb2RpbmciLCJwYXJ0IiwiaXNEcmFnZ2FibGUiLCJ3YXRjaGVycyIsInN0eWxlIiwiaW9uX2ltZyJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8iLCJ4X2dvb2dsZV9pZ25vcmVMaXN0IjpbMF19