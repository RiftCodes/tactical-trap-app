"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-input_entry_js"],{

/***/ 761:
/*!**************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-input.entry.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ion_input: () => (/* binding */ Input)
/* harmony export */ });
/* harmony import */ var C_Users_Faizan_Desktop_Desktop_Projects_tactical_trap_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 9204);
/* harmony import */ var _index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-B_U9CtaY.js */ 4917);
/* harmony import */ var _notch_controller_C5LPspO8_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notch-controller-C5LPspO8.js */ 3012);
/* harmony import */ var _helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers-1O4D2b7y.js */ 450);
/* harmony import */ var _input_utils_zWijNCrx_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./input.utils-zWijNCrx.js */ 1593);
/* harmony import */ var _theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./theme-DiVJyqlX.js */ 247);
/* harmony import */ var _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-BLV6ykCk.js */ 4361);
/* harmony import */ var _index_ZjP4CjeZ_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./index-ZjP4CjeZ.js */ 575);

/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */







const inputIosCss = ".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:var(--ion-placeholder-opacity, 0.6);--padding-top:0px;--padding-end:0px;--padding-bottom:0px;--padding-start:0px;--background:transparent;--color:initial;--border-style:solid;--highlight-color-focused:var(--ion-color-primary, #0054e9);--highlight-color-valid:var(--ion-color-success, #2dd55b);--highlight-color-invalid:var(--ion-color-danger, #c5000f);--highlight-color:var(--highlight-color-focused);display:block;position:relative;width:100%;min-height:44px;padding:0 !important;color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item[slot=start].sc-ion-input-ios-h,ion-item [slot=start].sc-ion-input-ios-h,ion-item[slot=end].sc-ion-input-ios-h,ion-item [slot=end].sc-ion-input-ios-h{width:auto}.ion-color.sc-ion-input-ios-h{--highlight-color-focused:var(--ion-color-base)}.input-label-placement-floating.sc-ion-input-ios-h,.input-label-placement-stacked.sc-ion-input-ios-h{min-height:56px}.native-input.sc-ion-input-ios{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;position:relative;-ms-flex:1;flex:1;width:100%;max-width:100%;height:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:1}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.cloned-input.sc-ion-input-ios{top:0;bottom:0;position:absolute;pointer-events:none}.cloned-input.sc-ion-input-ios{inset-inline-start:0}.cloned-input.sc-ion-input-ios:disabled{opacity:1}.input-clear-icon.sc-ion-input-ios{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:auto;margin-bottom:auto;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:30px;height:30px;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.in-item-color.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{color:inherit}.input-clear-icon.sc-ion-input-ios:focus{opacity:0.5}.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.input-wrapper.sc-ion-input-ios{-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:stretch;align-items:stretch;height:inherit;min-height:inherit;-webkit-transition:background-color 15ms linear;transition:background-color 15ms linear;background:var(--background);line-height:normal}.native-wrapper.sc-ion-input-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;width:100%}.ion-touched.ion-invalid.sc-ion-input-ios-h{--highlight-color:var(--highlight-color-invalid)}.ion-valid.sc-ion-input-ios-h{--highlight-color:var(--highlight-color-valid)}.input-bottom.sc-ion-input-ios{-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:5px;padding-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-top:var(--border-width) var(--border-style) var(--border-color);font-size:0.75rem;white-space:normal}.has-focus.ion-valid.sc-ion-input-ios-h,.ion-touched.ion-invalid.sc-ion-input-ios-h{--border-color:var(--highlight-color)}.input-bottom.sc-ion-input-ios .error-text.sc-ion-input-ios{display:none;color:var(--highlight-color-invalid)}.input-bottom.sc-ion-input-ios .helper-text.sc-ion-input-ios{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid.sc-ion-input-ios-h .input-bottom.sc-ion-input-ios .error-text.sc-ion-input-ios{display:block}.ion-touched.ion-invalid.sc-ion-input-ios-h .input-bottom.sc-ion-input-ios .helper-text.sc-ion-input-ios{display:none}.input-bottom.sc-ion-input-ios .counter.sc-ion-input-ios{-webkit-margin-start:auto;margin-inline-start:auto;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d));white-space:nowrap;-webkit-padding-start:16px;padding-inline-start:16px}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios{caret-color:var(--highlight-color)}.label-text-wrapper.sc-ion-input-ios{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;max-width:200px;-webkit-transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);pointer-events:none}.label-text.sc-ion-input-ios,.sc-ion-input-ios-s>[slot=label]{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.label-text-wrapper-hidden.sc-ion-input-ios,.input-outline-notch-hidden.sc-ion-input-ios{display:none}.input-wrapper.sc-ion-input-ios input.sc-ion-input-ios{-webkit-transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.input-label-placement-start.sc-ion-input-ios-h .input-wrapper.sc-ion-input-ios{-ms-flex-direction:row;flex-direction:row}.input-label-placement-start.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}.input-label-placement-end.sc-ion-input-ios-h .input-wrapper.sc-ion-input-ios{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.input-label-placement-end.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0;margin-top:0;margin-bottom:0}.input-label-placement-fixed.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}.input-label-placement-fixed.sc-ion-input-ios-h .label-text.sc-ion-input-ios{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}.input-label-placement-stacked.sc-ion-input-ios-h .input-wrapper.sc-ion-input-ios,.input-label-placement-floating.sc-ion-input-ios-h .input-wrapper.sc-ion-input-ios{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:start}.input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,.input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-transform-origin:left top;transform-origin:left top;max-width:100%;z-index:2}[dir=rtl].sc-ion-input-ios-h -no-combinator.input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h -no-combinator.input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl].input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl] .input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h -no-combinator.input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h -no-combinator.input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl].input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl] .input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){.input-label-placement-stacked.sc-ion-input-ios-h:dir(rtl) .label-text-wrapper.sc-ion-input-ios,.input-label-placement-floating.sc-ion-input-ios-h:dir(rtl) .label-text-wrapper.sc-ion-input-ios{-webkit-transform-origin:right top;transform-origin:right top}}.input-label-placement-stacked.sc-ion-input-ios-h input.sc-ion-input-ios,.input-label-placement-floating.sc-ion-input-ios-h input.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:1px;margin-bottom:0}.input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-transform:translateY(100%) scale(1);transform:translateY(100%) scale(1)}.input-label-placement-floating.sc-ion-input-ios-h input.sc-ion-input-ios{opacity:0}.has-focus.input-label-placement-floating.sc-ion-input-ios-h input.sc-ion-input-ios,.has-value.input-label-placement-floating.sc-ion-input-ios-h input.sc-ion-input-ios{opacity:1}.label-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-transform:translateY(50%) scale(0.75);transform:translateY(50%) scale(0.75);max-width:calc(100% / 0.75)}.sc-ion-input-ios-s>[slot=start]:last-of-type{-webkit-margin-end:16px;margin-inline-end:16px;-webkit-margin-start:0;margin-inline-start:0}.sc-ion-input-ios-s>[slot=end]:first-of-type{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}.sc-ion-input-ios-h[disabled].sc-ion-input-ios-s>ion-input-password-toggle,.sc-ion-input-ios-h[disabled] .sc-ion-input-ios-s>ion-input-password-toggle,.sc-ion-input-ios-h[readonly].sc-ion-input-ios-s>ion-input-password-toggle,.sc-ion-input-ios-h[readonly] .sc-ion-input-ios-s>ion-input-password-toggle{display:none}.sc-ion-input-ios-h{--border-width:0.55px;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));--highlight-height:0px;font-size:inherit}.input-clear-icon.sc-ion-input-ios ion-icon.sc-ion-input-ios{width:18px;height:18px}.input-disabled.sc-ion-input-ios-h{opacity:0.3}.sc-ion-input-ios-s>ion-button[slot=start].button-has-icon-only,.sc-ion-input-ios-s>ion-button[slot=end].button-has-icon-only{--border-radius:50%;--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;aspect-ratio:1}";
const inputMdCss = ".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:var(--ion-placeholder-opacity, 0.6);--padding-top:0px;--padding-end:0px;--padding-bottom:0px;--padding-start:0px;--background:transparent;--color:initial;--border-style:solid;--highlight-color-focused:var(--ion-color-primary, #0054e9);--highlight-color-valid:var(--ion-color-success, #2dd55b);--highlight-color-invalid:var(--ion-color-danger, #c5000f);--highlight-color:var(--highlight-color-focused);display:block;position:relative;width:100%;min-height:44px;padding:0 !important;color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item[slot=start].sc-ion-input-md-h,ion-item [slot=start].sc-ion-input-md-h,ion-item[slot=end].sc-ion-input-md-h,ion-item [slot=end].sc-ion-input-md-h{width:auto}.ion-color.sc-ion-input-md-h{--highlight-color-focused:var(--ion-color-base)}.input-label-placement-floating.sc-ion-input-md-h,.input-label-placement-stacked.sc-ion-input-md-h{min-height:56px}.native-input.sc-ion-input-md{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;position:relative;-ms-flex:1;flex:1;width:100%;max-width:100%;height:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:1}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.cloned-input.sc-ion-input-md{top:0;bottom:0;position:absolute;pointer-events:none}.cloned-input.sc-ion-input-md{inset-inline-start:0}.cloned-input.sc-ion-input-md:disabled{opacity:1}.input-clear-icon.sc-ion-input-md{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:auto;margin-bottom:auto;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:30px;height:30px;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.in-item-color.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{color:inherit}.input-clear-icon.sc-ion-input-md:focus{opacity:0.5}.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.input-wrapper.sc-ion-input-md{-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:stretch;align-items:stretch;height:inherit;min-height:inherit;-webkit-transition:background-color 15ms linear;transition:background-color 15ms linear;background:var(--background);line-height:normal}.native-wrapper.sc-ion-input-md{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;width:100%}.ion-touched.ion-invalid.sc-ion-input-md-h{--highlight-color:var(--highlight-color-invalid)}.ion-valid.sc-ion-input-md-h{--highlight-color:var(--highlight-color-valid)}.input-bottom.sc-ion-input-md{-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:5px;padding-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-top:var(--border-width) var(--border-style) var(--border-color);font-size:0.75rem;white-space:normal}.has-focus.ion-valid.sc-ion-input-md-h,.ion-touched.ion-invalid.sc-ion-input-md-h{--border-color:var(--highlight-color)}.input-bottom.sc-ion-input-md .error-text.sc-ion-input-md{display:none;color:var(--highlight-color-invalid)}.input-bottom.sc-ion-input-md .helper-text.sc-ion-input-md{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid.sc-ion-input-md-h .input-bottom.sc-ion-input-md .error-text.sc-ion-input-md{display:block}.ion-touched.ion-invalid.sc-ion-input-md-h .input-bottom.sc-ion-input-md .helper-text.sc-ion-input-md{display:none}.input-bottom.sc-ion-input-md .counter.sc-ion-input-md{-webkit-margin-start:auto;margin-inline-start:auto;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d));white-space:nowrap;-webkit-padding-start:16px;padding-inline-start:16px}.has-focus.sc-ion-input-md-h input.sc-ion-input-md{caret-color:var(--highlight-color)}.label-text-wrapper.sc-ion-input-md{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;max-width:200px;-webkit-transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);pointer-events:none}.label-text.sc-ion-input-md,.sc-ion-input-md-s>[slot=label]{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.label-text-wrapper-hidden.sc-ion-input-md,.input-outline-notch-hidden.sc-ion-input-md{display:none}.input-wrapper.sc-ion-input-md input.sc-ion-input-md{-webkit-transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.input-label-placement-start.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{-ms-flex-direction:row;flex-direction:row}.input-label-placement-start.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}.input-label-placement-end.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.input-label-placement-end.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0;margin-top:0;margin-bottom:0}.input-label-placement-fixed.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}.input-label-placement-fixed.sc-ion-input-md-h .label-text.sc-ion-input-md{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}.input-label-placement-stacked.sc-ion-input-md-h .input-wrapper.sc-ion-input-md,.input-label-placement-floating.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:start}.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:left top;transform-origin:left top;max-width:100%;z-index:2}[dir=rtl].sc-ion-input-md-h -no-combinator.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h -no-combinator.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h -no-combinator.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h -no-combinator.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){.input-label-placement-stacked.sc-ion-input-md-h:dir(rtl) .label-text-wrapper.sc-ion-input-md,.input-label-placement-floating.sc-ion-input-md-h:dir(rtl) .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:right top;transform-origin:right top}}.input-label-placement-stacked.sc-ion-input-md-h input.sc-ion-input-md,.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:1px;margin-bottom:0}.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform:translateY(100%) scale(1);transform:translateY(100%) scale(1)}.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md{opacity:0}.has-focus.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md,.has-value.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md{opacity:1}.label-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform:translateY(50%) scale(0.75);transform:translateY(50%) scale(0.75);max-width:calc(100% / 0.75)}.sc-ion-input-md-s>[slot=start]:last-of-type{-webkit-margin-end:16px;margin-inline-end:16px;-webkit-margin-start:0;margin-inline-start:0}.sc-ion-input-md-s>[slot=end]:first-of-type{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}.sc-ion-input-md-h[disabled].sc-ion-input-md-s>ion-input-password-toggle,.sc-ion-input-md-h[disabled] .sc-ion-input-md-s>ion-input-password-toggle,.sc-ion-input-md-h[readonly].sc-ion-input-md-s>ion-input-password-toggle,.sc-ion-input-md-h[readonly] .sc-ion-input-md-s>ion-input-password-toggle{display:none}.input-fill-solid.sc-ion-input-md-h{--background:var(--ion-color-step-50, var(--ion-background-color-step-50, #f2f2f2));--border-color:var(--ion-color-step-500, var(--ion-background-color-step-500, gray));--border-radius:4px;--padding-start:16px;--padding-end:16px;min-height:56px}.input-fill-solid.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{border-bottom:var(--border-width) var(--border-style) var(--border-color)}.has-focus.input-fill-solid.ion-valid.sc-ion-input-md-h,.input-fill-solid.ion-touched.ion-invalid.sc-ion-input-md-h{--border-color:var(--highlight-color)}.input-fill-solid.sc-ion-input-md-h .input-bottom.sc-ion-input-md{border-top:none}@media (any-hover: hover){.input-fill-solid.sc-ion-input-md-h:hover{--background:var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));--border-color:var(--ion-color-step-750, var(--ion-background-color-step-750, #404040))}}.input-fill-solid.has-focus.sc-ion-input-md-h{--background:var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));--border-color:var(--ion-color-step-750, var(--ion-background-color-step-750, #404040))}.input-fill-solid.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{border-start-start-radius:var(--border-radius);border-start-end-radius:var(--border-radius);border-end-end-radius:0px;border-end-start-radius:0px}.label-floating.input-fill-solid.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{max-width:calc(100% / 0.75)}.input-fill-outline.sc-ion-input-md-h{--border-color:var(--ion-color-step-300, var(--ion-background-color-step-300, #b3b3b3));--border-radius:4px;--padding-start:16px;--padding-end:16px;min-height:56px}.input-fill-outline.input-shape-round.sc-ion-input-md-h{--border-radius:28px;--padding-start:32px;--padding-end:32px}.has-focus.input-fill-outline.ion-valid.sc-ion-input-md-h,.input-fill-outline.ion-touched.ion-invalid.sc-ion-input-md-h{--border-color:var(--highlight-color)}@media (any-hover: hover){.input-fill-outline.sc-ion-input-md-h:hover{--border-color:var(--ion-color-step-750, var(--ion-background-color-step-750, #404040))}}.input-fill-outline.has-focus.sc-ion-input-md-h{--border-width:var(--highlight-height);--border-color:var(--highlight-color)}.input-fill-outline.sc-ion-input-md-h .input-bottom.sc-ion-input-md{border-top:none}.input-fill-outline.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{border-bottom:none}.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:left top;transform-origin:left top;position:absolute;max-width:calc(100% - var(--padding-start) - var(--padding-end))}[dir=rtl].sc-ion-input-md-h -no-combinator.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h -no-combinator.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h -no-combinator.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h -no-combinator.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h:dir(rtl) .label-text-wrapper.sc-ion-input-md,.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h:dir(rtl) .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:right top;transform-origin:right top}}.input-fill-outline.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{position:relative}.label-floating.input-fill-outline.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform:translateY(-32%) scale(0.75);transform:translateY(-32%) scale(0.75);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;max-width:calc((100% - var(--padding-start) - var(--padding-end) - 8px) / 0.75)}.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h input.sc-ion-input-md,.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:6px;margin-bottom:6px}.input-fill-outline.sc-ion-input-md-h .input-outline-container.sc-ion-input-md{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;width:100%;height:100%}.input-fill-outline.sc-ion-input-md-h .input-outline-start.sc-ion-input-md,.input-fill-outline.sc-ion-input-md-h .input-outline-end.sc-ion-input-md{pointer-events:none}.input-fill-outline.sc-ion-input-md-h .input-outline-start.sc-ion-input-md,.input-fill-outline.sc-ion-input-md-h .input-outline-notch.sc-ion-input-md,.input-fill-outline.sc-ion-input-md-h .input-outline-end.sc-ion-input-md{border-top:var(--border-width) var(--border-style) var(--border-color);border-bottom:var(--border-width) var(--border-style) var(--border-color)}.input-fill-outline.sc-ion-input-md-h .input-outline-notch.sc-ion-input-md{max-width:calc(100% - var(--padding-start) - var(--padding-end))}.input-fill-outline.sc-ion-input-md-h .notch-spacer.sc-ion-input-md{-webkit-padding-end:8px;padding-inline-end:8px;font-size:calc(1em * 0.75);opacity:0;pointer-events:none;-webkit-box-sizing:content-box;box-sizing:content-box}.input-fill-outline.sc-ion-input-md-h .input-outline-start.sc-ion-input-md{border-start-start-radius:var(--border-radius);border-start-end-radius:0px;border-end-end-radius:0px;border-end-start-radius:var(--border-radius);-webkit-border-start:var(--border-width) var(--border-style) var(--border-color);border-inline-start:var(--border-width) var(--border-style) var(--border-color);width:calc(var(--padding-start) - 4px)}.input-fill-outline.sc-ion-input-md-h .input-outline-end.sc-ion-input-md{-webkit-border-end:var(--border-width) var(--border-style) var(--border-color);border-inline-end:var(--border-width) var(--border-style) var(--border-color);border-start-start-radius:0px;border-start-end-radius:var(--border-radius);border-end-end-radius:var(--border-radius);border-end-start-radius:0px;-ms-flex-positive:1;flex-grow:1}.label-floating.input-fill-outline.sc-ion-input-md-h .input-outline-notch.sc-ion-input-md{border-top:none}.sc-ion-input-md-h{--border-width:1px;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));--highlight-height:2px;font-size:inherit}.input-clear-icon.sc-ion-input-md ion-icon.sc-ion-input-md{width:22px;height:22px}.input-disabled.sc-ion-input-md-h{opacity:0.38}.has-focus.ion-valid.sc-ion-input-md-h,.ion-touched.ion-invalid.sc-ion-input-md-h{--border-color:var(--highlight-color)}.input-bottom.sc-ion-input-md .counter.sc-ion-input-md{letter-spacing:0.0333333333em}.input-label-placement-floating.has-focus.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-label-placement-stacked.has-focus.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{color:var(--highlight-color)}.has-focus.input-label-placement-floating.ion-valid.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-label-placement-floating.ion-touched.ion-invalid.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.has-focus.input-label-placement-stacked.ion-valid.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-label-placement-stacked.ion-touched.ion-invalid.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{color:var(--highlight-color)}.input-highlight.sc-ion-input-md{bottom:-1px;position:absolute;width:100%;height:var(--highlight-height);-webkit-transform:scale(0);transform:scale(0);-webkit-transition:-webkit-transform 200ms;transition:-webkit-transform 200ms;transition:transform 200ms;transition:transform 200ms, -webkit-transform 200ms;background:var(--highlight-color)}.input-highlight.sc-ion-input-md{inset-inline-start:0}.has-focus.sc-ion-input-md-h .input-highlight.sc-ion-input-md{-webkit-transform:scale(1);transform:scale(1)}.in-item.sc-ion-input-md-h .input-highlight.sc-ion-input-md{bottom:0}.in-item.sc-ion-input-md-h .input-highlight.sc-ion-input-md{inset-inline-start:0}.input-shape-round.sc-ion-input-md-h{--border-radius:16px}.sc-ion-input-md-s>ion-button[slot=start].button-has-icon-only,.sc-ion-input-md-s>ion-button[slot=end].button-has-icon-only{--border-radius:50%;--padding-start:8px;--padding-end:8px;--padding-top:8px;--padding-bottom:8px;aspect-ratio:1;min-height:40px}";
const Input = class {
  constructor(hostRef) {
    (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.ionInput = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionInput", 7);
    this.ionChange = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionChange", 7);
    this.ionBlur = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionBlur", 7);
    this.ionFocus = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionFocus", 7);
    this.inputId = `ion-input-${inputIds++}`;
    this.helperTextId = `${this.inputId}-helper-text`;
    this.errorTextId = `${this.inputId}-error-text`;
    this.inheritedAttributes = {};
    this.isComposing = false;
    /**
     * `true` if the input was cleared as a result of the user typing
     * with `clearOnEdit` enabled.
     *
     * Resets when the input loses focus.
     */
    this.didInputClearOnEdit = false;
    /**
     * The `hasFocus` state ensures the focus class is
     * added regardless of how the element is focused.
     * The `ion-focused` class only applies when focused
     * via tabbing, not by clicking.
     * The `has-focus` logic was added to ensure the class
     * is applied in both cases.
     */
    this.hasFocus = false;
    /**
     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.
     * Available options: `"off"`, `"none"`, `"on"`, `"sentences"`, `"words"`, `"characters"`.
     */
    this.autocapitalize = 'off';
    /**
     * Indicates whether the value of the control can be automatically completed by the browser.
     */
    this.autocomplete = 'off';
    /**
     * Whether auto correction should be enabled when the user is entering/editing the text value.
     */
    this.autocorrect = 'off';
    /**
     * Sets the [`autofocus` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus) on the native input element.
     *
     * This may not be sufficient for the element to be focused on page load. See [managing focus](/docs/developing/managing-focus) for more information.
     */
    this.autofocus = false;
    /**
     * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.
     */
    this.clearInput = false;
    /**
     * If `true`, a character counter will display the ratio of characters used and the total character limit. Developers must also set the `maxlength` property for the counter to be calculated correctly.
     */
    this.counter = false;
    /**
     * If `true`, the user cannot interact with the input.
     */
    this.disabled = false;
    /**
     * Where to place the label relative to the input.
     * `"start"`: The label will appear to the left of the input in LTR and to the right in RTL.
     * `"end"`: The label will appear to the right of the input in LTR and to the left in RTL.
     * `"floating"`: The label will appear smaller and above the input when the input is focused or it has a value. Otherwise it will appear on top of the input.
     * `"stacked"`: The label will appear smaller and above the input regardless even when the input is blurred or has no value.
     * `"fixed"`: The label has the same behavior as `"start"` except it also has a fixed width. Long text will be truncated with ellipses ("...").
     */
    this.labelPlacement = 'start';
    /**
     * The name of the control, which is submitted with the form data.
     */
    this.name = this.inputId;
    /**
     * If `true`, the user cannot modify the value.
     */
    this.readonly = false;
    /**
     * If `true`, the user must fill in a value before submitting a form.
     */
    this.required = false;
    /**
     * If `true`, the element will have its spelling and grammar checked.
     */
    this.spellcheck = false;
    /**
     * The type of control to display. The default type is text.
     */
    this.type = 'text';
    /**
     * The value of the input.
     */
    this.value = '';
    this.onInput = ev => {
      const input = ev.target;
      if (input) {
        this.value = input.value || '';
      }
      this.emitInputChange(ev);
    };
    this.onChange = ev => {
      this.emitValueChange(ev);
    };
    this.onBlur = ev => {
      this.hasFocus = false;
      if (this.focusedValue !== this.value) {
        /**
         * Emits the `ionChange` event when the input value
         * is different than the value when the input was focused.
         */
        this.emitValueChange(ev);
      }
      this.didInputClearOnEdit = false;
      this.ionBlur.emit(ev);
    };
    this.onFocus = ev => {
      this.hasFocus = true;
      this.focusedValue = this.value;
      this.ionFocus.emit(ev);
    };
    this.onKeydown = ev => {
      this.checkClearOnEdit(ev);
    };
    this.onCompositionStart = () => {
      this.isComposing = true;
    };
    this.onCompositionEnd = () => {
      this.isComposing = false;
    };
    this.clearTextInput = ev => {
      if (this.clearInput && !this.readonly && !this.disabled && ev) {
        ev.preventDefault();
        ev.stopPropagation();
        // Attempt to focus input again after pressing clear button
        this.setFocus();
      }
      this.value = '';
      this.emitInputChange(ev);
    };
    /**
     * Stops propagation when the label is clicked,
     * otherwise, two clicks will be triggered.
     */
    this.onLabelClick = ev => {
      // Only stop propagation if the click was directly on the label
      // and not on the input or other child elements
      if (ev.target === ev.currentTarget) {
        ev.stopPropagation();
      }
    };
  }
  debounceChanged() {
    const {
      ionInput,
      debounce,
      originalIonInput
    } = this;
    /**
     * If debounce is undefined, we have to manually revert the ionInput emitter in case
     * debounce used to be set to a number. Otherwise, the event would stay debounced.
     */
    this.ionInput = debounce === undefined ? originalIonInput !== null && originalIonInput !== void 0 ? originalIonInput : ionInput : (0,_helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_3__.d)(ionInput, debounce);
  }
  /**
   * Whenever the type on the input changes we need
   * to update the internal type prop on the password
   * toggle so that that correct icon is shown.
   */
  onTypeChange() {
    const passwordToggle = this.el.querySelector('ion-input-password-toggle');
    if (passwordToggle) {
      passwordToggle.type = this.type;
    }
  }
  /**
   * Update the native input element when the value changes
   */
  valueChanged() {
    const nativeInput = this.nativeInput;
    const value = this.getValue();
    if (nativeInput && nativeInput.value !== value && !this.isComposing) {
      /**
       * Assigning the native input's value on attribute
       * value change, allows `ionInput` implementations
       * to override the control's value.
       *
       * Used for patterns such as input trimming (removing whitespace),
       * or input masking.
       */
      nativeInput.value = value;
    }
  }
  /**
   * dir is a globally enumerated attribute.
   * As a result, creating these as properties
   * can have unintended side effects. Instead, we
   * listen for attribute changes and inherit them
   * to the inner `<input>` element.
   */
  onDirChanged(newValue) {
    this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), {
      dir: newValue
    });
    (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.n)(this);
  }
  /**
   * This prevents the native input from emitting the click event.
   * Instead, the click event from the ion-input is emitted.
   */
  onClickCapture(ev) {
    const nativeInput = this.nativeInput;
    if (nativeInput && ev.target === nativeInput) {
      ev.stopPropagation();
      this.el.click();
    }
  }
  componentWillLoad() {
    this.inheritedAttributes = Object.assign(Object.assign({}, (0,_helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.el)), (0,_helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_3__.b)(this.el, ['tabindex', 'title', 'data-form-type', 'dir']));
  }
  connectedCallback() {
    const {
      el
    } = this;
    this.slotMutationController = (0,_input_utils_zWijNCrx_js__WEBPACK_IMPORTED_MODULE_4__.c)(el, ['label', 'start', 'end'], () => (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.n)(this));
    this.notchController = (0,_notch_controller_C5LPspO8_js__WEBPACK_IMPORTED_MODULE_2__.c)(el, () => this.notchSpacerEl, () => this.labelSlot);
    this.debounceChanged();
    {
      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {
        detail: this.el
      }));
    }
  }
  componentDidLoad() {
    this.originalIonInput = this.ionInput;
    /**
     * Set the type on the password toggle in the event that this input's
     * type was set async and does not match the default type for the password toggle.
     * This can happen when the type is bound using a JS framework binding syntax
     * such as [type] in Angular.
     */
    this.onTypeChange();
    this.debounceChanged();
  }
  componentDidRender() {
    var _a;
    (_a = this.notchController) === null || _a === void 0 ? void 0 : _a.calculateNotchWidth();
  }
  disconnectedCallback() {
    {
      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {
        detail: this.el
      }));
    }
    if (this.slotMutationController) {
      this.slotMutationController.destroy();
      this.slotMutationController = undefined;
    }
    if (this.notchController) {
      this.notchController.destroy();
      this.notchController = undefined;
    }
  }
  /**
   * Sets focus on the native `input` in `ion-input`. Use this method instead of the global
   * `input.focus()`.
   *
   * Developers who wish to focus an input when a page enters
   * should call `setFocus()` in the `ionViewDidEnter()` lifecycle method.
   *
   * Developers who wish to focus an input when an overlay is presented
   * should call `setFocus` after `didPresent` has resolved.
   *
   * See [managing focus](/docs/developing/managing-focus) for more information.
   */
  setFocus() {
    var _this = this;
    return (0,C_Users_Faizan_Desktop_Desktop_Projects_tactical_trap_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this.nativeInput) {
        _this.nativeInput.focus();
      }
    })();
  }
  /**
   * Returns the native `<input>` element used under the hood.
   */
  getInputElement() {
    var _this2 = this;
    return (0,C_Users_Faizan_Desktop_Desktop_Projects_tactical_trap_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      /**
       * If this gets called in certain early lifecycle hooks (ex: Vue onMounted),
       * nativeInput won't be defined yet with the custom elements build, so wait for it to load in.
       */
      if (!_this2.nativeInput) {
        yield new Promise(resolve => (0,_helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_3__.c)(_this2.el, resolve));
      }
      return Promise.resolve(_this2.nativeInput);
    })();
  }
  /**
   * Emits an `ionChange` event.
   *
   * This API should be called for user committed changes.
   * This API should not be used for external value changes.
   */
  emitValueChange(event) {
    const {
      value
    } = this;
    // Checks for both null and undefined values
    const newValue = value == null ? value : value.toString();
    // Emitting a value change should update the internal state for tracking the focused value
    this.focusedValue = newValue;
    this.ionChange.emit({
      value: newValue,
      event
    });
  }
  /**
   * Emits an `ionInput` event.
   */
  emitInputChange(event) {
    const {
      value
    } = this;
    // Checks for both null and undefined values
    const newValue = value == null ? value : value.toString();
    this.ionInput.emit({
      value: newValue,
      event
    });
  }
  shouldClearOnEdit() {
    const {
      type,
      clearOnEdit
    } = this;
    return clearOnEdit === undefined ? type === 'password' : clearOnEdit;
  }
  getValue() {
    return typeof this.value === 'number' ? this.value.toString() : (this.value || '').toString();
  }
  checkClearOnEdit(ev) {
    if (!this.shouldClearOnEdit()) {
      return;
    }
    /**
     * The following keys do not modify the
     * contents of the input. As a result, pressing
     * them should not edit the input.
     *
     * We can't check to see if the value of the input
     * was changed because we call checkClearOnEdit
     * in a keydown listener, and the key has not yet
     * been added to the input.
     */
    const IGNORED_KEYS = ['Enter', 'Tab', 'Shift', 'Meta', 'Alt', 'Control'];
    const pressedIgnoredKey = IGNORED_KEYS.includes(ev.key);
    /**
     * Clear the input if the control has not been previously cleared during focus.
     * Do not clear if the user hitting enter to submit a form.
     */
    if (!this.didInputClearOnEdit && this.hasValue() && !pressedIgnoredKey) {
      this.value = '';
      this.emitInputChange(ev);
    }
    /**
     * Pressing an IGNORED_KEYS first and
     * then an allowed key will cause the input to not
     * be cleared.
     */
    if (!pressedIgnoredKey) {
      this.didInputClearOnEdit = true;
    }
  }
  hasValue() {
    return this.getValue().length > 0;
  }
  /**
   * Renders the helper text or error text values
   */
  renderHintText() {
    const {
      helperText,
      errorText,
      helperTextId,
      errorTextId
    } = this;
    return [(0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      id: helperTextId,
      class: "helper-text"
    }, helperText), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      id: errorTextId,
      class: "error-text"
    }, errorText)];
  }
  getHintTextID() {
    const {
      el,
      helperText,
      errorText,
      helperTextId,
      errorTextId
    } = this;
    if (el.classList.contains('ion-touched') && el.classList.contains('ion-invalid') && errorText) {
      return errorTextId;
    }
    if (helperText) {
      return helperTextId;
    }
    return undefined;
  }
  renderCounter() {
    const {
      counter,
      maxlength,
      counterFormatter,
      value
    } = this;
    if (counter !== true || maxlength === undefined) {
      return;
    }
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "counter"
    }, (0,_input_utils_zWijNCrx_js__WEBPACK_IMPORTED_MODULE_4__.g)(value, maxlength, counterFormatter));
  }
  /**
   * Responsible for rendering helper text,
   * error text, and counter. This element should only
   * be rendered if hint text is set or counter is enabled.
   */
  renderBottomContent() {
    const {
      counter,
      helperText,
      errorText,
      maxlength
    } = this;
    /**
     * undefined and empty string values should
     * be treated as not having helper/error text.
     */
    const hasHintText = !!helperText || !!errorText;
    const hasCounter = counter === true && maxlength !== undefined;
    if (!hasHintText && !hasCounter) {
      return;
    }
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "input-bottom"
    }, this.renderHintText(), this.renderCounter());
  }
  renderLabel() {
    const {
      label
    } = this;
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        'label-text-wrapper': true,
        'label-text-wrapper-hidden': !this.hasLabel
      }
    }, label === undefined ? (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "label"
    }) : (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "label-text"
    }, label));
  }
  /**
   * Gets any content passed into the `label` slot,
   * not the <slot> definition.
   */
  get labelSlot() {
    return this.el.querySelector('[slot="label"]');
  }
  /**
   * Returns `true` if label content is provided
   * either by a prop or a content. If you want
   * to get the plaintext value of the label use
   * the `labelText` getter instead.
   */
  get hasLabel() {
    return this.label !== undefined || this.labelSlot !== null;
  }
  /**
   * Renders the border container
   * when fill="outline".
   */
  renderLabelContainer() {
    const mode = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.e)(this);
    const hasOutlineFill = mode === 'md' && this.fill === 'outline';
    if (hasOutlineFill) {
      /**
       * The outline fill has a special outline
       * that appears around the input and the label.
       * Certain stacked and floating label placements cause the
       * label to translate up and create a "cut out"
       * inside of that border by using the notch-spacer element.
       */
      return [(0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "input-outline-container"
      }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "input-outline-start"
      }), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: {
          'input-outline-notch': true,
          'input-outline-notch-hidden': !this.hasLabel
        }
      }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "notch-spacer",
        "aria-hidden": "true",
        ref: el => this.notchSpacerEl = el
      }, this.label)), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "input-outline-end"
      })), this.renderLabel()];
    }
    /**
     * If not using the outline style,
     * we can render just the label.
     */
    return this.renderLabel();
  }
  render() {
    const {
      disabled,
      fill,
      readonly,
      shape,
      inputId,
      labelPlacement,
      el,
      hasFocus,
      clearInputIcon
    } = this;
    const mode = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.e)(this);
    const value = this.getValue();
    const inItem = (0,_theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_5__.h)('ion-item', this.el);
    const shouldRenderHighlight = mode === 'md' && fill !== 'outline' && !inItem;
    const defaultClearIcon = mode === 'ios' ? _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_6__.b : _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_6__.d;
    const clearIconData = clearInputIcon !== null && clearInputIcon !== void 0 ? clearInputIcon : defaultClearIcon;
    const hasValue = this.hasValue();
    const hasStartEndSlots = el.querySelector('[slot="start"], [slot="end"]') !== null;
    /**
     * If the label is stacked, it should always sit above the input.
     * For floating labels, the label should move above the input if
     * the input has a value, is focused, or has anything in either
     * the start or end slot.
     *
     * If there is content in the start slot, the label would overlap
     * it if not forced to float. This is also applied to the end slot
     * because with the default or solid fills, the input is not
     * vertically centered in the container, but the label is. This
     * causes the slots and label to appear vertically offset from each
     * other when the label isn't floating above the input. This doesn't
     * apply to the outline fill, but this was not accounted for to keep
     * things consistent.
     *
     * TODO(FW-5592): Remove hasStartEndSlots condition
     */
    const labelShouldFloat = labelPlacement === 'stacked' || labelPlacement === 'floating' && (hasValue || hasFocus || hasStartEndSlots);
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.j, {
      key: '41b2526627e7d2773a80f011b123284203a71ca0',
      class: (0,_theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_5__.c)(this.color, {
        [mode]: true,
        'has-value': hasValue,
        'has-focus': hasFocus,
        'label-floating': labelShouldFloat,
        [`input-fill-${fill}`]: fill !== undefined,
        [`input-shape-${shape}`]: shape !== undefined,
        [`input-label-placement-${labelPlacement}`]: true,
        'in-item': inItem,
        'in-item-color': (0,_theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_5__.h)('ion-item.ion-color', this.el),
        'input-disabled': disabled
      })
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("label", {
      key: '9ab078363e32528102b441ad1791d83f86fdcbdc',
      class: "input-wrapper",
      htmlFor: inputId,
      onClick: this.onLabelClick
    }, this.renderLabelContainer(), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      key: 'e34b594980ec62e4c618e827fadf7669a39ad0d8',
      class: "native-wrapper",
      onClick: this.onLabelClick
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      key: '12dc04ead5502e9e5736240e918bf9331bf7b5d9',
      name: "start"
    }), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("input", Object.assign({
      key: 'df356eb4ced23109b2c0242f36dc043aba8782d6',
      class: "native-input",
      ref: input => this.nativeInput = input,
      id: inputId,
      disabled: disabled,
      autoCapitalize: this.autocapitalize,
      autoComplete: this.autocomplete,
      autoCorrect: this.autocorrect,
      autoFocus: this.autofocus,
      enterKeyHint: this.enterkeyhint,
      inputMode: this.inputmode,
      min: this.min,
      max: this.max,
      minLength: this.minlength,
      maxLength: this.maxlength,
      multiple: this.multiple,
      name: this.name,
      pattern: this.pattern,
      placeholder: this.placeholder || '',
      readOnly: readonly,
      required: this.required,
      spellcheck: this.spellcheck,
      step: this.step,
      type: this.type,
      value: value,
      onInput: this.onInput,
      onChange: this.onChange,
      onBlur: this.onBlur,
      onFocus: this.onFocus,
      onKeyDown: this.onKeydown,
      onCompositionstart: this.onCompositionStart,
      onCompositionend: this.onCompositionEnd,
      "aria-describedby": this.getHintTextID(),
      "aria-invalid": this.getHintTextID() === this.errorTextId
    }, this.inheritedAttributes)), this.clearInput && !readonly && !disabled && (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      key: 'f79f68cabcd4ea99419331174a377827db0c0741',
      "aria-label": "reset",
      type: "button",
      class: "input-clear-icon",
      onPointerDown: ev => {
        /**
         * This prevents mobile browsers from
         * blurring the input when the clear
         * button is activated.
         */
        ev.preventDefault();
      },
      onClick: this.clearTextInput
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-icon", {
      key: '237ec07ec2e10f08818a332bb596578c2c49f770',
      "aria-hidden": "true",
      icon: clearIconData
    })), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      key: '1f0a3624aa3e8dc3c307a6762230ab698768a5e5',
      name: "end"
    })), shouldRenderHighlight && (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      key: '8a8cbb82695a722a0010b53dd0b1f1f97534a20b',
      class: "input-highlight"
    })), this.renderBottomContent());
  }
  get el() {
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.k)(this);
  }
  static get watchers() {
    return {
      "debounce": ["debounceChanged"],
      "type": ["onTypeChange"],
      "value": ["valueChanged"],
      "dir": ["onDirChanged"]
    };
  }
};
let inputIds = 0;
Input.style = {
  ios: inputIosCss,
  md: inputMdCss
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLWlucHV0X2VudHJ5X2pzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDZ0o7QUFDcEU7QUFDMEQ7QUFDbkM7QUFDbkI7QUFDUjtBQUMzQztBQUU3QixNQUFNNEIsV0FBVyxHQUFHLDYyWEFBNjJYO0FBRWo0WCxNQUFNQyxVQUFVLEdBQUcsc2hvQkFBc2hvQjtBQUV6aW9CLE1BQU1DLEtBQUssR0FBRyxNQUFNO0VBQ2hCQyxXQUFXQSxDQUFDQyxPQUFPLEVBQUU7SUFDakIvQixxREFBZ0IsQ0FBQyxJQUFJLEVBQUUrQixPQUFPLENBQUM7SUFDL0IsSUFBSSxDQUFDQyxRQUFRLEdBQUc5QixxREFBVyxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELElBQUksQ0FBQytCLFNBQVMsR0FBRy9CLHFEQUFXLENBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxDQUFDLENBQUM7SUFDbEQsSUFBSSxDQUFDZ0MsT0FBTyxHQUFHaEMscURBQVcsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUNpQyxRQUFRLEdBQUdqQyxxREFBVyxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELElBQUksQ0FBQ2tDLE9BQU8sR0FBRyxhQUFhQyxRQUFRLEVBQUUsRUFBRTtJQUN4QyxJQUFJLENBQUNDLFlBQVksR0FBRyxHQUFHLElBQUksQ0FBQ0YsT0FBTyxjQUFjO0lBQ2pELElBQUksQ0FBQ0csV0FBVyxHQUFHLEdBQUcsSUFBSSxDQUFDSCxPQUFPLGFBQWE7SUFDL0MsSUFBSSxDQUFDSSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7SUFDN0IsSUFBSSxDQUFDQyxXQUFXLEdBQUcsS0FBSztJQUN4QjtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDUSxJQUFJLENBQUNDLG1CQUFtQixHQUFH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LE9BQU87TUFDM0IsVUFBVSxFQUFFLENBQUMsaUJBQWlCLENBQUM7TUFDL0IsTUFBTSxFQUFFLENBQUMsY0FBYyxDQUFDO01BQ3hCLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQztNQUN6QixLQUFLLEVBQUUsQ0FBQyxjQUFjO0lBQzFCLENBQUM7RUFBRTtBQUNQLENBQUM7QUFDRCxJQUFJdEosUUFBUSxHQUFHLENBQUM7QUFDaEJSLEtBQUssQ0FBQytKLEtBQUssR0FBRztFQUNWQyxHQUFHLEVBQUVsSyxXQUFXO0VBQ2hCbUssRUFBRSxFQUFFbEs7QUFDUixDQUFDIiwic291cmNlcyI6WyIuL25vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9kaXN0L2VzbS9pb24taW5wdXQuZW50cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiAoQykgSW9uaWMgaHR0cDovL2lvbmljZnJhbWV3b3JrLmNvbSAtIE1JVCBMaWNlbnNlXG4gKi9cbmltcG9ydCB7IHIgYXMgcmVnaXN0ZXJJbnN0YW5jZSwgZCBhcyBjcmVhdGVFdmVudCwgbiBhcyBmb3JjZVVwZGF0ZSwgaCwgZSBhcyBnZXRJb25Nb2RlLCBqIGFzIEhvc3QsIGsgYXMgZ2V0RWxlbWVudCB9IGZyb20gJy4vaW5kZXgtQl9VOUN0YVkuanMnO1xuaW1wb3J0IHsgYyBhcyBjcmVhdGVOb3RjaENvbnRyb2xsZXIgfSBmcm9tICcuL25vdGNoLWNvbnRyb2xsZXItQzVMUHNwTzguanMnO1xuaW1wb3J0IHsgZCBhcyBkZWJvdW5jZUV2ZW50LCBpIGFzIGluaGVyaXRBcmlhQXR0cmlidXRlcywgYiBhcyBpbmhlcml0QXR0cmlidXRlcywgYyBhcyBjb21wb25lbnRPblJlYWR5IH0gZnJvbSAnLi9oZWxwZXJzLTFPNEQyYjd5LmpzJztcbmltcG9ydCB7IGMgYXMgY3JlYXRlU2xvdE11dGF0aW9uQ29udHJvbGxlciwgZyBhcyBnZXRDb3VudGVyVGV4dCB9IGZyb20gJy4vaW5wdXQudXRpbHMteldpak5DcnguanMnO1xuaW1wb3J0IHsgaCBhcyBob3N0Q29udGV4dCwgYyBhcyBjcmVhdGVDb2xvckNsYXNzZXMgfSBmcm9tICcuL3RoZW1lLURpVkp5cWxYLmpzJztcbmltcG9ydCB7IGIgYXMgY2xvc2VDaXJjbGUsIGQgYXMgY2xvc2VTaGFycCB9IGZyb20gJy4vaW5kZXgtQkxWNnlrQ2suanMnO1xuaW1wb3J0ICcuL2luZGV4LVpqUDRDamVaLmpzJztcblxuY29uc3QgaW5wdXRJb3NDc3MgPSBcIi5zYy1pb24taW5wdXQtaW9zLWh7LS1wbGFjZWhvbGRlci1jb2xvcjppbml0aWFsOy0tcGxhY2Vob2xkZXItZm9udC1zdHlsZTppbml0aWFsOy0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQ6aW5pdGlhbDstLXBsYWNlaG9sZGVyLW9wYWNpdHk6dmFyKC0taW9uLXBsYWNlaG9sZGVyLW9wYWNpdHksIDAuNik7LS1wYWRkaW5nLXRvcDowcHg7LS1wYWRkaW5nLWVuZDowcHg7LS1wYWRkaW5nLWJvdHRvbTowcHg7LS1wYWRkaW5nLXN0YXJ0OjBweDstLWJhY2tncm91bmQ6dHJhbnNwYXJlbnQ7LS1jb2xvcjppbml0aWFsOy0tYm9yZGVyLXN0eWxlOnNvbGlkOy0taGlnaGxpZ2h0LWNvbG9yLWZvY3VzZWQ6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMwMDU0ZTkpOy0taGlnaGxpZ2h0LWNvbG9yLXZhbGlkOnZhcigtLWlvbi1jb2xvci1zdWNjZXNzLCAjMmRkNTViKTstLWhpZ2hsaWdodC1jb2xvci1pbnZhbGlkOnZhcigtLWlvbi1jb2xvci1kYW5nZXIsICNjNTAwMGYpOy0taGlnaGxpZ2h0LWNvbG9yOnZhcigtLWhpZ2hsaWdodC1jb2xvci1mb2N1c2VkKTtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7bWluLWhlaWdodDo0NHB4O3BhZGRpbmc6MCAhaW1wb3J0YW50O2NvbG9yOnZhcigtLWNvbG9yKTtmb250LWZhbWlseTp2YXIoLS1pb24tZm9udC1mYW1pbHksIGluaGVyaXQpO3otaW5kZXg6Mn1pb24taXRlbVtzbG90PXN0YXJ0XS5zYy1pb24taW5wdXQtaW9zLWgsaW9uLWl0ZW0gW3Nsb3Q9c3RhcnRdLnNjLWlvbi1pbnB1dC1pb3MtaCxpb24taXRlbVtzbG90PWVuZF0uc2MtaW9uLWlucHV0LWlvcy1oLGlvbi1pdGVtIFtzbG90PWVuZF0uc2MtaW9uLWlucHV0LWlvcy1oe3dpZHRoOmF1dG99Lmlvbi1jb2xvci5zYy1pb24taW5wdXQtaW9zLWh7LS1oaWdobGlnaHQtY29sb3ItZm9jdXNlZDp2YXIoLS1pb24tY29sb3ItYmFzZSl9LmlucHV0LWxhYmVsLXBsYWNlbWVudC1mbG9hdGluZy5zYy1pb24taW5wdXQtaW9zLWgsLmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnNjLWlvbi1pbnB1dC1pb3MtaHttaW4taGVpZ2h0OjU2cHh9Lm5hdGl2ZS1pbnB1dC5zYy1pb24taW5wdXQtaW9ze3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLXRvcDowO3BhZGRpbmctYm90dG9tOjA7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXNpemU6aW5oZXJpdDtmb250LXN0eWxlOmluaGVyaXQ7Zm9udC13ZWlnaHQ6aW5oZXJpdDtsZXR0ZXItc3BhY2luZzppbmhlcml0O3RleHQtZGVjb3JhdGlvbjppbmhlcml0O3RleHQtaW5kZW50OmluaGVyaXQ7dGV4dC1vdmVyZmxvdzppbmhlcml0O3RleHQtdHJhbnNmb3JtOmluaGVyaXQ7dGV4dC1hbGlnbjppbmhlcml0O3doaXRlLXNwYWNlOmluaGVyaXQ7Y29sb3I6aW5oZXJpdDtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleDoxO2ZsZXg6MTt3aWR0aDoxMDAlO21heC13aWR0aDoxMDAlO2hlaWdodDoxMDAlO21heC1oZWlnaHQ6MTAwJTtib3JkZXI6MDtvdXRsaW5lOm5vbmU7YmFja2dyb3VuZDp0cmFuc3BhcmVudDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lO3otaW5kZXg6MX0ubmF0aXZlLWlucHV0LnNjLWlvbi1pbnB1dC1pb3M6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6dmFyKC0tcGxhY2Vob2xkZXItY29sb3IpO2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zdHlsZTp2YXIoLS1wbGFjZWhvbGRlci1mb250LXN0eWxlKTtmb250LXdlaWdodDp2YXIoLS1wbGFjZWhvbGRlci1mb250LXdlaWdodCk7b3BhY2l0eTp2YXIoLS1wbGFjZWhvbGRlci1vcGFjaXR5KX0ubmF0aXZlLWlucHV0LnNjLWlvbi1pbnB1dC1pb3M6Oi1tb3otcGxhY2Vob2xkZXJ7Y29sb3I6dmFyKC0tcGxhY2Vob2xkZXItY29sb3IpO2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zdHlsZTp2YXIoLS1wbGFjZWhvbGRlci1mb250LXN0eWxlKTtmb250LXdlaWdodDp2YXIoLS1wbGFjZWhvbGRlci1mb250LXdlaWdodCk7b3BhY2l0eTp2YXIoLS1wbGFjZWhvbGRlci1vcGFjaXR5KX0ubmF0aXZlLWlucHV0LnNjLWlvbi1pbnB1dC1pb3M6LW1zLWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9Lm5hdGl2ZS1pbnB1dC5zYy1pb24taW5wdXQtaW9zOjotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6dmFyKC0tcGxhY2Vob2xkZXItY29sb3IpO2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zdHlsZTp2YXIoLS1wbGFjZWhvbGRlci1mb250LXN0eWxlKTtmb250LXdlaWdodDp2YXIoLS1wbGFjZWhvbGRlci1mb250LXdlaWdodCk7b3BhY2l0eTp2YXIoLS1wbGFjZWhvbGRlci1vcGFjaXR5KX0ubmF0aXZlLWlucHV0LnNjLWlvbi1pbnB1dC1pb3M6OnBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9Lm5hdGl2ZS1pbnB1dC5zYy1pb24taW5wdXQtaW9zOi13ZWJraXQtYXV0b2ZpbGx7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0ubmF0aXZlLWlucHV0LnNjLWlvbi1pbnB1dC1pb3M6aW52YWxpZHstd2Via2l0LWJveC1zaGFkb3c6bm9uZTtib3gtc2hhZG93Om5vbmV9Lm5hdGl2ZS1pbnB1dC5zYy1pb24taW5wdXQtaW9zOjotbXMtY2xlYXJ7ZGlzcGxheTpub25lfS5jbG9uZWQtaW5wdXQuc2MtaW9uLWlucHV0LWlvc3t0b3A6MDtib3R0b206MDtwb3NpdGlvbjphYnNvbHV0ZTtwb2ludGVyLWV2ZW50czpub25lfS5jbG9uZWQtaW5wdXQuc2MtaW9uLWlucHV0LWlvc3tpbnNldC1pbmxpbmUtc3RhcnQ6MH0uY2xvbmVkLWlucHV0LnNjLWlvbi1pbnB1dC1pb3M6ZGlzYWJsZWR7b3BhY2l0eToxfS5pbnB1dC1jbGVhci1pY29uLnNjLWlvbi1pbnB1dC1pb3N7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6YXV0bzttYXJnaW4taW5saW5lLXN0YXJ0OmF1dG87LXdlYmtpdC1tYXJnaW4tZW5kOmF1dG87bWFyZ2luLWlubGluZS1lbmQ6YXV0bzttYXJnaW4tdG9wOmF1dG87bWFyZ2luLWJvdHRvbTphdXRvO3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLXRvcDowO3BhZGRpbmctYm90dG9tOjA7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3dpZHRoOjMwcHg7aGVpZ2h0OjMwcHg7Ym9yZGVyOjA7b3V0bGluZTpub25lO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2NvbG9yOnZhcigtLWlvbi1jb2xvci1zdGVwLTYwMCwgdmFyKC0taW9uLXRleHQtY29sb3Itc3RlcC00MDAsICM2NjY2NjYpKTt2aXNpYmlsaXR5OmhpZGRlbjstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9LmluLWl0ZW0tY29sb3Iuc2MtaW9uLWlucHV0LWlvcy1oIC5pbnB1dC1jbGVhci1pY29uLnNjLWlvbi1pbnB1dC1pb3N7Y29sb3I6aW5oZXJpdH0uaW5wdXQtY2xlYXItaWNvbi5zYy1pb24taW5wdXQtaW9zOmZvY3Vze29wYWNpdHk6MC41fS5oYXMtdmFsdWUuc2MtaW9uLWlucHV0LWlvcy1oIC5pbnB1dC1jbGVhci1pY29uLnNjLWlvbi1pbnB1dC1pb3N7dmlzaWJpbGl0eTp2aXNpYmxlfS5pbnB1dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3N7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OnZhcigtLXBhZGRpbmctc3RhcnQpO3BhZGRpbmctaW5saW5lLXN0YXJ0OnZhcigtLXBhZGRpbmctc3RhcnQpOy13ZWJraXQtcGFkZGluZy1lbmQ6dmFyKC0tcGFkZGluZy1lbmQpO3BhZGRpbmctaW5saW5lLWVuZDp2YXIoLS1wYWRkaW5nLWVuZCk7cGFkZGluZy10b3A6dmFyKC0tcGFkZGluZy10b3ApO3BhZGRpbmctYm90dG9tOnZhcigtLXBhZGRpbmctYm90dG9tKTtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7LW1zLWZsZXgtYWxpZ246c3RyZXRjaDthbGlnbi1pdGVtczpzdHJldGNoO2hlaWdodDppbmhlcml0O21pbi1oZWlnaHQ6aW5oZXJpdDstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAxNW1zIGxpbmVhcjt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMTVtcyBsaW5lYXI7YmFja2dyb3VuZDp2YXIoLS1iYWNrZ3JvdW5kKTtsaW5lLWhlaWdodDpub3JtYWx9Lm5hdGl2ZS13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3N7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3dpZHRoOjEwMCV9Lmlvbi10b3VjaGVkLmlvbi1pbnZhbGlkLnNjLWlvbi1pbnB1dC1pb3MtaHstLWhpZ2hsaWdodC1jb2xvcjp2YXIoLS1oaWdobGlnaHQtY29sb3ItaW52YWxpZCl9Lmlvbi12YWxpZC5zYy1pb24taW5wdXQtaW9zLWh7LS1oaWdobGlnaHQtY29sb3I6dmFyKC0taGlnaGxpZ2h0LWNvbG9yLXZhbGlkKX0uaW5wdXQtYm90dG9tLnNjLWlvbi1pbnB1dC1pb3N7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OnZhcigtLXBhZGRpbmctc3RhcnQpO3BhZGRpbmctaW5saW5lLXN0YXJ0OnZhcigtLXBhZGRpbmctc3RhcnQpOy13ZWJraXQtcGFkZGluZy1lbmQ6dmFyKC0tcGFkZGluZy1lbmQpO3BhZGRpbmctaW5saW5lLWVuZDp2YXIoLS1wYWRkaW5nLWVuZCk7cGFkZGluZy10b3A6NXB4O3BhZGRpbmctYm90dG9tOjA7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2JvcmRlci10b3A6dmFyKC0tYm9yZGVyLXdpZHRoKSB2YXIoLS1ib3JkZXItc3R5bGUpIHZhcigtLWJvcmRlci1jb2xvcik7Zm9udC1zaXplOjAuNzVyZW07d2hpdGUtc3BhY2U6bm9ybWFsfS5oYXMtZm9jdXMuaW9uLXZhbGlkLnNjLWlvbi1pbnB1dC1pb3MtaCwuaW9uLXRvdWNoZWQuaW9uLWludmFsaWQuc2MtaW9uLWlucHV0LWlvcy1oey0tYm9yZGVyLWNvbG9yOnZhcigtLWhpZ2hsaWdodC1jb2xvcil9LmlucHV0LWJvdHRvbS5zYy1pb24taW5wdXQtaW9zIC5lcnJvci10ZXh0LnNjLWlvbi1pbnB1dC1pb3N7ZGlzcGxheTpub25lO2NvbG9yOnZhcigtLWhpZ2hsaWdodC1jb2xvci1pbnZhbGlkKX0uaW5wdXQtYm90dG9tLnNjLWlvbi1pbnB1dC1pb3MgLmhlbHBlci10ZXh0LnNjLWlvbi1pbnB1dC1pb3N7ZGlzcGxheTpibG9jaztjb2xvcjp2YXIoLS1pb24tY29sb3Itc3RlcC03MDAsIHZhcigtLWlvbi10ZXh0LWNvbG9yLXN0ZXAtMzAwLCAjNGQ0ZDRkKSl9Lmlvbi10b3VjaGVkLmlvbi1pbnZhbGlkLnNjLWlvbi1pbnB1dC1pb3MtaCAuaW5wdXQtYm90dG9tLnNjLWlvbi1pbnB1dC1pb3MgLmVycm9yLXRleHQuc2MtaW9uLWlucHV0LWlvc3tkaXNwbGF5OmJsb2NrfS5pb24tdG91Y2hlZC5pb24taW52YWxpZC5zYy1pb24taW5wdXQtaW9zLWggLmlucHV0LWJvdHRvbS5zYy1pb24taW5wdXQtaW9zIC5oZWxwZXItdGV4dC5zYy1pb24taW5wdXQtaW9ze2Rpc3BsYXk6bm9uZX0uaW5wdXQtYm90dG9tLnNjLWlvbi1pbnB1dC1pb3MgLmNvdW50ZXIuc2MtaW9uLWlucHV0LWlvc3std2Via2l0LW1hcmdpbi1zdGFydDphdXRvO21hcmdpbi1pbmxpbmUtc3RhcnQ6YXV0bztjb2xvcjp2YXIoLS1pb24tY29sb3Itc3RlcC03MDAsIHZhcigtLWlvbi10ZXh0LWNvbG9yLXN0ZXAtMzAwLCAjNGQ0ZDRkKSk7d2hpdGUtc3BhY2U6bm93cmFwOy13ZWJraXQtcGFkZGluZy1zdGFydDoxNnB4O3BhZGRpbmctaW5saW5lLXN0YXJ0OjE2cHh9Lmhhcy1mb2N1cy5zYy1pb24taW5wdXQtaW9zLWggaW5wdXQuc2MtaW9uLWlucHV0LWlvc3tjYXJldC1jb2xvcjp2YXIoLS1oaWdobGlnaHQtY29sb3IpfS5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvc3tkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO21heC13aWR0aDoyMDBweDstd2Via2l0LXRyYW5zaXRpb246Y29sb3IgMTUwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSwgLXdlYmtpdC10cmFuc2Zvcm0gMTUwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTt0cmFuc2l0aW9uOmNvbG9yIDE1MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksIC13ZWJraXQtdHJhbnNmb3JtIDE1MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7dHJhbnNpdGlvbjpjb2xvciAxNTBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCB0cmFuc2Zvcm0gMTUwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTt0cmFuc2l0aW9uOmNvbG9yIDE1MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksIHRyYW5zZm9ybSAxNTBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCAtd2Via2l0LXRyYW5zZm9ybSAxNTBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO3BvaW50ZXItZXZlbnRzOm5vbmV9LmxhYmVsLXRleHQuc2MtaW9uLWlucHV0LWlvcywuc2MtaW9uLWlucHV0LWlvcy1zPltzbG90PWxhYmVsXXt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW59LmxhYmVsLXRleHQtd3JhcHBlci1oaWRkZW4uc2MtaW9uLWlucHV0LWlvcywuaW5wdXQtb3V0bGluZS1ub3RjaC1oaWRkZW4uc2MtaW9uLWlucHV0LWlvc3tkaXNwbGF5Om5vbmV9LmlucHV0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvcyBpbnB1dC5zYy1pb24taW5wdXQtaW9zey13ZWJraXQtdHJhbnNpdGlvbjpvcGFjaXR5IDE1MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7dHJhbnNpdGlvbjpvcGFjaXR5IDE1MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSl9LmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFydC5zYy1pb24taW5wdXQtaW9zLWggLmlucHV0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvc3stbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30uaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YXJ0LnNjLWlvbi1pbnB1dC1pb3MtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3N7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6MDttYXJnaW4taW5saW5lLXN0YXJ0OjA7LXdlYmtpdC1tYXJnaW4tZW5kOjE2cHg7bWFyZ2luLWlubGluZS1lbmQ6MTZweDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowfS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZW5kLnNjLWlvbi1pbnB1dC1pb3MtaCAuaW5wdXQtd3JhcHBlci5zYy1pb24taW5wdXQtaW9zey1tcy1mbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZTtmbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZX0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWVuZC5zYy1pb24taW5wdXQtaW9zLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtaW9zey13ZWJraXQtbWFyZ2luLXN0YXJ0OjE2cHg7bWFyZ2luLWlubGluZS1zdGFydDoxNnB4Oy13ZWJraXQtbWFyZ2luLWVuZDowO21hcmdpbi1pbmxpbmUtZW5kOjA7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZpeGVkLnNjLWlvbi1pbnB1dC1pb3MtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3N7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6MDttYXJnaW4taW5saW5lLXN0YXJ0OjA7LXdlYmtpdC1tYXJnaW4tZW5kOjE2cHg7bWFyZ2luLWlubGluZS1lbmQ6MTZweDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowfS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZml4ZWQuc2MtaW9uLWlucHV0LWlvcy1oIC5sYWJlbC10ZXh0LnNjLWlvbi1pbnB1dC1pb3N7LW1zLWZsZXg6MCAwIDEwMHB4O2ZsZXg6MCAwIDEwMHB4O3dpZHRoOjEwMHB4O21pbi13aWR0aDoxMDBweDttYXgtd2lkdGg6MjAwcHh9LmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnNjLWlvbi1pbnB1dC1pb3MtaCAuaW5wdXQtd3JhcHBlci5zYy1pb24taW5wdXQtaW9zLC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LWlvcy1oIC5pbnB1dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3N7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6c3RhcnR9LmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnNjLWlvbi1pbnB1dC1pb3MtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3MsLmlucHV0LWxhYmVsLXBsYWNlbWVudC1mbG9hdGluZy5zYy1pb24taW5wdXQtaW9zLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtaW9zey13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjpsZWZ0IHRvcDt0cmFuc2Zvcm0tb3JpZ2luOmxlZnQgdG9wO21heC13aWR0aDoxMDAlO3otaW5kZXg6Mn1bZGlyPXJ0bF0uc2MtaW9uLWlucHV0LWlvcy1oIC1uby1jb21iaW5hdG9yLmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnNjLWlvbi1pbnB1dC1pb3MtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3MsW2Rpcj1ydGxdIC5zYy1pb24taW5wdXQtaW9zLWggLW5vLWNvbWJpbmF0b3IuaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LWlvcy1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvcyxbZGlyPXJ0bF0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LWlvcy1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvcyxbZGlyPXJ0bF0gLmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnNjLWlvbi1pbnB1dC1pb3MtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3MsW2Rpcj1ydGxdLnNjLWlvbi1pbnB1dC1pb3MtaCAtbm8tY29tYmluYXRvci5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LWlvcy1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvcyxbZGlyPXJ0bF0gLnNjLWlvbi1pbnB1dC1pb3MtaCAtbm8tY29tYmluYXRvci5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LWlvcy1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvcyxbZGlyPXJ0bF0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1pb3MtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3MsW2Rpcj1ydGxdIC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LWlvcy1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvc3std2Via2l0LXRyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wO3RyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wfUBzdXBwb3J0cyBzZWxlY3Rvcig6ZGlyKHJ0bCkpey5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC5zYy1pb24taW5wdXQtaW9zLWg6ZGlyKHJ0bCkgLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtaW9zLC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LWlvcy1oOmRpcihydGwpIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LWlvc3std2Via2l0LXRyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wO3RyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wfX0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LWlvcy1oIGlucHV0LnNjLWlvbi1pbnB1dC1pb3MsLmlucHV0LWxhYmVsLXBsYWNlbWVudC1mbG9hdGluZy5zYy1pb24taW5wdXQtaW9zLWggaW5wdXQuc2MtaW9uLWlucHV0LWlvc3ttYXJnaW4tbGVmdDowO21hcmdpbi1yaWdodDowO21hcmdpbi10b3A6MXB4O21hcmdpbi1ib3R0b206MH0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1pb3MtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3N7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWSgxMDAlKSBzY2FsZSgxKTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgxMDAlKSBzY2FsZSgxKX0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1pb3MtaCBpbnB1dC5zYy1pb24taW5wdXQtaW9ze29wYWNpdHk6MH0uaGFzLWZvY3VzLmlucHV0LWxhYmVsLXBsYWNlbWVudC1mbG9hdGluZy5zYy1pb24taW5wdXQtaW9zLWggaW5wdXQuc2MtaW9uLWlucHV0LWlvcywuaGFzLXZhbHVlLmlucHV0LWxhYmVsLXBsYWNlbWVudC1mbG9hdGluZy5zYy1pb24taW5wdXQtaW9zLWggaW5wdXQuc2MtaW9uLWlucHV0LWlvc3tvcGFjaXR5OjF9LmxhYmVsLWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1pb3MtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1pb3N7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWSg1MCUpIHNjYWxlKDAuNzUpO3RyYW5zZm9ybTp0cmFuc2xhdGVZKDUwJSkgc2NhbGUoMC43NSk7bWF4LXdpZHRoOmNhbGMoMTAwJSAvIDAuNzUpfS5zYy1pb24taW5wdXQtaW9zLXM+W3Nsb3Q9c3RhcnRdOmxhc3Qtb2YtdHlwZXstd2Via2l0LW1hcmdpbi1lbmQ6MTZweDttYXJnaW4taW5saW5lLWVuZDoxNnB4Oy13ZWJraXQtbWFyZ2luLXN0YXJ0OjA7bWFyZ2luLWlubGluZS1zdGFydDowfS5zYy1pb24taW5wdXQtaW9zLXM+W3Nsb3Q9ZW5kXTpmaXJzdC1vZi10eXBley13ZWJraXQtbWFyZ2luLXN0YXJ0OjE2cHg7bWFyZ2luLWlubGluZS1zdGFydDoxNnB4Oy13ZWJraXQtbWFyZ2luLWVuZDowO21hcmdpbi1pbmxpbmUtZW5kOjB9LnNjLWlvbi1pbnB1dC1pb3MtaFtkaXNhYmxlZF0uc2MtaW9uLWlucHV0LWlvcy1zPmlvbi1pbnB1dC1wYXNzd29yZC10b2dnbGUsLnNjLWlvbi1pbnB1dC1pb3MtaFtkaXNhYmxlZF0gLnNjLWlvbi1pbnB1dC1pb3Mtcz5pb24taW5wdXQtcGFzc3dvcmQtdG9nZ2xlLC5zYy1pb24taW5wdXQtaW9zLWhbcmVhZG9ubHldLnNjLWlvbi1pbnB1dC1pb3Mtcz5pb24taW5wdXQtcGFzc3dvcmQtdG9nZ2xlLC5zYy1pb24taW5wdXQtaW9zLWhbcmVhZG9ubHldIC5zYy1pb24taW5wdXQtaW9zLXM+aW9uLWlucHV0LXBhc3N3b3JkLXRvZ2dsZXtkaXNwbGF5Om5vbmV9LnNjLWlvbi1pbnB1dC1pb3MtaHstLWJvcmRlci13aWR0aDowLjU1cHg7LS1ib3JkZXItY29sb3I6dmFyKC0taW9uLWl0ZW0tYm9yZGVyLWNvbG9yLCB2YXIoLS1pb24tYm9yZGVyLWNvbG9yLCB2YXIoLS1pb24tY29sb3Itc3RlcC0yNTAsIHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLXN0ZXAtMjUwLCAjYzhjN2NjKSkpKTstLWhpZ2hsaWdodC1oZWlnaHQ6MHB4O2ZvbnQtc2l6ZTppbmhlcml0fS5pbnB1dC1jbGVhci1pY29uLnNjLWlvbi1pbnB1dC1pb3MgaW9uLWljb24uc2MtaW9uLWlucHV0LWlvc3t3aWR0aDoxOHB4O2hlaWdodDoxOHB4fS5pbnB1dC1kaXNhYmxlZC5zYy1pb24taW5wdXQtaW9zLWh7b3BhY2l0eTowLjN9LnNjLWlvbi1pbnB1dC1pb3Mtcz5pb24tYnV0dG9uW3Nsb3Q9c3RhcnRdLmJ1dHRvbi1oYXMtaWNvbi1vbmx5LC5zYy1pb24taW5wdXQtaW9zLXM+aW9uLWJ1dHRvbltzbG90PWVuZF0uYnV0dG9uLWhhcy1pY29uLW9ubHl7LS1ib3JkZXItcmFkaXVzOjUwJTstLXBhZGRpbmctc3RhcnQ6MDstLXBhZGRpbmctZW5kOjA7LS1wYWRkaW5nLXRvcDowOy0tcGFkZGluZy1ib3R0b206MDthc3BlY3QtcmF0aW86MX1cIjtcblxuY29uc3QgaW5wdXRNZENzcyA9IFwiLnNjLWlvbi1pbnB1dC1tZC1oey0tcGxhY2Vob2xkZXItY29sb3I6aW5pdGlhbDstLXBsYWNlaG9sZGVyLWZvbnQtc3R5bGU6aW5pdGlhbDstLXBsYWNlaG9sZGVyLWZvbnQtd2VpZ2h0OmluaXRpYWw7LS1wbGFjZWhvbGRlci1vcGFjaXR5OnZhcigtLWlvbi1wbGFjZWhvbGRlci1vcGFjaXR5LCAwLjYpOy0tcGFkZGluZy10b3A6MHB4Oy0tcGFkZGluZy1lbmQ6MHB4Oy0tcGFkZGluZy1ib3R0b206MHB4Oy0tcGFkZGluZy1zdGFydDowcHg7LS1iYWNrZ3JvdW5kOnRyYW5zcGFyZW50Oy0tY29sb3I6aW5pdGlhbDstLWJvcmRlci1zdHlsZTpzb2xpZDstLWhpZ2hsaWdodC1jb2xvci1mb2N1c2VkOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMDA1NGU5KTstLWhpZ2hsaWdodC1jb2xvci12YWxpZDp2YXIoLS1pb24tY29sb3Itc3VjY2VzcywgIzJkZDU1Yik7LS1oaWdobGlnaHQtY29sb3ItaW52YWxpZDp2YXIoLS1pb24tY29sb3ItZGFuZ2VyLCAjYzUwMDBmKTstLWhpZ2hsaWdodC1jb2xvcjp2YXIoLS1oaWdobGlnaHQtY29sb3ItZm9jdXNlZCk7ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO21pbi1oZWlnaHQ6NDRweDtwYWRkaW5nOjAgIWltcG9ydGFudDtjb2xvcjp2YXIoLS1jb2xvcik7Zm9udC1mYW1pbHk6dmFyKC0taW9uLWZvbnQtZmFtaWx5LCBpbmhlcml0KTt6LWluZGV4OjJ9aW9uLWl0ZW1bc2xvdD1zdGFydF0uc2MtaW9uLWlucHV0LW1kLWgsaW9uLWl0ZW0gW3Nsb3Q9c3RhcnRdLnNjLWlvbi1pbnB1dC1tZC1oLGlvbi1pdGVtW3Nsb3Q9ZW5kXS5zYy1pb24taW5wdXQtbWQtaCxpb24taXRlbSBbc2xvdD1lbmRdLnNjLWlvbi1pbnB1dC1tZC1oe3dpZHRoOmF1dG99Lmlvbi1jb2xvci5zYy1pb24taW5wdXQtbWQtaHstLWhpZ2hsaWdodC1jb2xvci1mb2N1c2VkOnZhcigtLWlvbi1jb2xvci1iYXNlKX0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oLC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC5zYy1pb24taW5wdXQtbWQtaHttaW4taGVpZ2h0OjU2cHh9Lm5hdGl2ZS1pbnB1dC5zYy1pb24taW5wdXQtbWR7cGFkZGluZy1sZWZ0OjA7cGFkZGluZy1yaWdodDowO3BhZGRpbmctdG9wOjA7cGFkZGluZy1ib3R0b206MDtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtc3R5bGU6aW5oZXJpdDtmb250LXdlaWdodDppbmhlcml0O2xldHRlci1zcGFjaW5nOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOmluaGVyaXQ7dGV4dC1pbmRlbnQ6aW5oZXJpdDt0ZXh0LW92ZXJmbG93OmluaGVyaXQ7dGV4dC10cmFuc2Zvcm06aW5oZXJpdDt0ZXh0LWFsaWduOmluaGVyaXQ7d2hpdGUtc3BhY2U6aW5oZXJpdDtjb2xvcjppbmhlcml0O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4OjE7ZmxleDoxO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bWF4LWhlaWdodDoxMDAlO2JvcmRlcjowO291dGxpbmU6bm9uZTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmU7ei1pbmRleDoxfS5uYXRpdmUtaW5wdXQuc2MtaW9uLWlucHV0LW1kOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9Lm5hdGl2ZS1pbnB1dC5zYy1pb24taW5wdXQtbWQ6Oi1tb3otcGxhY2Vob2xkZXJ7Y29sb3I6dmFyKC0tcGxhY2Vob2xkZXItY29sb3IpO2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zdHlsZTp2YXIoLS1wbGFjZWhvbGRlci1mb250LXN0eWxlKTtmb250LXdlaWdodDp2YXIoLS1wbGFjZWhvbGRlci1mb250LXdlaWdodCk7b3BhY2l0eTp2YXIoLS1wbGFjZWhvbGRlci1vcGFjaXR5KX0ubmF0aXZlLWlucHV0LnNjLWlvbi1pbnB1dC1tZDotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6dmFyKC0tcGxhY2Vob2xkZXItY29sb3IpO2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zdHlsZTp2YXIoLS1wbGFjZWhvbGRlci1mb250LXN0eWxlKTtmb250LXdlaWdodDp2YXIoLS1wbGFjZWhvbGRlci1mb250LXdlaWdodCk7b3BhY2l0eTp2YXIoLS1wbGFjZWhvbGRlci1vcGFjaXR5KX0ubmF0aXZlLWlucHV0LnNjLWlvbi1pbnB1dC1tZDo6LW1zLWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9Lm5hdGl2ZS1pbnB1dC5zYy1pb24taW5wdXQtbWQ6OnBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9Lm5hdGl2ZS1pbnB1dC5zYy1pb24taW5wdXQtbWQ6LXdlYmtpdC1hdXRvZmlsbHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5uYXRpdmUtaW5wdXQuc2MtaW9uLWlucHV0LW1kOmludmFsaWR7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmU7Ym94LXNoYWRvdzpub25lfS5uYXRpdmUtaW5wdXQuc2MtaW9uLWlucHV0LW1kOjotbXMtY2xlYXJ7ZGlzcGxheTpub25lfS5jbG9uZWQtaW5wdXQuc2MtaW9uLWlucHV0LW1ke3RvcDowO2JvdHRvbTowO3Bvc2l0aW9uOmFic29sdXRlO3BvaW50ZXItZXZlbnRzOm5vbmV9LmNsb25lZC1pbnB1dC5zYy1pb24taW5wdXQtbWR7aW5zZXQtaW5saW5lLXN0YXJ0OjB9LmNsb25lZC1pbnB1dC5zYy1pb24taW5wdXQtbWQ6ZGlzYWJsZWR7b3BhY2l0eToxfS5pbnB1dC1jbGVhci1pY29uLnNjLWlvbi1pbnB1dC1tZHstd2Via2l0LW1hcmdpbi1zdGFydDphdXRvO21hcmdpbi1pbmxpbmUtc3RhcnQ6YXV0bzstd2Via2l0LW1hcmdpbi1lbmQ6YXV0bzttYXJnaW4taW5saW5lLWVuZDphdXRvO21hcmdpbi10b3A6YXV0bzttYXJnaW4tYm90dG9tOmF1dG87cGFkZGluZy1sZWZ0OjA7cGFkZGluZy1yaWdodDowO3BhZGRpbmctdG9wOjA7cGFkZGluZy1ib3R0b206MDtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlcjtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7d2lkdGg6MzBweDtoZWlnaHQ6MzBweDtib3JkZXI6MDtvdXRsaW5lOm5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7Y29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtNjAwLCB2YXIoLS1pb24tdGV4dC1jb2xvci1zdGVwLTQwMCwgIzY2NjY2NikpO3Zpc2liaWxpdHk6aGlkZGVuOy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZX0uaW4taXRlbS1jb2xvci5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtY2xlYXItaWNvbi5zYy1pb24taW5wdXQtbWR7Y29sb3I6aW5oZXJpdH0uaW5wdXQtY2xlYXItaWNvbi5zYy1pb24taW5wdXQtbWQ6Zm9jdXN7b3BhY2l0eTowLjV9Lmhhcy12YWx1ZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtY2xlYXItaWNvbi5zYy1pb24taW5wdXQtbWR7dmlzaWJpbGl0eTp2aXNpYmxlfS5pbnB1dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZHstd2Via2l0LXBhZGRpbmctc3RhcnQ6dmFyKC0tcGFkZGluZy1zdGFydCk7cGFkZGluZy1pbmxpbmUtc3RhcnQ6dmFyKC0tcGFkZGluZy1zdGFydCk7LXdlYmtpdC1wYWRkaW5nLWVuZDp2YXIoLS1wYWRkaW5nLWVuZCk7cGFkZGluZy1pbmxpbmUtZW5kOnZhcigtLXBhZGRpbmctZW5kKTtwYWRkaW5nLXRvcDp2YXIoLS1wYWRkaW5nLXRvcCk7cGFkZGluZy1ib3R0b206dmFyKC0tcGFkZGluZy1ib3R0b20pO2JvcmRlci1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTstbXMtZmxleC1hbGlnbjpzdHJldGNoO2FsaWduLWl0ZW1zOnN0cmV0Y2g7aGVpZ2h0OmluaGVyaXQ7bWluLWhlaWdodDppbmhlcml0Oy13ZWJraXQtdHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIDE1bXMgbGluZWFyO3RyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAxNW1zIGxpbmVhcjtiYWNrZ3JvdW5kOnZhcigtLWJhY2tncm91bmQpO2xpbmUtaGVpZ2h0Om5vcm1hbH0ubmF0aXZlLXdyYXBwZXIuc2MtaW9uLWlucHV0LW1ke2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjt3aWR0aDoxMDAlfS5pb24tdG91Y2hlZC5pb24taW52YWxpZC5zYy1pb24taW5wdXQtbWQtaHstLWhpZ2hsaWdodC1jb2xvcjp2YXIoLS1oaWdobGlnaHQtY29sb3ItaW52YWxpZCl9Lmlvbi12YWxpZC5zYy1pb24taW5wdXQtbWQtaHstLWhpZ2hsaWdodC1jb2xvcjp2YXIoLS1oaWdobGlnaHQtY29sb3ItdmFsaWQpfS5pbnB1dC1ib3R0b20uc2MtaW9uLWlucHV0LW1key13ZWJraXQtcGFkZGluZy1zdGFydDp2YXIoLS1wYWRkaW5nLXN0YXJ0KTtwYWRkaW5nLWlubGluZS1zdGFydDp2YXIoLS1wYWRkaW5nLXN0YXJ0KTstd2Via2l0LXBhZGRpbmctZW5kOnZhcigtLXBhZGRpbmctZW5kKTtwYWRkaW5nLWlubGluZS1lbmQ6dmFyKC0tcGFkZGluZy1lbmQpO3BhZGRpbmctdG9wOjVweDtwYWRkaW5nLWJvdHRvbTowO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbjtib3JkZXItdG9wOnZhcigtLWJvcmRlci13aWR0aCkgdmFyKC0tYm9yZGVyLXN0eWxlKSB2YXIoLS1ib3JkZXItY29sb3IpO2ZvbnQtc2l6ZTowLjc1cmVtO3doaXRlLXNwYWNlOm5vcm1hbH0uaGFzLWZvY3VzLmlvbi12YWxpZC5zYy1pb24taW5wdXQtbWQtaCwuaW9uLXRvdWNoZWQuaW9uLWludmFsaWQuc2MtaW9uLWlucHV0LW1kLWh7LS1ib3JkZXItY29sb3I6dmFyKC0taGlnaGxpZ2h0LWNvbG9yKX0uaW5wdXQtYm90dG9tLnNjLWlvbi1pbnB1dC1tZCAuZXJyb3ItdGV4dC5zYy1pb24taW5wdXQtbWR7ZGlzcGxheTpub25lO2NvbG9yOnZhcigtLWhpZ2hsaWdodC1jb2xvci1pbnZhbGlkKX0uaW5wdXQtYm90dG9tLnNjLWlvbi1pbnB1dC1tZCAuaGVscGVyLXRleHQuc2MtaW9uLWlucHV0LW1ke2Rpc3BsYXk6YmxvY2s7Y29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtNzAwLCB2YXIoLS1pb24tdGV4dC1jb2xvci1zdGVwLTMwMCwgIzRkNGQ0ZCkpfS5pb24tdG91Y2hlZC5pb24taW52YWxpZC5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtYm90dG9tLnNjLWlvbi1pbnB1dC1tZCAuZXJyb3ItdGV4dC5zYy1pb24taW5wdXQtbWR7ZGlzcGxheTpibG9ja30uaW9uLXRvdWNoZWQuaW9uLWludmFsaWQuc2MtaW9uLWlucHV0LW1kLWggLmlucHV0LWJvdHRvbS5zYy1pb24taW5wdXQtbWQgLmhlbHBlci10ZXh0LnNjLWlvbi1pbnB1dC1tZHtkaXNwbGF5Om5vbmV9LmlucHV0LWJvdHRvbS5zYy1pb24taW5wdXQtbWQgLmNvdW50ZXIuc2MtaW9uLWlucHV0LW1key13ZWJraXQtbWFyZ2luLXN0YXJ0OmF1dG87bWFyZ2luLWlubGluZS1zdGFydDphdXRvO2NvbG9yOnZhcigtLWlvbi1jb2xvci1zdGVwLTcwMCwgdmFyKC0taW9uLXRleHQtY29sb3Itc3RlcC0zMDAsICM0ZDRkNGQpKTt3aGl0ZS1zcGFjZTpub3dyYXA7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjE2cHg7cGFkZGluZy1pbmxpbmUtc3RhcnQ6MTZweH0uaGFzLWZvY3VzLnNjLWlvbi1pbnB1dC1tZC1oIGlucHV0LnNjLWlvbi1pbnB1dC1tZHtjYXJldC1jb2xvcjp2YXIoLS1oaWdobGlnaHQtY29sb3IpfS5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1ke2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7bWF4LXdpZHRoOjIwMHB4Oy13ZWJraXQtdHJhbnNpdGlvbjpjb2xvciAxNTBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCAtd2Via2l0LXRyYW5zZm9ybSAxNTBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO3RyYW5zaXRpb246Y29sb3IgMTUwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSwgLXdlYmtpdC10cmFuc2Zvcm0gMTUwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTt0cmFuc2l0aW9uOmNvbG9yIDE1MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksIHRyYW5zZm9ybSAxNTBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO3RyYW5zaXRpb246Y29sb3IgMTUwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSwgdHJhbnNmb3JtIDE1MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksIC13ZWJraXQtdHJhbnNmb3JtIDE1MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7cG9pbnRlci1ldmVudHM6bm9uZX0ubGFiZWwtdGV4dC5zYy1pb24taW5wdXQtbWQsLnNjLWlvbi1pbnB1dC1tZC1zPltzbG90PWxhYmVsXXt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW59LmxhYmVsLXRleHQtd3JhcHBlci1oaWRkZW4uc2MtaW9uLWlucHV0LW1kLC5pbnB1dC1vdXRsaW5lLW5vdGNoLWhpZGRlbi5zYy1pb24taW5wdXQtbWR7ZGlzcGxheTpub25lfS5pbnB1dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZCBpbnB1dC5zYy1pb24taW5wdXQtbWR7LXdlYmtpdC10cmFuc2l0aW9uOm9wYWNpdHkgMTUwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTt0cmFuc2l0aW9uOm9wYWNpdHkgMTUwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKX0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YXJ0LnNjLWlvbi1pbnB1dC1tZC1oIC5pbnB1dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZHstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30uaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YXJ0LnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1key13ZWJraXQtbWFyZ2luLXN0YXJ0OjA7bWFyZ2luLWlubGluZS1zdGFydDowOy13ZWJraXQtbWFyZ2luLWVuZDoxNnB4O21hcmdpbi1pbmxpbmUtZW5kOjE2cHg7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWVuZC5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlO2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlfS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZW5kLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1key13ZWJraXQtbWFyZ2luLXN0YXJ0OjE2cHg7bWFyZ2luLWlubGluZS1zdGFydDoxNnB4Oy13ZWJraXQtbWFyZ2luLWVuZDowO21hcmdpbi1pbmxpbmUtZW5kOjA7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZpeGVkLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1key13ZWJraXQtbWFyZ2luLXN0YXJ0OjA7bWFyZ2luLWlubGluZS1zdGFydDowOy13ZWJraXQtbWFyZ2luLWVuZDoxNnB4O21hcmdpbi1pbmxpbmUtZW5kOjE2cHg7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZpeGVkLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LnNjLWlvbi1pbnB1dC1tZHstbXMtZmxleDowIDAgMTAwcHg7ZmxleDowIDAgMTAwcHg7d2lkdGg6MTAwcHg7bWluLXdpZHRoOjEwMHB4O21heC13aWR0aDoyMDBweH0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWggLmlucHV0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1kLC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggLmlucHV0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1key1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOnN0YXJ0fS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC5zYy1pb24taW5wdXQtbWQtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZCwuaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1key13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjpsZWZ0IHRvcDt0cmFuc2Zvcm0tb3JpZ2luOmxlZnQgdG9wO21heC13aWR0aDoxMDAlO3otaW5kZXg6Mn1bZGlyPXJ0bF0uc2MtaW9uLWlucHV0LW1kLWggLW5vLWNvbWJpbmF0b3IuaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsW2Rpcj1ydGxdIC5zYy1pb24taW5wdXQtbWQtaCAtbm8tY29tYmluYXRvci5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC5zYy1pb24taW5wdXQtbWQtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZCxbZGlyPXJ0bF0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsW2Rpcj1ydGxdIC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC5zYy1pb24taW5wdXQtbWQtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZCxbZGlyPXJ0bF0uc2MtaW9uLWlucHV0LW1kLWggLW5vLWNvbWJpbmF0b3IuaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1kLFtkaXI9cnRsXSAuc2MtaW9uLWlucHV0LW1kLWggLW5vLWNvbWJpbmF0b3IuaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1kLFtkaXI9cnRsXS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsW2Rpcj1ydGxdIC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7LXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcDt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcH1Ac3VwcG9ydHMgc2VsZWN0b3IoOmRpcihydGwpKXsuaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWg6ZGlyKHJ0bCkgLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsLmlucHV0LWxhYmVsLXBsYWNlbWVudC1mbG9hdGluZy5zYy1pb24taW5wdXQtbWQtaDpkaXIocnRsKSAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZHstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wO3RyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wfX0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWggaW5wdXQuc2MtaW9uLWlucHV0LW1kLC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggaW5wdXQuc2MtaW9uLWlucHV0LW1ke21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjA7bWFyZ2luLXRvcDoxcHg7bWFyZ2luLWJvdHRvbTowfS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWSgxMDAlKSBzY2FsZSgxKTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgxMDAlKSBzY2FsZSgxKX0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oIGlucHV0LnNjLWlvbi1pbnB1dC1tZHtvcGFjaXR5OjB9Lmhhcy1mb2N1cy5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggaW5wdXQuc2MtaW9uLWlucHV0LW1kLC5oYXMtdmFsdWUuaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oIGlucHV0LnNjLWlvbi1pbnB1dC1tZHtvcGFjaXR5OjF9LmxhYmVsLWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1key13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoNTAlKSBzY2FsZSgwLjc1KTt0cmFuc2Zvcm06dHJhbnNsYXRlWSg1MCUpIHNjYWxlKDAuNzUpO21heC13aWR0aDpjYWxjKDEwMCUgLyAwLjc1KX0uc2MtaW9uLWlucHV0LW1kLXM+W3Nsb3Q9c3RhcnRdOmxhc3Qtb2YtdHlwZXstd2Via2l0LW1hcmdpbi1lbmQ6MTZweDttYXJnaW4taW5saW5lLWVuZDoxNnB4Oy13ZWJraXQtbWFyZ2luLXN0YXJ0OjA7bWFyZ2luLWlubGluZS1zdGFydDowfS5zYy1pb24taW5wdXQtbWQtcz5bc2xvdD1lbmRdOmZpcnN0LW9mLXR5cGV7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6MTZweDttYXJnaW4taW5saW5lLXN0YXJ0OjE2cHg7LXdlYmtpdC1tYXJnaW4tZW5kOjA7bWFyZ2luLWlubGluZS1lbmQ6MH0uc2MtaW9uLWlucHV0LW1kLWhbZGlzYWJsZWRdLnNjLWlvbi1pbnB1dC1tZC1zPmlvbi1pbnB1dC1wYXNzd29yZC10b2dnbGUsLnNjLWlvbi1pbnB1dC1tZC1oW2Rpc2FibGVkXSAuc2MtaW9uLWlucHV0LW1kLXM+aW9uLWlucHV0LXBhc3N3b3JkLXRvZ2dsZSwuc2MtaW9uLWlucHV0LW1kLWhbcmVhZG9ubHldLnNjLWlvbi1pbnB1dC1tZC1zPmlvbi1pbnB1dC1wYXNzd29yZC10b2dnbGUsLnNjLWlvbi1pbnB1dC1tZC1oW3JlYWRvbmx5XSAuc2MtaW9uLWlucHV0LW1kLXM+aW9uLWlucHV0LXBhc3N3b3JkLXRvZ2dsZXtkaXNwbGF5Om5vbmV9LmlucHV0LWZpbGwtc29saWQuc2MtaW9uLWlucHV0LW1kLWh7LS1iYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1zdGVwLTUwLCB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvci1zdGVwLTUwLCAjZjJmMmYyKSk7LS1ib3JkZXItY29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtNTAwLCB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvci1zdGVwLTUwMCwgZ3JheSkpOy0tYm9yZGVyLXJhZGl1czo0cHg7LS1wYWRkaW5nLXN0YXJ0OjE2cHg7LS1wYWRkaW5nLWVuZDoxNnB4O21pbi1oZWlnaHQ6NTZweH0uaW5wdXQtZmlsbC1zb2xpZC5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7Ym9yZGVyLWJvdHRvbTp2YXIoLS1ib3JkZXItd2lkdGgpIHZhcigtLWJvcmRlci1zdHlsZSkgdmFyKC0tYm9yZGVyLWNvbG9yKX0uaGFzLWZvY3VzLmlucHV0LWZpbGwtc29saWQuaW9uLXZhbGlkLnNjLWlvbi1pbnB1dC1tZC1oLC5pbnB1dC1maWxsLXNvbGlkLmlvbi10b3VjaGVkLmlvbi1pbnZhbGlkLnNjLWlvbi1pbnB1dC1tZC1oey0tYm9yZGVyLWNvbG9yOnZhcigtLWhpZ2hsaWdodC1jb2xvcil9LmlucHV0LWZpbGwtc29saWQuc2MtaW9uLWlucHV0LW1kLWggLmlucHV0LWJvdHRvbS5zYy1pb24taW5wdXQtbWR7Ym9yZGVyLXRvcDpub25lfUBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcil7LmlucHV0LWZpbGwtc29saWQuc2MtaW9uLWlucHV0LW1kLWg6aG92ZXJ7LS1iYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1zdGVwLTEwMCwgdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3Itc3RlcC0xMDAsICNlNmU2ZTYpKTstLWJvcmRlci1jb2xvcjp2YXIoLS1pb24tY29sb3Itc3RlcC03NTAsIHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLXN0ZXAtNzUwLCAjNDA0MDQwKSl9fS5pbnB1dC1maWxsLXNvbGlkLmhhcy1mb2N1cy5zYy1pb24taW5wdXQtbWQtaHstLWJhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLXN0ZXAtMTUwLCB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvci1zdGVwLTE1MCwgI2Q5ZDlkOSkpOy0tYm9yZGVyLWNvbG9yOnZhcigtLWlvbi1jb2xvci1zdGVwLTc1MCwgdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3Itc3RlcC03NTAsICM0MDQwNDApKX0uaW5wdXQtZmlsbC1zb2xpZC5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7Ym9yZGVyLXN0YXJ0LXN0YXJ0LXJhZGl1czp2YXIoLS1ib3JkZXItcmFkaXVzKTtib3JkZXItc3RhcnQtZW5kLXJhZGl1czp2YXIoLS1ib3JkZXItcmFkaXVzKTtib3JkZXItZW5kLWVuZC1yYWRpdXM6MHB4O2JvcmRlci1lbmQtc3RhcnQtcmFkaXVzOjBweH0ubGFiZWwtZmxvYXRpbmcuaW5wdXQtZmlsbC1zb2xpZC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7bWF4LXdpZHRoOmNhbGMoMTAwJSAvIDAuNzUpfS5pbnB1dC1maWxsLW91dGxpbmUuc2MtaW9uLWlucHV0LW1kLWh7LS1ib3JkZXItY29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtMzAwLCB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvci1zdGVwLTMwMCwgI2IzYjNiMykpOy0tYm9yZGVyLXJhZGl1czo0cHg7LS1wYWRkaW5nLXN0YXJ0OjE2cHg7LS1wYWRkaW5nLWVuZDoxNnB4O21pbi1oZWlnaHQ6NTZweH0uaW5wdXQtZmlsbC1vdXRsaW5lLmlucHV0LXNoYXBlLXJvdW5kLnNjLWlvbi1pbnB1dC1tZC1oey0tYm9yZGVyLXJhZGl1czoyOHB4Oy0tcGFkZGluZy1zdGFydDozMnB4Oy0tcGFkZGluZy1lbmQ6MzJweH0uaGFzLWZvY3VzLmlucHV0LWZpbGwtb3V0bGluZS5pb24tdmFsaWQuc2MtaW9uLWlucHV0LW1kLWgsLmlucHV0LWZpbGwtb3V0bGluZS5pb24tdG91Y2hlZC5pb24taW52YWxpZC5zYy1pb24taW5wdXQtbWQtaHstLWJvcmRlci1jb2xvcjp2YXIoLS1oaWdobGlnaHQtY29sb3IpfUBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcil7LmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaDpob3ZlcnstLWJvcmRlci1jb2xvcjp2YXIoLS1pb24tY29sb3Itc3RlcC03NTAsIHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLXN0ZXAtNzUwLCAjNDA0MDQwKSl9fS5pbnB1dC1maWxsLW91dGxpbmUuaGFzLWZvY3VzLnNjLWlvbi1pbnB1dC1tZC1oey0tYm9yZGVyLXdpZHRoOnZhcigtLWhpZ2hsaWdodC1oZWlnaHQpOy0tYm9yZGVyLWNvbG9yOnZhcigtLWhpZ2hsaWdodC1jb2xvcil9LmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtYm90dG9tLnNjLWlvbi1pbnB1dC1tZHtib3JkZXItdG9wOm5vbmV9LmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7Ym9yZGVyLWJvdHRvbTpub25lfS5pbnB1dC1maWxsLW91dGxpbmUuaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsLmlucHV0LWZpbGwtb3V0bGluZS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7LXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOmxlZnQgdG9wO3RyYW5zZm9ybS1vcmlnaW46bGVmdCB0b3A7cG9zaXRpb246YWJzb2x1dGU7bWF4LXdpZHRoOmNhbGMoMTAwJSAtIHZhcigtLXBhZGRpbmctc3RhcnQpIC0gdmFyKC0tcGFkZGluZy1lbmQpKX1bZGlyPXJ0bF0uc2MtaW9uLWlucHV0LW1kLWggLW5vLWNvbWJpbmF0b3IuaW5wdXQtZmlsbC1vdXRsaW5lLmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1kLFtkaXI9cnRsXSAuc2MtaW9uLWlucHV0LW1kLWggLW5vLWNvbWJpbmF0b3IuaW5wdXQtZmlsbC1vdXRsaW5lLmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1kLFtkaXI9cnRsXS5pbnB1dC1maWxsLW91dGxpbmUuaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsW2Rpcj1ydGxdIC5pbnB1dC1maWxsLW91dGxpbmUuaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsW2Rpcj1ydGxdLnNjLWlvbi1pbnB1dC1tZC1oIC1uby1jb21iaW5hdG9yLmlucHV0LWZpbGwtb3V0bGluZS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsW2Rpcj1ydGxdIC5zYy1pb24taW5wdXQtbWQtaCAtbm8tY29tYmluYXRvci5pbnB1dC1maWxsLW91dGxpbmUuaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1kLFtkaXI9cnRsXS5pbnB1dC1maWxsLW91dGxpbmUuaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1kLFtkaXI9cnRsXSAuaW5wdXQtZmlsbC1vdXRsaW5lLmlucHV0LWxhYmVsLXBsYWNlbWVudC1mbG9hdGluZy5zYy1pb24taW5wdXQtbWQtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZHstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wO3RyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wfUBzdXBwb3J0cyBzZWxlY3Rvcig6ZGlyKHJ0bCkpey5pbnB1dC1maWxsLW91dGxpbmUuaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuc2MtaW9uLWlucHV0LW1kLWg6ZGlyKHJ0bCkgLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsLmlucHV0LWZpbGwtb3V0bGluZS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWg6ZGlyKHJ0bCkgLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWR7LXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcDt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcH19LmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZHtwb3NpdGlvbjpyZWxhdGl2ZX0ubGFiZWwtZmxvYXRpbmcuaW5wdXQtZmlsbC1vdXRsaW5lLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1key13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTMyJSkgc2NhbGUoMC43NSk7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTMyJSkgc2NhbGUoMC43NSk7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowO21heC13aWR0aDpjYWxjKCgxMDAlIC0gdmFyKC0tcGFkZGluZy1zdGFydCkgLSB2YXIoLS1wYWRkaW5nLWVuZCkgLSA4cHgpIC8gMC43NSl9LmlucHV0LWZpbGwtb3V0bGluZS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC5zYy1pb24taW5wdXQtbWQtaCBpbnB1dC5zYy1pb24taW5wdXQtbWQsLmlucHV0LWZpbGwtb3V0bGluZS5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuc2MtaW9uLWlucHV0LW1kLWggaW5wdXQuc2MtaW9uLWlucHV0LW1ke21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjA7bWFyZ2luLXRvcDo2cHg7bWFyZ2luLWJvdHRvbTo2cHh9LmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtb3V0bGluZS1jb250YWluZXIuc2MtaW9uLWlucHV0LW1ke2xlZnQ6MDtyaWdodDowO3RvcDowO2JvdHRvbTowO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9LmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtb3V0bGluZS1zdGFydC5zYy1pb24taW5wdXQtbWQsLmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtb3V0bGluZS1lbmQuc2MtaW9uLWlucHV0LW1ke3BvaW50ZXItZXZlbnRzOm5vbmV9LmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtb3V0bGluZS1zdGFydC5zYy1pb24taW5wdXQtbWQsLmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtb3V0bGluZS1ub3RjaC5zYy1pb24taW5wdXQtbWQsLmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtb3V0bGluZS1lbmQuc2MtaW9uLWlucHV0LW1ke2JvcmRlci10b3A6dmFyKC0tYm9yZGVyLXdpZHRoKSB2YXIoLS1ib3JkZXItc3R5bGUpIHZhcigtLWJvcmRlci1jb2xvcik7Ym9yZGVyLWJvdHRvbTp2YXIoLS1ib3JkZXItd2lkdGgpIHZhcigtLWJvcmRlci1zdHlsZSkgdmFyKC0tYm9yZGVyLWNvbG9yKX0uaW5wdXQtZmlsbC1vdXRsaW5lLnNjLWlvbi1pbnB1dC1tZC1oIC5pbnB1dC1vdXRsaW5lLW5vdGNoLnNjLWlvbi1pbnB1dC1tZHttYXgtd2lkdGg6Y2FsYygxMDAlIC0gdmFyKC0tcGFkZGluZy1zdGFydCkgLSB2YXIoLS1wYWRkaW5nLWVuZCkpfS5pbnB1dC1maWxsLW91dGxpbmUuc2MtaW9uLWlucHV0LW1kLWggLm5vdGNoLXNwYWNlci5zYy1pb24taW5wdXQtbWR7LXdlYmtpdC1wYWRkaW5nLWVuZDo4cHg7cGFkZGluZy1pbmxpbmUtZW5kOjhweDtmb250LXNpemU6Y2FsYygxZW0gKiAwLjc1KTtvcGFjaXR5OjA7cG9pbnRlci1ldmVudHM6bm9uZTstd2Via2l0LWJveC1zaXppbmc6Y29udGVudC1ib3g7Ym94LXNpemluZzpjb250ZW50LWJveH0uaW5wdXQtZmlsbC1vdXRsaW5lLnNjLWlvbi1pbnB1dC1tZC1oIC5pbnB1dC1vdXRsaW5lLXN0YXJ0LnNjLWlvbi1pbnB1dC1tZHtib3JkZXItc3RhcnQtc3RhcnQtcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpO2JvcmRlci1zdGFydC1lbmQtcmFkaXVzOjBweDtib3JkZXItZW5kLWVuZC1yYWRpdXM6MHB4O2JvcmRlci1lbmQtc3RhcnQtcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpOy13ZWJraXQtYm9yZGVyLXN0YXJ0OnZhcigtLWJvcmRlci13aWR0aCkgdmFyKC0tYm9yZGVyLXN0eWxlKSB2YXIoLS1ib3JkZXItY29sb3IpO2JvcmRlci1pbmxpbmUtc3RhcnQ6dmFyKC0tYm9yZGVyLXdpZHRoKSB2YXIoLS1ib3JkZXItc3R5bGUpIHZhcigtLWJvcmRlci1jb2xvcik7d2lkdGg6Y2FsYyh2YXIoLS1wYWRkaW5nLXN0YXJ0KSAtIDRweCl9LmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtb3V0bGluZS1lbmQuc2MtaW9uLWlucHV0LW1key13ZWJraXQtYm9yZGVyLWVuZDp2YXIoLS1ib3JkZXItd2lkdGgpIHZhcigtLWJvcmRlci1zdHlsZSkgdmFyKC0tYm9yZGVyLWNvbG9yKTtib3JkZXItaW5saW5lLWVuZDp2YXIoLS1ib3JkZXItd2lkdGgpIHZhcigtLWJvcmRlci1zdHlsZSkgdmFyKC0tYm9yZGVyLWNvbG9yKTtib3JkZXItc3RhcnQtc3RhcnQtcmFkaXVzOjBweDtib3JkZXItc3RhcnQtZW5kLXJhZGl1czp2YXIoLS1ib3JkZXItcmFkaXVzKTtib3JkZXItZW5kLWVuZC1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7Ym9yZGVyLWVuZC1zdGFydC1yYWRpdXM6MHB4Oy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjF9LmxhYmVsLWZsb2F0aW5nLmlucHV0LWZpbGwtb3V0bGluZS5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtb3V0bGluZS1ub3RjaC5zYy1pb24taW5wdXQtbWR7Ym9yZGVyLXRvcDpub25lfS5zYy1pb24taW5wdXQtbWQtaHstLWJvcmRlci13aWR0aDoxcHg7LS1ib3JkZXItY29sb3I6dmFyKC0taW9uLWl0ZW0tYm9yZGVyLWNvbG9yLCB2YXIoLS1pb24tYm9yZGVyLWNvbG9yLCB2YXIoLS1pb24tY29sb3Itc3RlcC0xNTAsIHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLXN0ZXAtMTUwLCByZ2JhKDAsIDAsIDAsIDAuMTMpKSkpKTstLWhpZ2hsaWdodC1oZWlnaHQ6MnB4O2ZvbnQtc2l6ZTppbmhlcml0fS5pbnB1dC1jbGVhci1pY29uLnNjLWlvbi1pbnB1dC1tZCBpb24taWNvbi5zYy1pb24taW5wdXQtbWR7d2lkdGg6MjJweDtoZWlnaHQ6MjJweH0uaW5wdXQtZGlzYWJsZWQuc2MtaW9uLWlucHV0LW1kLWh7b3BhY2l0eTowLjM4fS5oYXMtZm9jdXMuaW9uLXZhbGlkLnNjLWlvbi1pbnB1dC1tZC1oLC5pb24tdG91Y2hlZC5pb24taW52YWxpZC5zYy1pb24taW5wdXQtbWQtaHstLWJvcmRlci1jb2xvcjp2YXIoLS1oaWdobGlnaHQtY29sb3IpfS5pbnB1dC1ib3R0b20uc2MtaW9uLWlucHV0LW1kIC5jb3VudGVyLnNjLWlvbi1pbnB1dC1tZHtsZXR0ZXItc3BhY2luZzowLjAzMzMzMzMzMzNlbX0uaW5wdXQtbGFiZWwtcGxhY2VtZW50LWZsb2F0aW5nLmhhcy1mb2N1cy5zYy1pb24taW5wdXQtbWQtaCAubGFiZWwtdGV4dC13cmFwcGVyLnNjLWlvbi1pbnB1dC1tZCwuaW5wdXQtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQuaGFzLWZvY3VzLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1ke2NvbG9yOnZhcigtLWhpZ2hsaWdodC1jb2xvcil9Lmhhcy1mb2N1cy5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuaW9uLXZhbGlkLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1kLC5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtZmxvYXRpbmcuaW9uLXRvdWNoZWQuaW9uLWludmFsaWQuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsLmhhcy1mb2N1cy5pbnB1dC1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC5pb24tdmFsaWQuc2MtaW9uLWlucHV0LW1kLWggLmxhYmVsLXRleHQtd3JhcHBlci5zYy1pb24taW5wdXQtbWQsLmlucHV0LWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLmlvbi10b3VjaGVkLmlvbi1pbnZhbGlkLnNjLWlvbi1pbnB1dC1tZC1oIC5sYWJlbC10ZXh0LXdyYXBwZXIuc2MtaW9uLWlucHV0LW1ke2NvbG9yOnZhcigtLWhpZ2hsaWdodC1jb2xvcil9LmlucHV0LWhpZ2hsaWdodC5zYy1pb24taW5wdXQtbWR7Ym90dG9tOi0xcHg7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6dmFyKC0taGlnaGxpZ2h0LWhlaWdodCk7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApOy13ZWJraXQtdHJhbnNpdGlvbjotd2Via2l0LXRyYW5zZm9ybSAyMDBtczt0cmFuc2l0aW9uOi13ZWJraXQtdHJhbnNmb3JtIDIwMG1zO3RyYW5zaXRpb246dHJhbnNmb3JtIDIwMG1zO3RyYW5zaXRpb246dHJhbnNmb3JtIDIwMG1zLCAtd2Via2l0LXRyYW5zZm9ybSAyMDBtcztiYWNrZ3JvdW5kOnZhcigtLWhpZ2hsaWdodC1jb2xvcil9LmlucHV0LWhpZ2hsaWdodC5zYy1pb24taW5wdXQtbWR7aW5zZXQtaW5saW5lLXN0YXJ0OjB9Lmhhcy1mb2N1cy5zYy1pb24taW5wdXQtbWQtaCAuaW5wdXQtaGlnaGxpZ2h0LnNjLWlvbi1pbnB1dC1tZHstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9LmluLWl0ZW0uc2MtaW9uLWlucHV0LW1kLWggLmlucHV0LWhpZ2hsaWdodC5zYy1pb24taW5wdXQtbWR7Ym90dG9tOjB9LmluLWl0ZW0uc2MtaW9uLWlucHV0LW1kLWggLmlucHV0LWhpZ2hsaWdodC5zYy1pb24taW5wdXQtbWR7aW5zZXQtaW5saW5lLXN0YXJ0OjB9LmlucHV0LXNoYXBlLXJvdW5kLnNjLWlvbi1pbnB1dC1tZC1oey0tYm9yZGVyLXJhZGl1czoxNnB4fS5zYy1pb24taW5wdXQtbWQtcz5pb24tYnV0dG9uW3Nsb3Q9c3RhcnRdLmJ1dHRvbi1oYXMtaWNvbi1vbmx5LC5zYy1pb24taW5wdXQtbWQtcz5pb24tYnV0dG9uW3Nsb3Q9ZW5kXS5idXR0b24taGFzLWljb24tb25seXstLWJvcmRlci1yYWRpdXM6NTAlOy0tcGFkZGluZy1zdGFydDo4cHg7LS1wYWRkaW5nLWVuZDo4cHg7LS1wYWRkaW5nLXRvcDo4cHg7LS1wYWRkaW5nLWJvdHRvbTo4cHg7YXNwZWN0LXJhdGlvOjE7bWluLWhlaWdodDo0MHB4fVwiO1xuXG5jb25zdCBJbnB1dCA9IGNsYXNzIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0UmVmKSB7XG4gICAgICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XG4gICAgICAgIHRoaXMuaW9uSW5wdXQgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbklucHV0XCIsIDcpO1xuICAgICAgICB0aGlzLmlvbkNoYW5nZSA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uQ2hhbmdlXCIsIDcpO1xuICAgICAgICB0aGlzLmlvbkJsdXIgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkJsdXJcIiwgNyk7XG4gICAgICAgIHRoaXMuaW9uRm9jdXMgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkZvY3VzXCIsIDcpO1xuICAgICAgICB0aGlzLmlucHV0SWQgPSBgaW9uLWlucHV0LSR7aW5wdXRJZHMrK31gO1xuICAgICAgICB0aGlzLmhlbHBlclRleHRJZCA9IGAke3RoaXMuaW5wdXRJZH0taGVscGVyLXRleHRgO1xuICAgICAgICB0aGlzLmVycm9yVGV4dElkID0gYCR7dGhpcy5pbnB1dElkfS1lcnJvci10ZXh0YDtcbiAgICAgICAgdGhpcy5pbmhlcml0ZWRBdHRyaWJ1dGVzID0ge307XG4gICAgICAgIHRoaXMuaXNDb21wb3NpbmcgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIGB0cnVlYCBpZiB0aGUgaW5wdXQgd2FzIGNsZWFyZWQgYXMgYSByZXN1bHQgb2YgdGhlIHVzZXIgdHlwaW5nXG4gICAgICAgICAqIHdpdGggYGNsZWFyT25FZGl0YCBlbmFibGVkLlxuICAgICAgICAgKlxuICAgICAgICAgKiBSZXNldHMgd2hlbiB0aGUgaW5wdXQgbG9zZXMgZm9jdXMuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmRpZElucHV0Q2xlYXJPbkVkaXQgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBgaGFzRm9jdXNgIHN0YXRlIGVuc3VyZXMgdGhlIGZvY3VzIGNsYXNzIGlzXG4gICAgICAgICAqIGFkZGVkIHJlZ2FyZGxlc3Mgb2YgaG93IHRoZSBlbGVtZW50IGlzIGZvY3VzZWQuXG4gICAgICAgICAqIFRoZSBgaW9uLWZvY3VzZWRgIGNsYXNzIG9ubHkgYXBwbGllcyB3aGVuIGZvY3VzZWRcbiAgICAgICAgICogdmlhIHRhYmJpbmcsIG5vdCBieSBjbGlja2luZy5cbiAgICAgICAgICogVGhlIGBoYXMtZm9jdXNgIGxvZ2ljIHdhcyBhZGRlZCB0byBlbnN1cmUgdGhlIGNsYXNzXG4gICAgICAgICAqIGlzIGFwcGxpZWQgaW4gYm90aCBjYXNlcy5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaGFzRm9jdXMgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEluZGljYXRlcyB3aGV0aGVyIGFuZCBob3cgdGhlIHRleHQgdmFsdWUgc2hvdWxkIGJlIGF1dG9tYXRpY2FsbHkgY2FwaXRhbGl6ZWQgYXMgaXQgaXMgZW50ZXJlZC9lZGl0ZWQgYnkgdGhlIHVzZXIuXG4gICAgICAgICAqIEF2YWlsYWJsZSBvcHRpb25zOiBgXCJvZmZcImAsIGBcIm5vbmVcImAsIGBcIm9uXCJgLCBgXCJzZW50ZW5jZXNcImAsIGBcIndvcmRzXCJgLCBgXCJjaGFyYWN0ZXJzXCJgLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5hdXRvY2FwaXRhbGl6ZSA9ICdvZmYnO1xuICAgICAgICAvKipcbiAgICAgICAgICogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIHZhbHVlIG9mIHRoZSBjb250cm9sIGNhbiBiZSBhdXRvbWF0aWNhbGx5IGNvbXBsZXRlZCBieSB0aGUgYnJvd3Nlci5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYXV0b2NvbXBsZXRlID0gJ29mZic7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXaGV0aGVyIGF1dG8gY29ycmVjdGlvbiBzaG91bGQgYmUgZW5hYmxlZCB3aGVuIHRoZSB1c2VyIGlzIGVudGVyaW5nL2VkaXRpbmcgdGhlIHRleHQgdmFsdWUuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmF1dG9jb3JyZWN0ID0gJ29mZic7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXRzIHRoZSBbYGF1dG9mb2N1c2AgYXR0cmlidXRlXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1ML0dsb2JhbF9hdHRyaWJ1dGVzL2F1dG9mb2N1cykgb24gdGhlIG5hdGl2ZSBpbnB1dCBlbGVtZW50LlxuICAgICAgICAgKlxuICAgICAgICAgKiBUaGlzIG1heSBub3QgYmUgc3VmZmljaWVudCBmb3IgdGhlIGVsZW1lbnQgdG8gYmUgZm9jdXNlZCBvbiBwYWdlIGxvYWQuIFNlZSBbbWFuYWdpbmcgZm9jdXNdKC9kb2NzL2RldmVsb3BpbmcvbWFuYWdpbmctZm9jdXMpIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5hdXRvZm9jdXMgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIGB0cnVlYCwgYSBjbGVhciBpY29uIHdpbGwgYXBwZWFyIGluIHRoZSBpbnB1dCB3aGVuIHRoZXJlIGlzIGEgdmFsdWUuIENsaWNraW5nIGl0IGNsZWFycyB0aGUgaW5wdXQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNsZWFySW5wdXQgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIGB0cnVlYCwgYSBjaGFyYWN0ZXIgY291bnRlciB3aWxsIGRpc3BsYXkgdGhlIHJhdGlvIG9mIGNoYXJhY3RlcnMgdXNlZCBhbmQgdGhlIHRvdGFsIGNoYXJhY3RlciBsaW1pdC4gRGV2ZWxvcGVycyBtdXN0IGFsc28gc2V0IHRoZSBgbWF4bGVuZ3RoYCBwcm9wZXJ0eSBmb3IgdGhlIGNvdW50ZXIgdG8gYmUgY2FsY3VsYXRlZCBjb3JyZWN0bHkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvdW50ZXIgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIGB0cnVlYCwgdGhlIHVzZXIgY2Fubm90IGludGVyYWN0IHdpdGggdGhlIGlucHV0LlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogV2hlcmUgdG8gcGxhY2UgdGhlIGxhYmVsIHJlbGF0aXZlIHRvIHRoZSBpbnB1dC5cbiAgICAgICAgICogYFwic3RhcnRcImA6IFRoZSBsYWJlbCB3aWxsIGFwcGVhciB0byB0aGUgbGVmdCBvZiB0aGUgaW5wdXQgaW4gTFRSIGFuZCB0byB0aGUgcmlnaHQgaW4gUlRMLlxuICAgICAgICAgKiBgXCJlbmRcImA6IFRoZSBsYWJlbCB3aWxsIGFwcGVhciB0byB0aGUgcmlnaHQgb2YgdGhlIGlucHV0IGluIExUUiBhbmQgdG8gdGhlIGxlZnQgaW4gUlRMLlxuICAgICAgICAgKiBgXCJmbG9hdGluZ1wiYDogVGhlIGxhYmVsIHdpbGwgYXBwZWFyIHNtYWxsZXIgYW5kIGFib3ZlIHRoZSBpbnB1dCB3aGVuIHRoZSBpbnB1dCBpcyBmb2N1c2VkIG9yIGl0IGhhcyBhIHZhbHVlLiBPdGhlcndpc2UgaXQgd2lsbCBhcHBlYXIgb24gdG9wIG9mIHRoZSBpbnB1dC5cbiAgICAgICAgICogYFwic3RhY2tlZFwiYDogVGhlIGxhYmVsIHdpbGwgYXBwZWFyIHNtYWxsZXIgYW5kIGFib3ZlIHRoZSBpbnB1dCByZWdhcmRsZXNzIGV2ZW4gd2hlbiB0aGUgaW5wdXQgaXMgYmx1cnJlZCBvciBoYXMgbm8gdmFsdWUuXG4gICAgICAgICAqIGBcImZpeGVkXCJgOiBUaGUgbGFiZWwgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIGBcInN0YXJ0XCJgIGV4Y2VwdCBpdCBhbHNvIGhhcyBhIGZpeGVkIHdpZHRoLiBMb25nIHRleHQgd2lsbCBiZSB0cnVuY2F0ZWQgd2l0aCBlbGxpcHNlcyAoXCIuLi5cIikuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmxhYmVsUGxhY2VtZW50ID0gJ3N0YXJ0JztcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoZSBjb250cm9sLCB3aGljaCBpcyBzdWJtaXR0ZWQgd2l0aCB0aGUgZm9ybSBkYXRhLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gdGhpcy5pbnB1dElkO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgYHRydWVgLCB0aGUgdXNlciBjYW5ub3QgbW9kaWZ5IHRoZSB2YWx1ZS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucmVhZG9ubHkgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIGB0cnVlYCwgdGhlIHVzZXIgbXVzdCBmaWxsIGluIGEgdmFsdWUgYmVmb3JlIHN1Ym1pdHRpbmcgYSBmb3JtLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5yZXF1aXJlZCA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgYHRydWVgLCB0aGUgZWxlbWVudCB3aWxsIGhhdmUgaXRzIHNwZWxsaW5nIGFuZCBncmFtbWFyIGNoZWNrZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNwZWxsY2hlY2sgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSB0eXBlIG9mIGNvbnRyb2wgdG8gZGlzcGxheS4gVGhlIGRlZmF1bHQgdHlwZSBpcyB0ZXh0LlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy50eXBlID0gJ3RleHQnO1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIHZhbHVlIG9mIHRoZSBpbnB1dC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudmFsdWUgPSAnJztcbiAgICAgICAgdGhpcy5vbklucHV0ID0gKGV2KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpbnB1dCA9IGV2LnRhcmdldDtcbiAgICAgICAgICAgIGlmIChpbnB1dCkge1xuICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBpbnB1dC52YWx1ZSB8fCAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZW1pdElucHV0Q2hhbmdlKGV2KTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZSA9IChldikgPT4ge1xuICAgICAgICAgICAgdGhpcy5lbWl0VmFsdWVDaGFuZ2UoZXYpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLm9uQmx1ciA9IChldikgPT4ge1xuICAgICAgICAgICAgdGhpcy5oYXNGb2N1cyA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKHRoaXMuZm9jdXNlZFZhbHVlICE9PSB0aGlzLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogRW1pdHMgdGhlIGBpb25DaGFuZ2VgIGV2ZW50IHdoZW4gdGhlIGlucHV0IHZhbHVlXG4gICAgICAgICAgICAgICAgICogaXMgZGlmZmVyZW50IHRoYW4gdGhlIHZhbHVlIHdoZW4gdGhlIGlucHV0IHdhcyBmb2N1c2VkLlxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIHRoaXMuZW1pdFZhbHVlQ2hhbmdlKGV2KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZGlkSW5wdXRDbGVhck9uRWRpdCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5pb25CbHVyLmVtaXQoZXYpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLm9uRm9jdXMgPSAoZXYpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaGFzRm9jdXMgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5mb2N1c2VkVmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgdGhpcy5pb25Gb2N1cy5lbWl0KGV2KTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5vbktleWRvd24gPSAoZXYpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2hlY2tDbGVhck9uRWRpdChldik7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMub25Db21wb3NpdGlvblN0YXJ0ID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5pc0NvbXBvc2luZyA9IHRydWU7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMub25Db21wb3NpdGlvbkVuZCA9ICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaXNDb21wb3NpbmcgPSBmYWxzZTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5jbGVhclRleHRJbnB1dCA9IChldikgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuY2xlYXJJbnB1dCAmJiAhdGhpcy5yZWFkb25seSAmJiAhdGhpcy5kaXNhYmxlZCAmJiBldikge1xuICAgICAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZXYuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgLy8gQXR0ZW1wdCB0byBmb2N1cyBpbnB1dCBhZ2FpbiBhZnRlciBwcmVzc2luZyBjbGVhciBidXR0b25cbiAgICAgICAgICAgICAgICB0aGlzLnNldEZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnZhbHVlID0gJyc7XG4gICAgICAgICAgICB0aGlzLmVtaXRJbnB1dENoYW5nZShldik7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTdG9wcyBwcm9wYWdhdGlvbiB3aGVuIHRoZSBsYWJlbCBpcyBjbGlja2VkLFxuICAgICAgICAgKiBvdGhlcndpc2UsIHR3byBjbGlja3Mgd2lsbCBiZSB0cmlnZ2VyZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9uTGFiZWxDbGljayA9IChldikgPT4ge1xuICAgICAgICAgICAgLy8gT25seSBzdG9wIHByb3BhZ2F0aW9uIGlmIHRoZSBjbGljayB3YXMgZGlyZWN0bHkgb24gdGhlIGxhYmVsXG4gICAgICAgICAgICAvLyBhbmQgbm90IG9uIHRoZSBpbnB1dCBvciBvdGhlciBjaGlsZCBlbGVtZW50c1xuICAgICAgICAgICAgaWYgKGV2LnRhcmdldCA9PT0gZXYuY3VycmVudFRhcmdldCkge1xuICAgICAgICAgICAgICAgIGV2LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBkZWJvdW5jZUNoYW5nZWQoKSB7XG4gICAgICAgIGNvbnN0IHsgaW9uSW5wdXQsIGRlYm91bmNlLCBvcmlnaW5hbElvbklucHV0IH0gPSB0aGlzO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgZGVib3VuY2UgaXMgdW5kZWZpbmVkLCB3ZSBoYXZlIHRvIG1hbnVhbGx5IHJldmVydCB0aGUgaW9uSW5wdXQgZW1pdHRlciBpbiBjYXNlXG4gICAgICAgICAqIGRlYm91bmNlIHVzZWQgdG8gYmUgc2V0IHRvIGEgbnVtYmVyLiBPdGhlcndpc2UsIHRoZSBldmVudCB3b3VsZCBzdGF5IGRlYm91bmNlZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaW9uSW5wdXQgPSBkZWJvdW5jZSA9PT0gdW5kZWZpbmVkID8gb3JpZ2luYWxJb25JbnB1dCAhPT0gbnVsbCAmJiBvcmlnaW5hbElvbklucHV0ICE9PSB2b2lkIDAgPyBvcmlnaW5hbElvbklucHV0IDogaW9uSW5wdXQgOiBkZWJvdW5jZUV2ZW50KGlvbklucHV0LCBkZWJvdW5jZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdoZW5ldmVyIHRoZSB0eXBlIG9uIHRoZSBpbnB1dCBjaGFuZ2VzIHdlIG5lZWRcbiAgICAgKiB0byB1cGRhdGUgdGhlIGludGVybmFsIHR5cGUgcHJvcCBvbiB0aGUgcGFzc3dvcmRcbiAgICAgKiB0b2dnbGUgc28gdGhhdCB0aGF0IGNvcnJlY3QgaWNvbiBpcyBzaG93bi5cbiAgICAgKi9cbiAgICBvblR5cGVDaGFuZ2UoKSB7XG4gICAgICAgIGNvbnN0IHBhc3N3b3JkVG9nZ2xlID0gdGhpcy5lbC5xdWVyeVNlbGVjdG9yKCdpb24taW5wdXQtcGFzc3dvcmQtdG9nZ2xlJyk7XG4gICAgICAgIGlmIChwYXNzd29yZFRvZ2dsZSkge1xuICAgICAgICAgICAgcGFzc3dvcmRUb2dnbGUudHlwZSA9IHRoaXMudHlwZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIG5hdGl2ZSBpbnB1dCBlbGVtZW50IHdoZW4gdGhlIHZhbHVlIGNoYW5nZXNcbiAgICAgKi9cbiAgICB2YWx1ZUNoYW5nZWQoKSB7XG4gICAgICAgIGNvbnN0IG5hdGl2ZUlucHV0ID0gdGhpcy5uYXRpdmVJbnB1dDtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldFZhbHVlKCk7XG4gICAgICAgIGlmIChuYXRpdmVJbnB1dCAmJiBuYXRpdmVJbnB1dC52YWx1ZSAhPT0gdmFsdWUgJiYgIXRoaXMuaXNDb21wb3NpbmcpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQXNzaWduaW5nIHRoZSBuYXRpdmUgaW5wdXQncyB2YWx1ZSBvbiBhdHRyaWJ1dGVcbiAgICAgICAgICAgICAqIHZhbHVlIGNoYW5nZSwgYWxsb3dzIGBpb25JbnB1dGAgaW1wbGVtZW50YXRpb25zXG4gICAgICAgICAgICAgKiB0byBvdmVycmlkZSB0aGUgY29udHJvbCdzIHZhbHVlLlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIFVzZWQgZm9yIHBhdHRlcm5zIHN1Y2ggYXMgaW5wdXQgdHJpbW1pbmcgKHJlbW92aW5nIHdoaXRlc3BhY2UpLFxuICAgICAgICAgICAgICogb3IgaW5wdXQgbWFza2luZy5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgbmF0aXZlSW5wdXQudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBkaXIgaXMgYSBnbG9iYWxseSBlbnVtZXJhdGVkIGF0dHJpYnV0ZS5cbiAgICAgKiBBcyBhIHJlc3VsdCwgY3JlYXRpbmcgdGhlc2UgYXMgcHJvcGVydGllc1xuICAgICAqIGNhbiBoYXZlIHVuaW50ZW5kZWQgc2lkZSBlZmZlY3RzLiBJbnN0ZWFkLCB3ZVxuICAgICAqIGxpc3RlbiBmb3IgYXR0cmlidXRlIGNoYW5nZXMgYW5kIGluaGVyaXQgdGhlbVxuICAgICAqIHRvIHRoZSBpbm5lciBgPGlucHV0PmAgZWxlbWVudC5cbiAgICAgKi9cbiAgICBvbkRpckNoYW5nZWQobmV3VmFsdWUpIHtcbiAgICAgICAgdGhpcy5pbmhlcml0ZWRBdHRyaWJ1dGVzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLmluaGVyaXRlZEF0dHJpYnV0ZXMpLCB7IGRpcjogbmV3VmFsdWUgfSk7XG4gICAgICAgIGZvcmNlVXBkYXRlKHRoaXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGlzIHByZXZlbnRzIHRoZSBuYXRpdmUgaW5wdXQgZnJvbSBlbWl0dGluZyB0aGUgY2xpY2sgZXZlbnQuXG4gICAgICogSW5zdGVhZCwgdGhlIGNsaWNrIGV2ZW50IGZyb20gdGhlIGlvbi1pbnB1dCBpcyBlbWl0dGVkLlxuICAgICAqL1xuICAgIG9uQ2xpY2tDYXB0dXJlKGV2KSB7XG4gICAgICAgIGNvbnN0IG5hdGl2ZUlucHV0ID0gdGhpcy5uYXRpdmVJbnB1dDtcbiAgICAgICAgaWYgKG5hdGl2ZUlucHV0ICYmIGV2LnRhcmdldCA9PT0gbmF0aXZlSW5wdXQpIHtcbiAgICAgICAgICAgIGV2LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgdGhpcy5lbC5jbGljaygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgICAgICB0aGlzLmluaGVyaXRlZEF0dHJpYnV0ZXMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGluaGVyaXRBcmlhQXR0cmlidXRlcyh0aGlzLmVsKSksIGluaGVyaXRBdHRyaWJ1dGVzKHRoaXMuZWwsIFsndGFiaW5kZXgnLCAndGl0bGUnLCAnZGF0YS1mb3JtLXR5cGUnLCAnZGlyJ10pKTtcbiAgICB9XG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgIGNvbnN0IHsgZWwgfSA9IHRoaXM7XG4gICAgICAgIHRoaXMuc2xvdE11dGF0aW9uQ29udHJvbGxlciA9IGNyZWF0ZVNsb3RNdXRhdGlvbkNvbnRyb2xsZXIoZWwsIFsnbGFiZWwnLCAnc3RhcnQnLCAnZW5kJ10sICgpID0+IGZvcmNlVXBkYXRlKHRoaXMpKTtcbiAgICAgICAgdGhpcy5ub3RjaENvbnRyb2xsZXIgPSBjcmVhdGVOb3RjaENvbnRyb2xsZXIoZWwsICgpID0+IHRoaXMubm90Y2hTcGFjZXJFbCwgKCkgPT4gdGhpcy5sYWJlbFNsb3QpO1xuICAgICAgICB0aGlzLmRlYm91bmNlQ2hhbmdlZCgpO1xuICAgICAgICB7XG4gICAgICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnaW9uSW5wdXREaWRMb2FkJywge1xuICAgICAgICAgICAgICAgIGRldGFpbDogdGhpcy5lbCxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnREaWRMb2FkKCkge1xuICAgICAgICB0aGlzLm9yaWdpbmFsSW9uSW5wdXQgPSB0aGlzLmlvbklucHV0O1xuICAgICAgICAvKipcbiAgICAgICAgICogU2V0IHRoZSB0eXBlIG9uIHRoZSBwYXNzd29yZCB0b2dnbGUgaW4gdGhlIGV2ZW50IHRoYXQgdGhpcyBpbnB1dCdzXG4gICAgICAgICAqIHR5cGUgd2FzIHNldCBhc3luYyBhbmQgZG9lcyBub3QgbWF0Y2ggdGhlIGRlZmF1bHQgdHlwZSBmb3IgdGhlIHBhc3N3b3JkIHRvZ2dsZS5cbiAgICAgICAgICogVGhpcyBjYW4gaGFwcGVuIHdoZW4gdGhlIHR5cGUgaXMgYm91bmQgdXNpbmcgYSBKUyBmcmFtZXdvcmsgYmluZGluZyBzeW50YXhcbiAgICAgICAgICogc3VjaCBhcyBbdHlwZV0gaW4gQW5ndWxhci5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub25UeXBlQ2hhbmdlKCk7XG4gICAgICAgIHRoaXMuZGVib3VuY2VDaGFuZ2VkKCk7XG4gICAgfVxuICAgIGNvbXBvbmVudERpZFJlbmRlcigpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAoX2EgPSB0aGlzLm5vdGNoQ29udHJvbGxlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGN1bGF0ZU5vdGNoV2lkdGgoKTtcbiAgICB9XG4gICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdpb25JbnB1dERpZFVubG9hZCcsIHtcbiAgICAgICAgICAgICAgICBkZXRhaWw6IHRoaXMuZWwsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc2xvdE11dGF0aW9uQ29udHJvbGxlcikge1xuICAgICAgICAgICAgdGhpcy5zbG90TXV0YXRpb25Db250cm9sbGVyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIHRoaXMuc2xvdE11dGF0aW9uQ29udHJvbGxlciA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ub3RjaENvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIHRoaXMubm90Y2hDb250cm9sbGVyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIHRoaXMubm90Y2hDb250cm9sbGVyID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgZm9jdXMgb24gdGhlIG5hdGl2ZSBgaW5wdXRgIGluIGBpb24taW5wdXRgLiBVc2UgdGhpcyBtZXRob2QgaW5zdGVhZCBvZiB0aGUgZ2xvYmFsXG4gICAgICogYGlucHV0LmZvY3VzKClgLlxuICAgICAqXG4gICAgICogRGV2ZWxvcGVycyB3aG8gd2lzaCB0byBmb2N1cyBhbiBpbnB1dCB3aGVuIGEgcGFnZSBlbnRlcnNcbiAgICAgKiBzaG91bGQgY2FsbCBgc2V0Rm9jdXMoKWAgaW4gdGhlIGBpb25WaWV3RGlkRW50ZXIoKWAgbGlmZWN5Y2xlIG1ldGhvZC5cbiAgICAgKlxuICAgICAqIERldmVsb3BlcnMgd2hvIHdpc2ggdG8gZm9jdXMgYW4gaW5wdXQgd2hlbiBhbiBvdmVybGF5IGlzIHByZXNlbnRlZFxuICAgICAqIHNob3VsZCBjYWxsIGBzZXRGb2N1c2AgYWZ0ZXIgYGRpZFByZXNlbnRgIGhhcyByZXNvbHZlZC5cbiAgICAgKlxuICAgICAqIFNlZSBbbWFuYWdpbmcgZm9jdXNdKC9kb2NzL2RldmVsb3BpbmcvbWFuYWdpbmctZm9jdXMpIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldEZvY3VzKCkge1xuICAgICAgICBpZiAodGhpcy5uYXRpdmVJbnB1dCkge1xuICAgICAgICAgICAgdGhpcy5uYXRpdmVJbnB1dC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIG5hdGl2ZSBgPGlucHV0PmAgZWxlbWVudCB1c2VkIHVuZGVyIHRoZSBob29kLlxuICAgICAqL1xuICAgIGFzeW5jIGdldElucHV0RWxlbWVudCgpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIHRoaXMgZ2V0cyBjYWxsZWQgaW4gY2VydGFpbiBlYXJseSBsaWZlY3ljbGUgaG9va3MgKGV4OiBWdWUgb25Nb3VudGVkKSxcbiAgICAgICAgICogbmF0aXZlSW5wdXQgd29uJ3QgYmUgZGVmaW5lZCB5ZXQgd2l0aCB0aGUgY3VzdG9tIGVsZW1lbnRzIGJ1aWxkLCBzbyB3YWl0IGZvciBpdCB0byBsb2FkIGluLlxuICAgICAgICAgKi9cbiAgICAgICAgaWYgKCF0aGlzLm5hdGl2ZUlucHV0KSB7XG4gICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gY29tcG9uZW50T25SZWFkeSh0aGlzLmVsLCByZXNvbHZlKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLm5hdGl2ZUlucHV0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRW1pdHMgYW4gYGlvbkNoYW5nZWAgZXZlbnQuXG4gICAgICpcbiAgICAgKiBUaGlzIEFQSSBzaG91bGQgYmUgY2FsbGVkIGZvciB1c2VyIGNvbW1pdHRlZCBjaGFuZ2VzLlxuICAgICAqIFRoaXMgQVBJIHNob3VsZCBub3QgYmUgdXNlZCBmb3IgZXh0ZXJuYWwgdmFsdWUgY2hhbmdlcy5cbiAgICAgKi9cbiAgICBlbWl0VmFsdWVDaGFuZ2UoZXZlbnQpIHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gdGhpcztcbiAgICAgICAgLy8gQ2hlY2tzIGZvciBib3RoIG51bGwgYW5kIHVuZGVmaW5lZCB2YWx1ZXNcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB2YWx1ZSA9PSBudWxsID8gdmFsdWUgOiB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAvLyBFbWl0dGluZyBhIHZhbHVlIGNoYW5nZSBzaG91bGQgdXBkYXRlIHRoZSBpbnRlcm5hbCBzdGF0ZSBmb3IgdHJhY2tpbmcgdGhlIGZvY3VzZWQgdmFsdWVcbiAgICAgICAgdGhpcy5mb2N1c2VkVmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgICAgdGhpcy5pb25DaGFuZ2UuZW1pdCh7IHZhbHVlOiBuZXdWYWx1ZSwgZXZlbnQgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVtaXRzIGFuIGBpb25JbnB1dGAgZXZlbnQuXG4gICAgICovXG4gICAgZW1pdElucHV0Q2hhbmdlKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRoaXM7XG4gICAgICAgIC8vIENoZWNrcyBmb3IgYm90aCBudWxsIGFuZCB1bmRlZmluZWQgdmFsdWVzXG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gdmFsdWUgPT0gbnVsbCA/IHZhbHVlIDogdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgdGhpcy5pb25JbnB1dC5lbWl0KHsgdmFsdWU6IG5ld1ZhbHVlLCBldmVudCB9KTtcbiAgICB9XG4gICAgc2hvdWxkQ2xlYXJPbkVkaXQoKSB7XG4gICAgICAgIGNvbnN0IHsgdHlwZSwgY2xlYXJPbkVkaXQgfSA9IHRoaXM7XG4gICAgICAgIHJldHVybiBjbGVhck9uRWRpdCA9PT0gdW5kZWZpbmVkID8gdHlwZSA9PT0gJ3Bhc3N3b3JkJyA6IGNsZWFyT25FZGl0O1xuICAgIH1cbiAgICBnZXRWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLnZhbHVlID09PSAnbnVtYmVyJyA/IHRoaXMudmFsdWUudG9TdHJpbmcoKSA6ICh0aGlzLnZhbHVlIHx8ICcnKS50b1N0cmluZygpO1xuICAgIH1cbiAgICBjaGVja0NsZWFyT25FZGl0KGV2KSB7XG4gICAgICAgIGlmICghdGhpcy5zaG91bGRDbGVhck9uRWRpdCgpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBmb2xsb3dpbmcga2V5cyBkbyBub3QgbW9kaWZ5IHRoZVxuICAgICAgICAgKiBjb250ZW50cyBvZiB0aGUgaW5wdXQuIEFzIGEgcmVzdWx0LCBwcmVzc2luZ1xuICAgICAgICAgKiB0aGVtIHNob3VsZCBub3QgZWRpdCB0aGUgaW5wdXQuXG4gICAgICAgICAqXG4gICAgICAgICAqIFdlIGNhbid0IGNoZWNrIHRvIHNlZSBpZiB0aGUgdmFsdWUgb2YgdGhlIGlucHV0XG4gICAgICAgICAqIHdhcyBjaGFuZ2VkIGJlY2F1c2Ugd2UgY2FsbCBjaGVja0NsZWFyT25FZGl0XG4gICAgICAgICAqIGluIGEga2V5ZG93biBsaXN0ZW5lciwgYW5kIHRoZSBrZXkgaGFzIG5vdCB5ZXRcbiAgICAgICAgICogYmVlbiBhZGRlZCB0byB0aGUgaW5wdXQuXG4gICAgICAgICAqL1xuICAgICAgICBjb25zdCBJR05PUkVEX0tFWVMgPSBbJ0VudGVyJywgJ1RhYicsICdTaGlmdCcsICdNZXRhJywgJ0FsdCcsICdDb250cm9sJ107XG4gICAgICAgIGNvbnN0IHByZXNzZWRJZ25vcmVkS2V5ID0gSUdOT1JFRF9LRVlTLmluY2x1ZGVzKGV2LmtleSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDbGVhciB0aGUgaW5wdXQgaWYgdGhlIGNvbnRyb2wgaGFzIG5vdCBiZWVuIHByZXZpb3VzbHkgY2xlYXJlZCBkdXJpbmcgZm9jdXMuXG4gICAgICAgICAqIERvIG5vdCBjbGVhciBpZiB0aGUgdXNlciBoaXR0aW5nIGVudGVyIHRvIHN1Ym1pdCBhIGZvcm0uXG4gICAgICAgICAqL1xuICAgICAgICBpZiAoIXRoaXMuZGlkSW5wdXRDbGVhck9uRWRpdCAmJiB0aGlzLmhhc1ZhbHVlKCkgJiYgIXByZXNzZWRJZ25vcmVkS2V5KSB7XG4gICAgICAgICAgICB0aGlzLnZhbHVlID0gJyc7XG4gICAgICAgICAgICB0aGlzLmVtaXRJbnB1dENoYW5nZShldik7XG4gICAgICAgIH1cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFByZXNzaW5nIGFuIElHTk9SRURfS0VZUyBmaXJzdCBhbmRcbiAgICAgICAgICogdGhlbiBhbiBhbGxvd2VkIGtleSB3aWxsIGNhdXNlIHRoZSBpbnB1dCB0byBub3RcbiAgICAgICAgICogYmUgY2xlYXJlZC5cbiAgICAgICAgICovXG4gICAgICAgIGlmICghcHJlc3NlZElnbm9yZWRLZXkpIHtcbiAgICAgICAgICAgIHRoaXMuZGlkSW5wdXRDbGVhck9uRWRpdCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFzVmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFZhbHVlKCkubGVuZ3RoID4gMDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVuZGVycyB0aGUgaGVscGVyIHRleHQgb3IgZXJyb3IgdGV4dCB2YWx1ZXNcbiAgICAgKi9cbiAgICByZW5kZXJIaW50VGV4dCgpIHtcbiAgICAgICAgY29uc3QgeyBoZWxwZXJUZXh0LCBlcnJvclRleHQsIGhlbHBlclRleHRJZCwgZXJyb3JUZXh0SWQgfSA9IHRoaXM7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBoKFwiZGl2XCIsIHsgaWQ6IGhlbHBlclRleHRJZCwgY2xhc3M6IFwiaGVscGVyLXRleHRcIiB9LCBoZWxwZXJUZXh0KSxcbiAgICAgICAgICAgIGgoXCJkaXZcIiwgeyBpZDogZXJyb3JUZXh0SWQsIGNsYXNzOiBcImVycm9yLXRleHRcIiB9LCBlcnJvclRleHQpLFxuICAgICAgICBdO1xuICAgIH1cbiAgICBnZXRIaW50VGV4dElEKCkge1xuICAgICAgICBjb25zdCB7IGVsLCBoZWxwZXJUZXh0LCBlcnJvclRleHQsIGhlbHBlclRleHRJZCwgZXJyb3JUZXh0SWQgfSA9IHRoaXM7XG4gICAgICAgIGlmIChlbC5jbGFzc0xpc3QuY29udGFpbnMoJ2lvbi10b3VjaGVkJykgJiYgZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdpb24taW52YWxpZCcpICYmIGVycm9yVGV4dCkge1xuICAgICAgICAgICAgcmV0dXJuIGVycm9yVGV4dElkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChoZWxwZXJUZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gaGVscGVyVGV4dElkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJlbmRlckNvdW50ZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgY291bnRlciwgbWF4bGVuZ3RoLCBjb3VudGVyRm9ybWF0dGVyLCB2YWx1ZSB9ID0gdGhpcztcbiAgICAgICAgaWYgKGNvdW50ZXIgIT09IHRydWUgfHwgbWF4bGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaChcImRpdlwiLCB7IGNsYXNzOiBcImNvdW50ZXJcIiB9LCBnZXRDb3VudGVyVGV4dCh2YWx1ZSwgbWF4bGVuZ3RoLCBjb3VudGVyRm9ybWF0dGVyKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc3BvbnNpYmxlIGZvciByZW5kZXJpbmcgaGVscGVyIHRleHQsXG4gICAgICogZXJyb3IgdGV4dCwgYW5kIGNvdW50ZXIuIFRoaXMgZWxlbWVudCBzaG91bGQgb25seVxuICAgICAqIGJlIHJlbmRlcmVkIGlmIGhpbnQgdGV4dCBpcyBzZXQgb3IgY291bnRlciBpcyBlbmFibGVkLlxuICAgICAqL1xuICAgIHJlbmRlckJvdHRvbUNvbnRlbnQoKSB7XG4gICAgICAgIGNvbnN0IHsgY291bnRlciwgaGVscGVyVGV4dCwgZXJyb3JUZXh0LCBtYXhsZW5ndGggfSA9IHRoaXM7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiB1bmRlZmluZWQgYW5kIGVtcHR5IHN0cmluZyB2YWx1ZXMgc2hvdWxkXG4gICAgICAgICAqIGJlIHRyZWF0ZWQgYXMgbm90IGhhdmluZyBoZWxwZXIvZXJyb3IgdGV4dC5cbiAgICAgICAgICovXG4gICAgICAgIGNvbnN0IGhhc0hpbnRUZXh0ID0gISFoZWxwZXJUZXh0IHx8ICEhZXJyb3JUZXh0O1xuICAgICAgICBjb25zdCBoYXNDb3VudGVyID0gY291bnRlciA9PT0gdHJ1ZSAmJiBtYXhsZW5ndGggIT09IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKCFoYXNIaW50VGV4dCAmJiAhaGFzQ291bnRlcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoaChcImRpdlwiLCB7IGNsYXNzOiBcImlucHV0LWJvdHRvbVwiIH0sIHRoaXMucmVuZGVySGludFRleHQoKSwgdGhpcy5yZW5kZXJDb3VudGVyKCkpKTtcbiAgICB9XG4gICAgcmVuZGVyTGFiZWwoKSB7XG4gICAgICAgIGNvbnN0IHsgbGFiZWwgfSA9IHRoaXM7XG4gICAgICAgIHJldHVybiAoaChcImRpdlwiLCB7IGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgJ2xhYmVsLXRleHQtd3JhcHBlcic6IHRydWUsXG4gICAgICAgICAgICAgICAgJ2xhYmVsLXRleHQtd3JhcHBlci1oaWRkZW4nOiAhdGhpcy5oYXNMYWJlbCxcbiAgICAgICAgICAgIH0gfSwgbGFiZWwgPT09IHVuZGVmaW5lZCA/IGgoXCJzbG90XCIsIHsgbmFtZTogXCJsYWJlbFwiIH0pIDogaChcImRpdlwiLCB7IGNsYXNzOiBcImxhYmVsLXRleHRcIiB9LCBsYWJlbCkpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyBhbnkgY29udGVudCBwYXNzZWQgaW50byB0aGUgYGxhYmVsYCBzbG90LFxuICAgICAqIG5vdCB0aGUgPHNsb3Q+IGRlZmluaXRpb24uXG4gICAgICovXG4gICAgZ2V0IGxhYmVsU2xvdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWwucXVlcnlTZWxlY3RvcignW3Nsb3Q9XCJsYWJlbFwiXScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGB0cnVlYCBpZiBsYWJlbCBjb250ZW50IGlzIHByb3ZpZGVkXG4gICAgICogZWl0aGVyIGJ5IGEgcHJvcCBvciBhIGNvbnRlbnQuIElmIHlvdSB3YW50XG4gICAgICogdG8gZ2V0IHRoZSBwbGFpbnRleHQgdmFsdWUgb2YgdGhlIGxhYmVsIHVzZVxuICAgICAqIHRoZSBgbGFiZWxUZXh0YCBnZXR0ZXIgaW5zdGVhZC5cbiAgICAgKi9cbiAgICBnZXQgaGFzTGFiZWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxhYmVsICE9PSB1bmRlZmluZWQgfHwgdGhpcy5sYWJlbFNsb3QgIT09IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbmRlcnMgdGhlIGJvcmRlciBjb250YWluZXJcbiAgICAgKiB3aGVuIGZpbGw9XCJvdXRsaW5lXCIuXG4gICAgICovXG4gICAgcmVuZGVyTGFiZWxDb250YWluZXIoKSB7XG4gICAgICAgIGNvbnN0IG1vZGUgPSBnZXRJb25Nb2RlKHRoaXMpO1xuICAgICAgICBjb25zdCBoYXNPdXRsaW5lRmlsbCA9IG1vZGUgPT09ICdtZCcgJiYgdGhpcy5maWxsID09PSAnb3V0bGluZSc7XG4gICAgICAgIGlmIChoYXNPdXRsaW5lRmlsbCkge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgb3V0bGluZSBmaWxsIGhhcyBhIHNwZWNpYWwgb3V0bGluZVxuICAgICAgICAgICAgICogdGhhdCBhcHBlYXJzIGFyb3VuZCB0aGUgaW5wdXQgYW5kIHRoZSBsYWJlbC5cbiAgICAgICAgICAgICAqIENlcnRhaW4gc3RhY2tlZCBhbmQgZmxvYXRpbmcgbGFiZWwgcGxhY2VtZW50cyBjYXVzZSB0aGVcbiAgICAgICAgICAgICAqIGxhYmVsIHRvIHRyYW5zbGF0ZSB1cCBhbmQgY3JlYXRlIGEgXCJjdXQgb3V0XCJcbiAgICAgICAgICAgICAqIGluc2lkZSBvZiB0aGF0IGJvcmRlciBieSB1c2luZyB0aGUgbm90Y2gtc3BhY2VyIGVsZW1lbnQuXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgaChcImRpdlwiLCB7IGNsYXNzOiBcImlucHV0LW91dGxpbmUtY29udGFpbmVyXCIgfSwgaChcImRpdlwiLCB7IGNsYXNzOiBcImlucHV0LW91dGxpbmUtc3RhcnRcIiB9KSwgaChcImRpdlwiLCB7IGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnaW5wdXQtb3V0bGluZS1ub3RjaCc6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAnaW5wdXQtb3V0bGluZS1ub3RjaC1oaWRkZW4nOiAhdGhpcy5oYXNMYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgfSB9LCBoKFwiZGl2XCIsIHsgY2xhc3M6IFwibm90Y2gtc3BhY2VyXCIsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIsIHJlZjogKGVsKSA9PiAodGhpcy5ub3RjaFNwYWNlckVsID0gZWwpIH0sIHRoaXMubGFiZWwpKSwgaChcImRpdlwiLCB7IGNsYXNzOiBcImlucHV0LW91dGxpbmUtZW5kXCIgfSkpLFxuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyTGFiZWwoKSxcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIG5vdCB1c2luZyB0aGUgb3V0bGluZSBzdHlsZSxcbiAgICAgICAgICogd2UgY2FuIHJlbmRlciBqdXN0IHRoZSBsYWJlbC5cbiAgICAgICAgICovXG4gICAgICAgIHJldHVybiB0aGlzLnJlbmRlckxhYmVsKCk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBkaXNhYmxlZCwgZmlsbCwgcmVhZG9ubHksIHNoYXBlLCBpbnB1dElkLCBsYWJlbFBsYWNlbWVudCwgZWwsIGhhc0ZvY3VzLCBjbGVhcklucHV0SWNvbiB9ID0gdGhpcztcbiAgICAgICAgY29uc3QgbW9kZSA9IGdldElvbk1vZGUodGhpcyk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpO1xuICAgICAgICBjb25zdCBpbkl0ZW0gPSBob3N0Q29udGV4dCgnaW9uLWl0ZW0nLCB0aGlzLmVsKTtcbiAgICAgICAgY29uc3Qgc2hvdWxkUmVuZGVySGlnaGxpZ2h0ID0gbW9kZSA9PT0gJ21kJyAmJiBmaWxsICE9PSAnb3V0bGluZScgJiYgIWluSXRlbTtcbiAgICAgICAgY29uc3QgZGVmYXVsdENsZWFySWNvbiA9IG1vZGUgPT09ICdpb3MnID8gY2xvc2VDaXJjbGUgOiBjbG9zZVNoYXJwO1xuICAgICAgICBjb25zdCBjbGVhckljb25EYXRhID0gY2xlYXJJbnB1dEljb24gIT09IG51bGwgJiYgY2xlYXJJbnB1dEljb24gIT09IHZvaWQgMCA/IGNsZWFySW5wdXRJY29uIDogZGVmYXVsdENsZWFySWNvbjtcbiAgICAgICAgY29uc3QgaGFzVmFsdWUgPSB0aGlzLmhhc1ZhbHVlKCk7XG4gICAgICAgIGNvbnN0IGhhc1N0YXJ0RW5kU2xvdHMgPSBlbC5xdWVyeVNlbGVjdG9yKCdbc2xvdD1cInN0YXJ0XCJdLCBbc2xvdD1cImVuZFwiXScpICE9PSBudWxsO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgdGhlIGxhYmVsIGlzIHN0YWNrZWQsIGl0IHNob3VsZCBhbHdheXMgc2l0IGFib3ZlIHRoZSBpbnB1dC5cbiAgICAgICAgICogRm9yIGZsb2F0aW5nIGxhYmVscywgdGhlIGxhYmVsIHNob3VsZCBtb3ZlIGFib3ZlIHRoZSBpbnB1dCBpZlxuICAgICAgICAgKiB0aGUgaW5wdXQgaGFzIGEgdmFsdWUsIGlzIGZvY3VzZWQsIG9yIGhhcyBhbnl0aGluZyBpbiBlaXRoZXJcbiAgICAgICAgICogdGhlIHN0YXJ0IG9yIGVuZCBzbG90LlxuICAgICAgICAgKlxuICAgICAgICAgKiBJZiB0aGVyZSBpcyBjb250ZW50IGluIHRoZSBzdGFydCBzbG90LCB0aGUgbGFiZWwgd291bGQgb3ZlcmxhcFxuICAgICAgICAgKiBpdCBpZiBub3QgZm9yY2VkIHRvIGZsb2F0LiBUaGlzIGlzIGFsc28gYXBwbGllZCB0byB0aGUgZW5kIHNsb3RcbiAgICAgICAgICogYmVjYXVzZSB3aXRoIHRoZSBkZWZhdWx0IG9yIHNvbGlkIGZpbGxzLCB0aGUgaW5wdXQgaXMgbm90XG4gICAgICAgICAqIHZlcnRpY2FsbHkgY2VudGVyZWQgaW4gdGhlIGNvbnRhaW5lciwgYnV0IHRoZSBsYWJlbCBpcy4gVGhpc1xuICAgICAgICAgKiBjYXVzZXMgdGhlIHNsb3RzIGFuZCBsYWJlbCB0byBhcHBlYXIgdmVydGljYWxseSBvZmZzZXQgZnJvbSBlYWNoXG4gICAgICAgICAqIG90aGVyIHdoZW4gdGhlIGxhYmVsIGlzbid0IGZsb2F0aW5nIGFib3ZlIHRoZSBpbnB1dC4gVGhpcyBkb2Vzbid0XG4gICAgICAgICAqIGFwcGx5IHRvIHRoZSBvdXRsaW5lIGZpbGwsIGJ1dCB0aGlzIHdhcyBub3QgYWNjb3VudGVkIGZvciB0byBrZWVwXG4gICAgICAgICAqIHRoaW5ncyBjb25zaXN0ZW50LlxuICAgICAgICAgKlxuICAgICAgICAgKiBUT0RPKEZXLTU1OTIpOiBSZW1vdmUgaGFzU3RhcnRFbmRTbG90cyBjb25kaXRpb25cbiAgICAgICAgICovXG4gICAgICAgIGNvbnN0IGxhYmVsU2hvdWxkRmxvYXQgPSBsYWJlbFBsYWNlbWVudCA9PT0gJ3N0YWNrZWQnIHx8IChsYWJlbFBsYWNlbWVudCA9PT0gJ2Zsb2F0aW5nJyAmJiAoaGFzVmFsdWUgfHwgaGFzRm9jdXMgfHwgaGFzU3RhcnRFbmRTbG90cykpO1xuICAgICAgICByZXR1cm4gKGgoSG9zdCwgeyBrZXk6ICc0MWIyNTI2NjI3ZTdkMjc3M2E4MGYwMTFiMTIzMjg0MjAzYTcxY2EwJywgY2xhc3M6IGNyZWF0ZUNvbG9yQ2xhc3Nlcyh0aGlzLmNvbG9yLCB7XG4gICAgICAgICAgICAgICAgW21vZGVdOiB0cnVlLFxuICAgICAgICAgICAgICAgICdoYXMtdmFsdWUnOiBoYXNWYWx1ZSxcbiAgICAgICAgICAgICAgICAnaGFzLWZvY3VzJzogaGFzRm9jdXMsXG4gICAgICAgICAgICAgICAgJ2xhYmVsLWZsb2F0aW5nJzogbGFiZWxTaG91bGRGbG9hdCxcbiAgICAgICAgICAgICAgICBbYGlucHV0LWZpbGwtJHtmaWxsfWBdOiBmaWxsICE9PSB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgW2BpbnB1dC1zaGFwZS0ke3NoYXBlfWBdOiBzaGFwZSAhPT0gdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIFtgaW5wdXQtbGFiZWwtcGxhY2VtZW50LSR7bGFiZWxQbGFjZW1lbnR9YF06IHRydWUsXG4gICAgICAgICAgICAgICAgJ2luLWl0ZW0nOiBpbkl0ZW0sXG4gICAgICAgICAgICAgICAgJ2luLWl0ZW0tY29sb3InOiBob3N0Q29udGV4dCgnaW9uLWl0ZW0uaW9uLWNvbG9yJywgdGhpcy5lbCksXG4gICAgICAgICAgICAgICAgJ2lucHV0LWRpc2FibGVkJzogZGlzYWJsZWQsXG4gICAgICAgICAgICB9KSB9LCBoKFwibGFiZWxcIiwgeyBrZXk6ICc5YWIwNzgzNjNlMzI1MjgxMDJiNDQxYWQxNzkxZDgzZjg2ZmRjYmRjJywgY2xhc3M6IFwiaW5wdXQtd3JhcHBlclwiLCBodG1sRm9yOiBpbnB1dElkLCBvbkNsaWNrOiB0aGlzLm9uTGFiZWxDbGljayB9LCB0aGlzLnJlbmRlckxhYmVsQ29udGFpbmVyKCksIGgoXCJkaXZcIiwgeyBrZXk6ICdlMzRiNTk0OTgwZWM2MmU0YzYxOGU4MjdmYWRmNzY2OWEzOWFkMGQ4JywgY2xhc3M6IFwibmF0aXZlLXdyYXBwZXJcIiwgb25DbGljazogdGhpcy5vbkxhYmVsQ2xpY2sgfSwgaChcInNsb3RcIiwgeyBrZXk6ICcxMmRjMDRlYWQ1NTAyZTllNTczNjI0MGU5MThiZjkzMzFiZjdiNWQ5JywgbmFtZTogXCJzdGFydFwiIH0pLCBoKFwiaW5wdXRcIiwgT2JqZWN0LmFzc2lnbih7IGtleTogJ2RmMzU2ZWI0Y2VkMjMxMDliMmMwMjQyZjM2ZGMwNDNhYmE4NzgyZDYnLCBjbGFzczogXCJuYXRpdmUtaW5wdXRcIiwgcmVmOiAoaW5wdXQpID0+ICh0aGlzLm5hdGl2ZUlucHV0ID0gaW5wdXQpLCBpZDogaW5wdXRJZCwgZGlzYWJsZWQ6IGRpc2FibGVkLCBhdXRvQ2FwaXRhbGl6ZTogdGhpcy5hdXRvY2FwaXRhbGl6ZSwgYXV0b0NvbXBsZXRlOiB0aGlzLmF1dG9jb21wbGV0ZSwgYXV0b0NvcnJlY3Q6IHRoaXMuYXV0b2NvcnJlY3QsIGF1dG9Gb2N1czogdGhpcy5hdXRvZm9jdXMsIGVudGVyS2V5SGludDogdGhpcy5lbnRlcmtleWhpbnQsIGlucHV0TW9kZTogdGhpcy5pbnB1dG1vZGUsIG1pbjogdGhpcy5taW4sIG1heDogdGhpcy5tYXgsIG1pbkxlbmd0aDogdGhpcy5taW5sZW5ndGgsIG1heExlbmd0aDogdGhpcy5tYXhsZW5ndGgsIG11bHRpcGxlOiB0aGlzLm11bHRpcGxlLCBuYW1lOiB0aGlzLm5hbWUsIHBhdHRlcm46IHRoaXMucGF0dGVybiwgcGxhY2Vob2xkZXI6IHRoaXMucGxhY2Vob2xkZXIgfHwgJycsIHJlYWRPbmx5OiByZWFkb25seSwgcmVxdWlyZWQ6IHRoaXMucmVxdWlyZWQsIHNwZWxsY2hlY2s6IHRoaXMuc3BlbGxjaGVjaywgc3RlcDogdGhpcy5zdGVwLCB0eXBlOiB0aGlzLnR5cGUsIHZhbHVlOiB2YWx1ZSwgb25JbnB1dDogdGhpcy5vbklucHV0LCBvbkNoYW5nZTogdGhpcy5vbkNoYW5nZSwgb25CbHVyOiB0aGlzLm9uQmx1ciwgb25Gb2N1czogdGhpcy5vbkZvY3VzLCBvbktleURvd246IHRoaXMub25LZXlkb3duLCBvbkNvbXBvc2l0aW9uc3RhcnQ6IHRoaXMub25Db21wb3NpdGlvblN0YXJ0LCBvbkNvbXBvc2l0aW9uZW5kOiB0aGlzLm9uQ29tcG9zaXRpb25FbmQsIFwiYXJpYS1kZXNjcmliZWRieVwiOiB0aGlzLmdldEhpbnRUZXh0SUQoKSwgXCJhcmlhLWludmFsaWRcIjogdGhpcy5nZXRIaW50VGV4dElEKCkgPT09IHRoaXMuZXJyb3JUZXh0SWQgfSwgdGhpcy5pbmhlcml0ZWRBdHRyaWJ1dGVzKSksIHRoaXMuY2xlYXJJbnB1dCAmJiAhcmVhZG9ubHkgJiYgIWRpc2FibGVkICYmIChoKFwiYnV0dG9uXCIsIHsga2V5OiAnZjc5ZjY4Y2FiY2Q0ZWE5OTQxOTMzMTE3NGEzNzc4MjdkYjBjMDc0MScsIFwiYXJpYS1sYWJlbFwiOiBcInJlc2V0XCIsIHR5cGU6IFwiYnV0dG9uXCIsIGNsYXNzOiBcImlucHV0LWNsZWFyLWljb25cIiwgb25Qb2ludGVyRG93bjogKGV2KSA9PiB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogVGhpcyBwcmV2ZW50cyBtb2JpbGUgYnJvd3NlcnMgZnJvbVxuICAgICAgICAgICAgICAgICAqIGJsdXJyaW5nIHRoZSBpbnB1dCB3aGVuIHRoZSBjbGVhclxuICAgICAgICAgICAgICAgICAqIGJ1dHRvbiBpcyBhY3RpdmF0ZWQuXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH0sIG9uQ2xpY2s6IHRoaXMuY2xlYXJUZXh0SW5wdXQgfSwgaChcImlvbi1pY29uXCIsIHsga2V5OiAnMjM3ZWMwN2VjMmUxMGYwODgxOGEzMzJiYjU5NjU3OGMyYzQ5Zjc3MCcsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIsIGljb246IGNsZWFySWNvbkRhdGEgfSkpKSwgaChcInNsb3RcIiwgeyBrZXk6ICcxZjBhMzYyNGFhM2U4ZGMzYzMwN2E2NzYyMjMwYWI2OTg3NjhhNWU1JywgbmFtZTogXCJlbmRcIiB9KSksIHNob3VsZFJlbmRlckhpZ2hsaWdodCAmJiBoKFwiZGl2XCIsIHsga2V5OiAnOGE4Y2JiODI2OTVhNzIyYTAwMTBiNTNkZDBiMWYxZjk3NTM0YTIwYicsIGNsYXNzOiBcImlucHV0LWhpZ2hsaWdodFwiIH0pKSwgdGhpcy5yZW5kZXJCb3R0b21Db250ZW50KCkpKTtcbiAgICB9XG4gICAgZ2V0IGVsKCkgeyByZXR1cm4gZ2V0RWxlbWVudCh0aGlzKTsgfVxuICAgIHN0YXRpYyBnZXQgd2F0Y2hlcnMoKSB7IHJldHVybiB7XG4gICAgICAgIFwiZGVib3VuY2VcIjogW1wiZGVib3VuY2VDaGFuZ2VkXCJdLFxuICAgICAgICBcInR5cGVcIjogW1wib25UeXBlQ2hhbmdlXCJdLFxuICAgICAgICBcInZhbHVlXCI6IFtcInZhbHVlQ2hhbmdlZFwiXSxcbiAgICAgICAgXCJkaXJcIjogW1wib25EaXJDaGFuZ2VkXCJdXG4gICAgfTsgfVxufTtcbmxldCBpbnB1dElkcyA9IDA7XG5JbnB1dC5zdHlsZSA9IHtcbiAgICBpb3M6IGlucHV0SW9zQ3NzLFxuICAgIG1kOiBpbnB1dE1kQ3NzXG59O1xuXG5leHBvcnQgeyBJbnB1dCBhcyBpb25faW5wdXQgfTtcbiJdLCJuYW1lcyI6WyJyIiwicmVnaXN0ZXJJbnN0YW5jZSIsImQiLCJjcmVhdGVFdmVudCIsIm4iLCJmb3JjZVVwZGF0ZSIsImgiLCJlIiwiZ2V0SW9uTW9kZSIsImoiLCJIb3N0IiwiayIsImdldEVsZW1lbnQiLCJjIiwiY3JlYXRlTm90Y2hDb250cm9sbGVyIiwiZGVib3VuY2VFdmVudCIsImkiLCJpbmhlcml0QXJpYUF0dHJpYnV0ZXMiLCJiIiwiaW5oZXJpdEF0dHJpYnV0ZXMiLCJjb21wb25lbnRPblJlYWR5IiwiY3JlYXRlU2xvdE11dGF0aW9uQ29udHJvbGxlciIsImciLCJnZXRDb3VudGVyVGV4dCIsImhvc3RDb250ZXh0IiwiY3JlYXRlQ29sb3JDbGFzc2VzIiwiY2xvc2VDaXJjbGUiLCJjbG9zZVNoYXJwIiwiaW5wdXRJb3NDc3MiLCJpbnB1dE1kQ3NzIiwiSW5wdXQiLCJjb25zdHJ1Y3RvciIsImhvc3RSZWYiLCJpb25JbnB1dCIsImlvbkNoYW5nZSIsImlvbkJsdXIiLCJpb25Gb2N1cyIsImlucHV0SWQiLCJpbnB1dElkcyIsImhlbHBlclRleHRJZCIsImVycm9yVGV4dElkIiwiaW5oZXJpdGVkQXR0cmlidXRlcyIsImlzQ29tcG9zaW5nIiwiZGlkSW5wdXRDbGVhck9uRWRpdCIsImhhc0ZvY3VzIiwiYXV0b2NhcGl0YWxpemUiLCJhdXRvY29tcGxldGUiLCJhdXRvY29ycmVjdCIsImF1dG9mb2N1cyIsImNsZWFySW5wdXQiLCJjb3VudGVyIiwiZGlzYWJsZWQiLCJsYWJlbFBsYWNlbWVudCIsIm5hbWUiLCJyZWFkb25seSIsInJlcXVpcmVkIiwic3BlbGxjaGVjayIsInR5cGUiLCJ2YWx1ZSIsIm9uSW5wdXQiLCJldiIsImlucHV0IiwidGFyZ2V0IiwiZW1pdElucHV0Q2hhbmdlIiwib25DaGFuZ2UiLCJlbWl0VmFsdWVDaGFuZ2UiLCJvbkJsdXIiLCJmb2N1c2VkVmFsdWUiLCJlbWl0Iiwib25Gb2N1cyIsIm9uS2V5ZG93biIsImNoZWNrQ2xlYXJPbkVkaXQiLCJvbkNvbXBvc2l0aW9uU3RhcnQiLCJvbkNvbXBvc2l0aW9uRW5kIiwiY2xlYXJUZXh0SW5wdXQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsInNldEZvY3VzIiwib25MYWJlbENsaWNrIiwiY3VycmVudFRhcmdldCIsImRlYm91bmNlQ2hhbmdlZCIsImRlYm91bmNlIiwib3JpZ2luYWxJb25JbnB1dCIsInVuZGVmaW5lZCIsIm9uVHlwZUNoYW5nZSIsInBhc3N3b3JkVG9nZ2xlIiwiZWwiLCJxdWVyeVNlbGVjdG9yIiwidmFsdWVDaGFuZ2VkIiwibmF0aXZlSW5wdXQiLCJnZXRWYWx1ZSIsIm9uRGlyQ2hhbmdlZCIsIm5ld1ZhbHVlIiwiT2JqZWN0IiwiYXNzaWduIiwiZGlyIiwib25DbGlja0NhcHR1cmUiLCJjbGljayIsImNvbXBvbmVudFdpbGxMb2FkIiwiY29ubmVjdGVkQ2FsbGJhY2siLCJzbG90TXV0YXRpb25Db250cm9sbGVyIiwibm90Y2hDb250cm9sbGVyIiwibm90Y2hTcGFjZXJFbCIsImxhYmVsU2xvdCIsImRvY3VtZW50IiwiZGlzcGF0Y2hFdmVudCIsIkN1c3RvbUV2ZW50IiwiZGV0YWlsIiwiY29tcG9uZW50RGlkTG9hZCIsImNvbXBvbmVudERpZFJlbmRlciIsIl9hIiwiY2FsY3VsYXRlTm90Y2hXaWR0aCIsImRpc2Nvbm5lY3RlZENhbGxiYWNrIiwiZGVzdHJveSIsIl90aGlzIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJmb2N1cyIsImdldElucHV0RWxlbWVudCIsIl90aGlzMiIsIlByb21pc2UiLCJyZXNvbHZlIiwiZXZlbnQiLCJ0b1N0cmluZyIsInNob3VsZENsZWFyT25FZGl0IiwiY2xlYXJPbkVkaXQiLCJJR05PUkVEX0tFWVMiLCJwcmVzc2VkSWdub3JlZEtleSIsImluY2x1ZGVzIiwia2V5IiwiaGFzVmFsdWUiLCJsZW5ndGgiLCJyZW5kZXJIaW50VGV4dCIsImhlbHBlclRleHQiLCJlcnJvclRleHQiLCJpZCIsImNsYXNzIiwiZ2V0SGludFRleHRJRCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwicmVuZGVyQ291bnRlciIsIm1heGxlbmd0aCIsImNvdW50ZXJGb3JtYXR0ZXIiLCJyZW5kZXJCb3R0b21Db250ZW50IiwiaGFzSGludFRleHQiLCJoYXNDb3VudGVyIiwicmVuZGVyTGFiZWwiLCJsYWJlbCIsImhhc0xhYmVsIiwicmVuZGVyTGFiZWxDb250YWluZXIiLCJtb2RlIiwiaGFzT3V0bGluZUZpbGwiLCJmaWxsIiwicmVmIiwicmVuZGVyIiwic2hhcGUiLCJjbGVhcklucHV0SWNvbiIsImluSXRlbSIsInNob3VsZFJlbmRlckhpZ2hsaWdodCIsImRlZmF1bHRDbGVhckljb24iLCJjbGVhckljb25EYXRhIiwiaGFzU3RhcnRFbmRTbG90cyIsImxhYmVsU2hvdWxkRmxvYXQiLCJjb2xvciIsImh0bWxGb3IiLCJvbkNsaWNrIiwiYXV0b0NhcGl0YWxpemUiLCJhdXRvQ29tcGxldGUiLCJhdXRvQ29ycmVjdCIsImF1dG9Gb2N1cyIsImVudGVyS2V5SGludCIsImVudGVya2V5aGludCIsImlucHV0TW9kZSIsImlucHV0bW9kZSIsIm1pbiIsIm1heCIsIm1pbkxlbmd0aCIsIm1pbmxlbmd0aCIsIm1heExlbmd0aCIsIm11bHRpcGxlIiwicGF0dGVybiIsInBsYWNlaG9sZGVyIiwicmVhZE9ubHkiLCJzdGVwIiwib25LZXlEb3duIiwib25Db21wb3NpdGlvbnN0YXJ0Iiwib25Db21wb3NpdGlvbmVuZCIsIm9uUG9pbnRlckRvd24iLCJpY29uIiwid2F0Y2hlcnMiLCJzdHlsZSIsImlvcyIsIm1kIiwiaW9uX2lucHV0Il0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyIsInhfZ29vZ2xlX2lnbm9yZUxpc3QiOlswXX0=