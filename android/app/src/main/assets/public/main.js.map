{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/ble.service.ts","./src/app/services/devices.service.ts","./src/app/services/lock-data.service.ts","./src/app/util/dynamic-queue.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./node_modules/@stencil/core/internal/client/ lazy ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ strict namespace object"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    loadChildren: () => import('./home/home.module').then( m => m.HomePageModule)\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\nimport { Platform } from '@ionic/angular';\r\nimport { SplashScreen } from '@capacitor/splash-screen';\r\nimport { StatusBar } from '@capacitor/status-bar';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent {\r\n  constructor(\r\n    private platform: Platform\r\n  ) {\r\n    this.initializeApp();\r\n  }\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then((val) => {\r\n      StatusBar.hide();\r\n      SplashScreen.hide();\r\n      let clickyClasses = ['click-sounds'];\r\n      // @ts-ignore\r\n      window.nativeclick.watch(clickyClasses);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\n\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { BLE } from '@ionic-native/ble/ngx';\r\nimport { BleService } from './services/ble.service';\r\nimport { DevicesService } from './services/devices.service';\r\nimport { LockDataService } from './services/lock-data.service';\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        IonicModule.forRoot(),\r\n        AppRoutingModule\r\n    ],\r\n    providers: [\r\n        BLE,\r\n        BleService,\r\n        DevicesService,\r\n        LockDataService,\r\n        AndroidPermissions,\r\n        { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport {\r\n  DeviceInfo,\r\n  OperatingSystem,\r\n  Device as System,\r\n} from '@capacitor/device';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\r\nimport { BLE } from '@ionic-native/ble/ngx';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { DynamicQueue } from '../util/dynamic-queue';\r\nimport { Device } from './devices.service';\r\nimport { LockParameters } from './lock-data.service';\r\n\r\nexport interface LockStatus {\r\n  response: number;\r\n  responseMsg?: string;\r\n  extraBytes: number;\r\n  isStatus: boolean;\r\n  isError?: boolean;\r\n  verified: any;\r\n  alarmOn: any;\r\n  buzzerOn: any;\r\n  openCloseState?: number;\r\n  hookState?: number;\r\n  voltageValue?: number;\r\n  lockId?: number;\r\n  randData?: number;\r\n  error?: string;\r\n}\r\n\r\nexport interface VerifyOutcome {\r\n  verified: boolean;\r\n  isError: boolean;\r\n  msg: string;\r\n}\r\n\r\nconst CMD = 1;\r\nconst ASK = 2;\r\nconst EXT = 3;\r\nconst SUM = 5;\r\nconst DATA = 6;\r\nconst RANDDATA = 14;\r\nconst CMD_SystemExit = 'sleep';\r\nconst CMD_SystemInit = 'initialize';\r\nexport const ASK_correct = 0x10;\r\nexport const ASK_failure = 0x11;\r\nexport const ASK_timeout = 0x12;\r\nexport const ASK_unknown = 0x13;\r\nexport const ASK_checksum = 0x16;\r\nexport const ASK_password_not_verified = 0x26;\r\nexport const ASK_failed_verification = 0x27;\r\nexport const ResponseMap = {\r\n  [ASK_correct]: 'Correct operation',\r\n  [ASK_failure]: 'Wrong operation',\r\n  [ASK_timeout]: 'Timeout',\r\n  [ASK_unknown]: 'Unknown command',\r\n  [ASK_checksum]: 'Fail checksum',\r\n  [ASK_password_not_verified]: 'Pairing password is not verified',\r\n  [ASK_failed_verification]: 'Password failed verification',\r\n};\r\nexport const IsLocked = 0x00;\r\nexport const IsUnhooked = 0x00;\r\nconst IsHooked = ~IsUnhooked;\r\nexport const InactiveDisconnectTime = 300;\r\nconst Android11 = '11';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BleService implements OnDestroy {\r\n  platform!: OperatingSystem;\r\n  osDataRequest!: Promise<DeviceInfo>;\r\n  osVersion!: string;\r\n  deviceId: string | null = null;\r\n\r\n  connectSubscriber: Subscription | null = null;\r\n  notificationSubscriber: Subscription | null = null;\r\n  connectRepeater: Subject<any> | null = null;\r\n  opQueue: DynamicQueue = new DynamicQueue();\r\n  notificationHandler: ((data: any) => void) | null = null;\r\n  notificationError!: (error: any) => void;\r\n  messageHandler: any = null;\r\n  alertHandler: any = null;\r\n  writeLockBusy = false;\r\n\r\n  LongServiceUuid = '0000fff0-0000-1000-8000-00805f9b34fb';\r\n  ServiceUuid: any;\r\n  LongStatusUuid = '0000fff1-0000-1000-8000-00805f9b34fb';\r\n  StatusUuid: any;\r\n  LongCommandUuid = '0000fff2-0000-1000-8000-00805f9b34fb';\r\n  CommandUuid: any;\r\n  LongConfigUuid = '0000fff3-0000-1000-8000-00805f9b34fb';\r\n  ConfigUuid: any;\r\n\r\n  keepAliveInterval: any = null;\r\n  lastConnectedDevice: Device | null = null;\r\n  reconnectAttempts: number = 0;\r\n  maxReconnectAttempts: number = 5;\r\n\r\n  constructor(\r\n    private androidPermissions: AndroidPermissions,\r\n    private ble: BLE\r\n  ) {\r\n    if (!androidPermissions.PERMISSION.BLUETOOTH_CONNECT) {\r\n      androidPermissions.PERMISSION.BLUETOOTH_CONNECT =\r\n        'android.permission.BLUETOOTH_CONNECT';\r\n    }\r\n    if (!androidPermissions.PERMISSION.BLUETOOTH_SCAN) {\r\n      androidPermissions.PERMISSION.BLUETOOTH_SCAN =\r\n        'android.permission.BLUETOOTH_SCAN';\r\n    }\r\n  }\r\n\r\n  setup(_messageHandler: any, _alertHandler: any) {\r\n    console.log('ble: activate');\r\n    if (!_messageHandler || !_alertHandler) {\r\n      throw 'handlers cannot be null';\r\n    }\r\n    this.osDataRequest = System.getInfo();\r\n    this.messageHandler = _messageHandler;\r\n    this.alertHandler = _alertHandler;\r\n    if (!this.ble) {\r\n      let standin = {\r\n        isEnabled: (a: any, b: any) => Promise.reject(),\r\n        enable: () => Promise.reject(),\r\n        startScan: () => null,\r\n        stopScan: () => null,\r\n      };\r\n      this.ble = standin as any;\r\n      alert(\r\n        'Something is amiss with the Bluetooth plugin\\nCommunication disabled!'\r\n      );\r\n    } else {\r\n      let q = this.ble;\r\n      if (!('enable' in q)) {\r\n        this.ble.enable = this.iosEnable.bind(this);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  async isAvailable(): Promise<boolean> {\r\n    let available = false;\r\n    this.messageHandler('checking availability');\r\n    try {\r\n      const deviceInfo = await this.osDataRequest;\r\n      this.platform = deviceInfo.operatingSystem;\r\n      this.osVersion = deviceInfo.osVersion;\r\n      await this.ble.isEnabled();\r\n      this.messageHandler('ble: is enabled');\r\n      available = true;\r\n    } catch (e) {\r\n      try {\r\n        await this.ble.enable();\r\n        this.messageHandler('ble: successfully enabled');\r\n        available = true;\r\n      } catch (err) {\r\n        this.messageHandler('ble: Bluetooth enable not successful: ' + err);\r\n      }\r\n    }\r\n    if (this.platform == 'android' && this.osVersion <= Android11) {\r\n      let result, bluetooth, location;\r\n      if (available) {\r\n        this.messageHandler('ble: check permissions');\r\n        try {\r\n          result = await this.androidPermissions.checkPermission(\r\n            this.androidPermissions.PERMISSION.BLUETOOTH\r\n          );\r\n          bluetooth = result.hasPermission;\r\n          result = await this.androidPermissions.checkPermission(\r\n            this.androidPermissions.PERMISSION.ACCESS_FINE_LOCATION\r\n          );\r\n          location = result.hasPermission;\r\n          if (!bluetooth || !location) {\r\n            await this.alertHandler(\r\n              'Bluetooth and Location permission are both required to scan for locks.',\r\n              true\r\n            );\r\n          }\r\n        } catch (err) {\r\n          alert('Cannot check Bluetooth permission: ' + JSON.stringify(err));\r\n          available = false;\r\n        }\r\n      }\r\n      if (available && !bluetooth) {\r\n        this.messageHandler('ble: request Bluetooth permission');\r\n        try {\r\n          result = await this.androidPermissions.requestPermission(\r\n            this.androidPermissions.PERMISSION.BLUETOOTH\r\n          );\r\n          this.messageHandler('ble: request permission done');\r\n          available = result.hasPermission;\r\n        } catch (err) {\r\n          alert(err);\r\n          available = false;\r\n        }\r\n      }\r\n      if (available && !location) {\r\n        this.messageHandler('ble: request location permission');\r\n        try {\r\n          result = await this.androidPermissions.requestPermission(\r\n            this.androidPermissions.PERMISSION.ACCESS_FINE_LOCATION\r\n          );\r\n          this.messageHandler('ble: request permission done');\r\n          available = result.hasPermission;\r\n        } catch (err) {\r\n          alert(err);\r\n          available = false;\r\n        }\r\n      }\r\n      this.messageHandler(\r\n        `ble: after requests, bluetooth allowed = ${bluetooth}, location allowed = ${location}`\r\n      );\r\n    }\r\n    if (this.platform == 'android' && this.osVersion > Android11) {\r\n      let result, scan, connect;\r\n      if (available) {\r\n        this.messageHandler('ble: check permissions');\r\n        try {\r\n          result = await this.androidPermissions.checkPermission(\r\n            this.androidPermissions.PERMISSION.BLUETOOTH_SCAN\r\n          );\r\n          scan = result.hasPermission;\r\n          result = await this.androidPermissions.checkPermission(\r\n            this.androidPermissions.PERMISSION.BLUETOOTH_CONNECT\r\n          );\r\n          connect = result.hasPermission;\r\n          this.messageHandler(\r\n            `ble: checking permission, scan allowed = ${scan}, connect allowed = ${connect}`\r\n          );\r\n          if (!scan || !connect) {\r\n            await this.alertHandler(\r\n              'Bluetooth permissions are required to scan for locks.',\r\n              true\r\n            );\r\n          }\r\n        } catch (err) {\r\n          alert('Cannot check Bluetooth permission: ' + JSON.stringify(err));\r\n          available = false;\r\n        }\r\n      }\r\n      if (available && !scan) {\r\n        this.messageHandler('bluetooth: check scan permission');\r\n        try {\r\n          result = await this.androidPermissions.requestPermission(\r\n            this.androidPermissions.PERMISSION.BLUETOOTH_SCAN\r\n          );\r\n          scan = result.hasPermission;\r\n          available = result.hasPermission;\r\n        } catch (err) {\r\n          alert(err);\r\n          available = false;\r\n        }\r\n      }\r\n      if (available && !connect) {\r\n        this.messageHandler('bluetooth: check connect permission');\r\n        try {\r\n          result = await this.androidPermissions.requestPermission(\r\n            this.androidPermissions.PERMISSION.BLUETOOTH_CONNECT\r\n          );\r\n          connect = result.hasPermission;\r\n          available = result.hasPermission;\r\n        } catch (err) {\r\n          alert(err);\r\n          available = false;\r\n        }\r\n      }\r\n      this.messageHandler(\r\n        `ble: after requests, scan allowed = ${scan}, connect allowed = ${connect}`\r\n      );\r\n    }\r\n    return available;\r\n  }\r\n\r\n  iosEnable(): Promise<any> {\r\n    const that = this;\r\n    this.messageHandler('iosEnable() begins');\r\n\r\n    let notifier: Observable<any> | null = this.ble.startStateNotifications();\r\n    if (notifier === null) {\r\n      return Promise.reject('missing notifier');\r\n    }\r\n\r\n    this.alertHandler(\r\n      'Bluetooth is off.  Please turn it on to connect to a lock.'\r\n    );\r\n    return new Promise((resolve, reject) => {\r\n      let stateWatcher: Subscription | null = null;\r\n      const timer = setTimeout(() => {\r\n        reject('time expired');\r\n      }, 120 * 1000);\r\n\r\n      stateWatcher = notifier!.subscribe((state) => {\r\n        that.messageHandler(`new Bluetooth state: ${state}`);\r\n        let handled = false;\r\n        if (state === 'on') {\r\n          resolve('ok');\r\n          handled = true;\r\n        } else if (state === 'unauthorized' || state === 'unsupported') {\r\n          reject('invalid state: ' + state);\r\n          handled = true;\r\n        }\r\n        if (handled) {\r\n          clearTimeout(timer);\r\n          stateWatcher!.unsubscribe();\r\n          stateWatcher = null;\r\n          notifier = null;\r\n          that.ble\r\n            .stopStateNotifications()\r\n            .then(() => {\r\n              that.messageHandler('change notifications ended');\r\n            })\r\n            .catch((reason) => {\r\n              that.messageHandler('change notifications error: ' + reason);\r\n            });\r\n          that.alertHandler(null);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  startScan(services: string[]): Observable<any> {\r\n    return this.ble.startScan(services);\r\n  }\r\n\r\n  stopScan(): Promise<any> {\r\n    return this.ble.stopScan();\r\n  }\r\n\r\n  connectTo(scanData: Device): Observable<string> {\r\n    const that = this;\r\n    this.deviceId = null;\r\n    console.log('ble connecting to: ' + scanData.id);\r\n    this.selectUuids(scanData);\r\n    this.connectRepeater = new Subject<any>();\r\n    let obs: Observable<any> = this.ble.connect(scanData.id);\r\n    let notifier: Observable<any> | null = null;\r\n    this.connectSubscriber = obs.subscribe(\r\n      async (peripheralData: any) => {\r\n        that.messageHandler(\r\n          `bluetooth connect succeeded: name ${peripheralData.name}, id ${peripheralData.id}`\r\n        );\r\n        that.deviceId = scanData.id;\r\n        that.connectRepeater!.next(peripheralData);\r\n        that.opQueue.flush();\r\n        notifier = that.ble.startNotification(\r\n          scanData.id,\r\n          that.ServiceUuid,\r\n          that.StatusUuid\r\n        );\r\n        let notificationSubscriber = notifier.subscribe({\r\n          next: (value) =>\r\n            that.notificationHandler && that.notificationHandler(value),\r\n          error: (error) => that.notificationError(error),\r\n        });\r\n        that.connectSubscriber!.add(notificationSubscriber);\r\n        that.startKeepAlive(scanData);\r\n      },\r\n      async (result) => {\r\n        result.connectFailed = that.deviceId === null;\r\n        that.messageHandler(\r\n          'bluetooth disconnected' +\r\n            (result.connectFailed ? ' prematurely:' : ':') +\r\n            JSON.stringify(result)\r\n        );\r\n        that.connectRepeater!.error(result);\r\n        that.connectSubscriber!.unsubscribe();\r\n        that.connectSubscriber = null;\r\n        if (!result.connectFailed) {\r\n          that.purgeConnection(that.deviceId!);\r\n        }\r\n        that.deviceId = null;\r\n        that.stopKeepAlive();\r\n        that.tryReconnect();\r\n      }\r\n    );\r\n    return this.connectRepeater;\r\n  }\r\n\r\n  private readableHexToBuffer(spaceSeparatedHex: string): Uint8Array {\r\n    let n: any[] = [];\r\n    spaceSeparatedHex.split(' ').forEach((x) => {\r\n      n.push(parseInt(x, 16));\r\n    });\r\n    return Uint8Array.from(n);\r\n  }\r\n\r\n  private bufferToReadableHex(buffer: Uint8Array): string {\r\n    return Array.from(buffer)\r\n      .map((b) => b.toString(16).padStart(2, '0'))\r\n      .join(' ');\r\n  }\r\n\r\n  isLockBusy() {\r\n    return this.writeLockBusy;\r\n  }\r\n\r\n  private writeToLock(\r\n    commandName: string,\r\n    command: Uint8Array\r\n  ): Promise<LockStatus> {\r\n    let pendingResolve: any;\r\n    let pendingReject: any;\r\n    let notificationInjector: any = null;\r\n\r\n    if (this.deviceId === null) {\r\n      this.messageHandler(`Tried to send \"${commandName}\" when disconnected`);\r\n      return Promise.reject('Disconnected - Command refused');\r\n    }\r\n    if (this.writeLockBusy === true) {\r\n      this.messageHandler(\r\n        `Tried to issue \"${commandName}\" before previous operation complete`\r\n      );\r\n      return Promise.reject('writeToLock - execution overlap');\r\n    }\r\n    if (this.notificationHandler != null) {\r\n      this.messageHandler(\r\n        `Tried to issue \"${commandName} while waiting for notification`\r\n      );\r\n      return Promise.reject('writeToLock - notification incomplete');\r\n    }\r\n    this.writeLockBusy = true;\r\n    command[SUM] = 0;\r\n    command[SUM] = command.reduce(\r\n      (previous, current) => (previous + current) & 0xff\r\n    );\r\n    return new Promise<LockStatus>(async (resolve, reject) => {\r\n      pendingResolve = resolve;\r\n      pendingReject = reject;\r\n      try {\r\n        this.messageHandler(\r\n          `writeToLock \"${commandName}\" : ${this.bufferToReadableHex(command)}`\r\n        );\r\n        this.notificationHandler = responseHandler.bind(this);\r\n        this.notificationError = errorHandler.bind(this);\r\n        await this.ble.write(\r\n          this.deviceId!,\r\n          this.ServiceUuid,\r\n          this.CommandUuid,\r\n          command.buffer as ArrayBuffer\r\n        );\r\n        if (commandName === 'setAlarmState') {\r\n          notificationInjector = setTimeout(() => {\r\n            notificationInjector = null;\r\n            let fakeAlarmResponse = [\r\n              this.readableHexToBuffer('F5 74 10 00 5F D8 FF'),\r\n              0,\r\n            ];\r\n            responseHandler.bind(this)(fakeAlarmResponse);\r\n          }, 400);\r\n        }\r\n      } catch (error) {\r\n        alert('Failed to write data to device:' + JSON.stringify(error));\r\n        reject('write failed');\r\n        this.writeLockBusy = false;\r\n      }\r\n    });\r\n\r\n    function responseHandler(this: BleService, data: any) {\r\n      try {\r\n        if (notificationInjector) {\r\n          clearTimeout(notificationInjector);\r\n        }\r\n        if (commandName === CMD_SystemExit) {\r\n          pendingResolve({ response: ASK_correct } as LockStatus);\r\n        } else {\r\n          let output = 'No data';\r\n          if (data == null) {\r\n            throw 'No data returned from notification';\r\n          }\r\n          let buffer: ArrayBuffer = data[0];\r\n          if (buffer == null) {\r\n            throw 'No buffer returned from notification()';\r\n          }\r\n          const bytes = new Uint8Array(buffer);\r\n          output = 'result: ' + this.bufferToReadableHex(bytes);\r\n          if (bytes.length < DATA) {\r\n            this.messageHandler(output);\r\n            throw 'Truncated response ' + bytes;\r\n          }\r\n          let S: LockStatus = {\r\n            response: bytes[ASK],\r\n            extraBytes: bytes[EXT],\r\n            isStatus: false,\r\n            isError: bytes[ASK] > 0x10 && bytes[ASK] < 0x26,\r\n            verified: false,\r\n            alarmOn: null,\r\n            buzzerOn: null,\r\n          };\r\n          S.responseMsg = ResponseMap[S.response as keyof typeof ResponseMap];\r\n          if (!S.responseMsg) {\r\n            S.responseMsg = 'Unknown ' + S.response;\r\n          }\r\n          switch (bytes[CMD]) {\r\n            case 0x0f:\r\n              if (bytes[ASK] === ASK_correct) {\r\n                S.verified = true;\r\n                output += ', verified';\r\n              } else {\r\n                output +=\r\n                  ', ' +\r\n                  (!S.isError\r\n                    ? 'unverified, returned '\r\n                    : 'invalid response: ') +\r\n                  S.responseMsg;\r\n              }\r\n              break;\r\n            case 0x60:\r\n              S.isStatus = true;\r\n              S.openCloseState = bytes[DATA];\r\n              S.hookState = bytes[DATA + 1];\r\n              S.voltageValue = bytes[8] * 256 + bytes[9];\r\n              S.lockId =\r\n                (bytes[10] << 24) +\r\n                (bytes[11] << 16) +\r\n                (bytes[12] << 8) +\r\n                bytes[13];\r\n              S.randData = bytes[RANDDATA];\r\n              break;\r\n            case 0x74:\r\n              S.alarmOn = bytes[DATA] === 0;\r\n              if (bytes[EXT] !== 0) {\r\n                output += ', alarm ' + (bytes[DATA] === 0 ? 'on' : 'off');\r\n              }\r\n              if (command[CMD] !== bytes[CMD]) {\r\n                output += '  *** MISMATCH ***';\r\n              }\r\n              break;\r\n            case 0x75:\r\n              S.buzzerOn = bytes[DATA] === 0;\r\n              if (bytes[EXT] !== 0) {\r\n                output += ', buzzer ' + (bytes[DATA] === 0 ? 'on' : 'off');\r\n              }\r\n              if (command[CMD] !== bytes[CMD]) {\r\n                output += '  *** MISMATCH ***';\r\n              }\r\n              break;\r\n          }\r\n          this.messageHandler(output);\r\n          pendingResolve(S);\r\n        }\r\n      } catch (error) {\r\n        let msg = 'Failed to read lock status: ' + JSON.stringify(error);\r\n        this.messageHandler(msg);\r\n        alert(msg);\r\n        pendingReject('read failed');\r\n      }\r\n      this.writeLockBusy = false;\r\n      this.notificationHandler = null;\r\n      pendingResolve = null;\r\n      pendingReject = null;\r\n    }\r\n\r\n    function errorHandler(this: BleService, error: any) {\r\n      if (commandName === CMD_SystemExit) {\r\n        pendingResolve({ response: ASK_correct } as LockStatus);\r\n      } else if (\r\n        Array.isArray(error) &&\r\n        error[0] == 'Peripheral disconnected'\r\n      ) {\r\n      } else {\r\n        let msg =\r\n          'Notification stream returned error: ' + JSON.stringify(error);\r\n        this.messageHandler(msg);\r\n        alert(msg);\r\n        pendingReject('read failed');\r\n      }\r\n      this.writeLockBusy = false;\r\n      this.notificationHandler = null;\r\n      pendingResolve = null;\r\n      pendingReject = null;\r\n    }\r\n  }\r\n\r\n  readLockStatus(): Promise<LockStatus> {\r\n    const command = this.readableHexToBuffer('F5 60 00 00 5F B4');\r\n    return <Promise<LockStatus>>(\r\n      this.opQueue.enqueue(() => this.writeToLock('read-state', command))\r\n    );\r\n  }\r\n\r\n  handleVerification(lockPair: LockParameters): Promise<VerifyOutcome> {\r\n    let readable = 'F5 0F 00 04 5F 3B';\r\n    for (let zi = 0; zi < 4; zi++) {\r\n      readable += ' ' + lockPair.pin.charCodeAt(zi).toString(16);\r\n    }\r\n    const command = this.readableHexToBuffer(readable);\r\n    return <Promise<VerifyOutcome>>this.opQueue.enqueue(() =>\r\n      this.writeToLock('verify', command).then((result: LockStatus) => {\r\n        return {\r\n          verified: result.verified,\r\n          isError: result.isError,\r\n          msg: result.responseMsg,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getAlarmState(): Promise<boolean> {\r\n    const command = this.readableHexToBuffer('F5 74 00 00 5F 3B');\r\n    return <Promise<boolean>>this.opQueue\r\n      .enqueue(() => this.writeToLock('getAlarmState', command))\r\n      .then((result: LockStatus) => {\r\n        if (result.alarmOn === null) {\r\n          this.messageHandler(\r\n            'getAlarmState: invalid status: ' + JSON.stringify(result)\r\n          );\r\n        }\r\n        return result.alarmOn !== null && result.alarmOn;\r\n      });\r\n  }\r\n\r\n  async setAlarmState(enabled: any): Promise<LockStatus> {\r\n    let command = this.readableHexToBuffer(\r\n      'F5 75 00 01 5F 3B ' + (enabled ? '00' : '01')\r\n    );\r\n    let result = await (<Promise<LockStatus>>(\r\n      this.opQueue.enqueue(() => this.writeToLock('setBuzzerState', command))\r\n    ));\r\n\r\n    await this.waitForMilliseconds(600);\r\n\r\n    command = this.readableHexToBuffer(\r\n      'F5 74 00 01 5F 3B ' + (enabled ? '00' : '01')\r\n    );\r\n    result = await (<Promise<LockStatus>>(\r\n      this.opQueue.enqueue(() => this.writeToLock('setAlarmState', command))\r\n    ));\r\n    return result;\r\n  }\r\n\r\n  triggerLock(toggle: any, encryptByte: any): Promise<LockStatus> {\r\n    let command = this.readableHexToBuffer('F5 61 00 01 5F 00 00');\r\n    command[DATA] = (toggle === 'toggle' ? 0x35 : 0x36) ^ encryptByte;\r\n    return <Promise<LockStatus>>(\r\n      this.opQueue.enqueue(() => this.writeToLock(toggle, command))\r\n    );\r\n  }\r\n\r\n  setDateTime(now: Date) {\r\n    let command = this.readableHexToBuffer(\r\n      'F5 62 00 06 5F 00' +\r\n        ' ' +\r\n        ('0' + now.getFullYear()).slice(-2) +\r\n        ' ' +\r\n        ('0' + now.getMonth()).slice(-2) +\r\n        ' ' +\r\n        ('0' + now.getDate()).slice(-2) +\r\n        ' ' +\r\n        ('0' + now.getHours()).slice(-2) +\r\n        ' ' +\r\n        ('0' + now.getMinutes()).slice(-2) +\r\n        ' ' +\r\n        ('0' + now.getSeconds()).slice(-2)\r\n    );\r\n    return <Promise<LockStatus>>(\r\n      this.opQueue.enqueue(() => this.writeToLock('setTime', command))\r\n    );\r\n  }\r\n\r\n  putLockToSleep(): Promise<LockStatus> {\r\n    const command = this.readableHexToBuffer('F5 6F 00 00 5F C3');\r\n    return <Promise<LockStatus>>(\r\n      this.opQueue.enqueue(() => this.writeToLock(CMD_SystemExit, command))\r\n    );\r\n  }\r\n\r\n  initializeLock(): Promise<LockStatus> {\r\n    const command = this.readableHexToBuffer('F5 65 00 00 5F B9');\r\n    return <Promise<LockStatus>>(\r\n      this.opQueue.enqueue(() => this.writeToLock(CMD_SystemInit, command))\r\n    );\r\n  }\r\n\r\n  private purgeConnection(deviceId: any) {\r\n    this.ble\r\n      .disconnect(deviceId)\r\n      .then(() => {\r\n        console.log('Disconnected');\r\n      })\r\n      .catch((reason) => {\r\n        this.messageHandler('purgeConnection(): ' + reason);\r\n      });\r\n  }\r\n\r\n  isConnected(deviceId: any) {\r\n    return this.ble.isConnected(deviceId);\r\n  }\r\n\r\n  readRSSI() {\r\n    return this.ble.readRSSI(this.deviceId!);\r\n  }\r\n\r\n  selectUuids(target: any) {\r\n    function shorten(uuid: any, extract: any) {\r\n      return extract ? uuid.substr(4, 4).toUpperCase() : uuid;\r\n    }\r\n\r\n    if (target === undefined || !('id' in target)) {\r\n      throw 'no device provided';\r\n    }\r\n    const isShort = !target.hasLongUuids;\r\n    this.ServiceUuid = shorten(this.LongServiceUuid, isShort);\r\n    this.StatusUuid = shorten(this.LongStatusUuid, isShort);\r\n    this.CommandUuid = shorten(this.LongCommandUuid, isShort);\r\n    this.ConfigUuid = shorten(this.LongConfigUuid, isShort);\r\n    return;\r\n  }\r\n\r\n  async forceDisconnect(device: any) {\r\n    if (this.platform == 'android') {\r\n      this.messageHandler(`** Attempting Disconnect **`);\r\n      this.ble.disconnect(device.id).catch((err) => {\r\n        this.messageHandler('-- disconnected failed\\n');\r\n      });\r\n    }\r\n  }\r\n\r\n  async waitForMilliseconds(ms: any): Promise<any> {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, ms);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  startKeepAlive(device: Device) {\r\n    this.stopKeepAlive();\r\n    this.lastConnectedDevice = device;\r\n    localStorage.setItem('lastConnectedDevice', JSON.stringify(device));\r\n    this.keepAliveInterval = setInterval(() => {\r\n      this.readLockStatus().catch(() => {}); // harmless ping\r\n    }, 15000); // 15 seconds\r\n  }\r\n\r\n  stopKeepAlive() {\r\n    if (this.keepAliveInterval) {\r\n      clearInterval(this.keepAliveInterval);\r\n      this.keepAliveInterval = null;\r\n    }\r\n  }\r\n\r\n  async tryReconnect() {\r\n    if (!this.lastConnectedDevice || this.reconnectAttempts >= this.maxReconnectAttempts) return;\r\n    this.reconnectAttempts++;\r\n    setTimeout(() => {\r\n      this.connectTo(this.lastConnectedDevice!).subscribe({\r\n        next: () => {\r\n          this.reconnectAttempts = 0;\r\n        },\r\n        error: () => {\r\n          this.tryReconnect();\r\n        }\r\n      });\r\n    }, 2000 * this.reconnectAttempts); // Exponential backoff\r\n  }\r\n\r\n  async autoReconnectOnStart() {\r\n    const last = localStorage.getItem('lastConnectedDevice');\r\n    if (last) {\r\n      try {\r\n        const device = JSON.parse(last);\r\n        // Optionally, check if device is in range first\r\n        this.connectTo(device).subscribe({\r\n          next: () => {\r\n            this.reconnectAttempts = 0;\r\n          },\r\n          error: () => {\r\n            this.tryReconnect();\r\n          }\r\n        });\r\n      } catch {}\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Tactical Traps Bluetooth Lock App\r\n * (c) 2019-2022 Tactical Traps https://www.tacticaltraps.com/\r\n * License: Proprietary, by permission only\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface Device {\r\n  id: string;\r\n  name: string;\r\n  rssi: any;\r\n  advertising: any;\r\n  hasProperName?: boolean;\r\n  hasLongUuids?: boolean;\r\n  isNotAGhost?: boolean;\r\n  customName?: string;\r\n}\r\n\r\nexport const UnknownDeviceName = 'Unknown Device';\r\nexport type BleDeviceList = Device[];\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DevicesService {\r\n  devices: BleDeviceList = [];\r\n  decoder = new TextDecoder('utf-8');\r\n  blocking = false;\r\n\r\n  constructor() {\r\n    console.log('Devices Service initializing');\r\n  }\r\n\r\n  hexByte(n: number) {\r\n    return ('0' + n.toString(16)).substr(-2, 2).toUpperCase();\r\n  }\r\n\r\n  /* decode the peripheral connection data received with a\r\n   * successful connection\r\n   */\r\n  advertisementDecoder(buffer: any) {\r\n    this.blocking = true;\r\n    let advStrings = [];\r\n    const bytes = new Uint8Array(buffer);\r\n    let index = 0;\r\n    while (index < bytes.length) {\r\n      let s, count;\r\n      let adLength = bytes[index++];\r\n      if (adLength === 0) break;\r\n      const adType = bytes[index++];\r\n      adLength = adLength - 1;\r\n      let adData = new Uint8Array(buffer, index, adLength);\r\n      switch (adType) {\r\n        case 1:\r\n          s = 'Flags: ' + this.hexByte(bytes[index]);\r\n          break;\r\n        case 3:\r\n          count = adLength / 2;\r\n          s = 'service:';\r\n          for (let zi = 0; zi < count; zi++) {\r\n            s +=\r\n              ' ' +\r\n              this.hexByte(adData[zi * 2 + 1]) +\r\n              this.hexByte(adData[zi * 2]);\r\n          }\r\n          break;\r\n        case 7:\r\n          s = 'UUID: ';\r\n          let p1 = [],\r\n            p2 = [];\r\n          for (let zi = 0; zi < adLength; zi++) {\r\n            p1.unshift(this.hexByte(adData[zi]));\r\n          }\r\n          p2.push(p1.slice(0, 4).join(''));\r\n          p2.push(p1.slice(4, 6).join(''));\r\n          p2.push(p1.slice(6, 8).join(''));\r\n          p2.push(p1.slice(8, 10).join(''));\r\n          p2.push(p1.slice(10, 16).join(''));\r\n          s = p2.join('-');\r\n          break;\r\n        case 8:\r\n        case 9:\r\n          let adView = new DataView(buffer, index, adLength);\r\n          try {\r\n            s = this.decoder.decode(adView);\r\n          } catch (e) {\r\n            s = adView;\r\n          }\r\n          break;\r\n        default:\r\n          s = 'raw: ';\r\n          for (let zi = 0; zi < adLength; zi++) {\r\n            if (zi > 0) s += ', ';\r\n            s += this.hexByte(adData[zi]);\r\n          }\r\n          break;\r\n      }\r\n      advStrings.push('0x' + adType.toString(16) + ': ' + s);\r\n      index += adLength;\r\n    }\r\n    this.blocking = false;\r\n    return advStrings;\r\n  }\r\n\r\n  addDevice(device: Device): any[] {\r\n    console.log(\r\n      'DeviceFactory addDevice \"' + device.id + '\", \"' + device.name + '\"'\r\n    );\r\n    // decode advertisement to console unless debugger is paused in decoder\r\n    if (!this.blocking) {\r\n      let adverts = this.advertisementDecoder(device.advertising);\r\n      //            adverts.forEach(function(s) { console.log(s); });\r\n      //            console.log('.. RSSI = ' + device.rssi);\r\n    }\r\n    // Attach custom name if it exists\r\n    const customName = this.getCustomName(device.id);\r\n    if (customName) {\r\n      device.customName = customName;\r\n    }\r\n    if (\r\n      this.devices.find(\r\n        (item) => item.id === device.id && item.name === device.name\r\n      )\r\n    ) {\r\n      console.log('duplicate');\r\n    } else {\r\n      this.devices.push(device);\r\n    }\r\n    return this.devices;\r\n  }\r\n\r\n  getDevices(): BleDeviceList {\r\n    console.log('DeviceFactory getDevices');\r\n    return this.devices;\r\n  }\r\n\r\n  getDevice(id: string) {\r\n    console.log('DeviceFactory getDevice \"' + id + '\"');\r\n    let index = this.devices.findIndex((device) => device.id === id);\r\n    return index > -1 ? this.devices[index] : null;\r\n  }\r\n\r\n  reset() {\r\n    console.log('DeviceFactory reset');\r\n    this.devices = [];\r\n  }\r\n\r\n  getCustomName(deviceId: string): string | null {\r\n    return localStorage.getItem('customName_' + deviceId);\r\n  }\r\n\r\n  setCustomName(deviceId: string, name: string): void {\r\n    localStorage.setItem('customName_' + deviceId, name);\r\n    // Update in-memory device if present\r\n    const device = this.devices.find(d => d.id === deviceId);\r\n    if (device) {\r\n      device.customName = name;\r\n    }\r\n  }\r\n\r\n  // Utility to extract serial number from device name\r\n  static extractSerialNumber(device: Device): string | null {\r\n    if (device.name && device.name.startsWith('SN:')) {\r\n      return device.name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Get the best display name for a device\r\n  static getDisplayName(device: Device): string {\r\n    if (device.customName && device.customName.trim()) {\r\n      return device.customName;\r\n    }\r\n    if (device.name && device.name !== 'Unknown Device') {\r\n      return device.name;\r\n    }\r\n    const serial = DevicesService.extractSerialNumber(device);\r\n    if (serial) {\r\n      return serial;\r\n    }\r\n    return 'Unknown Device';\r\n  }\r\n}\r\n","/**\r\n * Tactical Traps Bluetooth Lock App\r\n * (c) 2019-2022 Tactical Traps https://www.tacticaltraps.com/\r\n * License: Proprietary, by permission only\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Preferences } from '@capacitor/preferences';\r\n\r\nexport interface LockParameters {\r\n  serialNumber: string;\r\n  pin: string;\r\n  name: string;\r\n}\r\n\r\nexport const LockDataErrors = {\r\n  SUCCESS: 0,\r\n  NATIVE_WRITE_FAILED: 1,\r\n  ITEM_NOT_FOUND: 2,\r\n  NULL_REFERENCE: 3,\r\n  UNDEFINED_TYPE: 4,\r\n  JSON_ERROR: 5,\r\n  WRONG_PARAMETER: 6,\r\n  DUPLICATE_KEY: 7,\r\n  BAD_NAME: 8,\r\n};\r\n\r\nexport interface LockDataResult {\r\n  code: number;\r\n  exception?: string;\r\n  source?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LockDataService {\r\n  locks: LockParameters[] = [];\r\n  blocking = false;\r\n  private _statusMessageHandler: (message: string) => void = (x: string) => {}; // Default handler\r\n\r\n  constructor() {\r\n    console.log('Pin Store Service initializing');\r\n  }\r\n\r\n  /* Call at startup to load any existing Pin pairs. Return a Promise producing\r\n   * either TRUE or an error message.\r\n   */\r\n  setup(statusMessageHandler: (message: string) => void): void {\r\n    if (statusMessageHandler) {\r\n      this._statusMessageHandler = statusMessageHandler;\r\n    }\r\n    this._statusMessageHandler('lock-data: activate');\r\n  }\r\n\r\n  makeLock(serialNumber: string, pin: string): LockParameters {\r\n    return { serialNumber, pin, name: '' };\r\n  }\r\n\r\n  hexByte(n: number): string {\r\n    return ('0' + n.toString(16)).substr(-2, 2).toUpperCase();\r\n  }\r\n\r\n  /* clear the store of any existing serial/PIN pairs */\r\n  clear(): Promise<void> {\r\n    return Preferences.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if a device already exists.\r\n   * @param name device id found by scanning\r\n   * @returns Promise<string>, rejects with LockDataError\r\n   */\r\n  getAuthorization(name: string): Promise<string> {\r\n    this._statusMessageHandler(`getAuthorization for \"${name}\"`);\r\n    if (typeof name !== 'string') {\r\n      return Promise.reject({\r\n        exception: `getAuthorization: bad name \"${name}\"`,\r\n        code: LockDataErrors.BAD_NAME,\r\n      });\r\n    }\r\n    return Preferences.get({ key: name }).then((v) => {\r\n      if (v.value === null) {\r\n        throw { code: LockDataErrors.ITEM_NOT_FOUND };\r\n      }\r\n      return v.value;\r\n    });\r\n  }\r\n\r\n  /** Add a new device to permanent storage.\r\n   * @param lock target device\r\n   * @returns result of storage save as Promise of LockDataErrors\r\n   */\r\n  addAuthorization(lock: LockParameters): Promise<number> {\r\n    this._statusMessageHandler(\r\n      `LockData addDevice \"${lock.serialNumber}\", \"${lock.pin}\"`\r\n    );\r\n\r\n    return this.getAuthorization(lock.serialNumber)\r\n      .then(() => {\r\n        this._statusMessageHandler('*** error: adding duplicate device');\r\n        alert('LockData: adding duplicate device');\r\n        return LockDataErrors.DUPLICATE_KEY;\r\n      })\r\n      .catch(() => {\r\n        return Preferences.set({\r\n          key: lock.serialNumber,\r\n          value: lock.pin,\r\n        }).then(() => {\r\n          return LockDataErrors.SUCCESS;\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this._statusMessageHandler(JSON.stringify(error));\r\n        return Promise.resolve(LockDataErrors.NATIVE_WRITE_FAILED);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Gets an arbitrary item from storage.\r\n   * @param name\r\n   * @returns Promise of string or LockDataResult\r\n   */\r\n  getValue(name: string): Promise<string> {\r\n    this._statusMessageHandler(`getValue for \"${name}\"`);\r\n    if (typeof name !== 'string') {\r\n      return Promise.reject({\r\n        exception: `getValue: bad name \"${name}\"`,\r\n        code: LockDataErrors.BAD_NAME,\r\n      });\r\n    }\r\n    return Preferences.get({ key: name }).then((v) => {\r\n      if (v.value === null) {\r\n        throw { code: LockDataErrors.ITEM_NOT_FOUND };\r\n      }\r\n      return v.value;\r\n    });\r\n  }\r\n\r\n  getJsonValue(name: string): Promise<object> {\r\n    return this.getValue(name).then((value) => {\r\n      try {\r\n        return JSON.parse(value);\r\n      } catch (e: unknown) {\r\n        // Explicitly type as unknown\r\n        // Type guard to check if e is an Error\r\n        let errorMessage: string;\r\n        if (e instanceof Error) {\r\n          errorMessage = e.message;\r\n        } else if (typeof e === 'string') {\r\n          errorMessage = e; // If e is a string, use it directly\r\n        } else {\r\n          errorMessage = 'Unknown error occurred'; // Fallback\r\n        }\r\n        throw { code: LockDataErrors.JSON_ERROR, exception: errorMessage };\r\n      }\r\n    });\r\n  }\r\n\r\n  /** set arbitrary <key :: string> in storage\r\n   * @returns Promise to success or LockDataResult\r\n   */\r\n  setValue(key: string, value: string): Promise<number> {\r\n    return Preferences.set({ key, value })\r\n      .then(() => {\r\n        return LockDataErrors.SUCCESS;\r\n      })\r\n      .catch((error) => {\r\n        this._statusMessageHandler(JSON.stringify(error));\r\n        return Promise.resolve(LockDataErrors.NATIVE_WRITE_FAILED);\r\n      });\r\n  }\r\n\r\n  /** set arbitrary <key :: object> in storage\r\n   * @returns Promise to success or LockDataResult\r\n   */\r\n  setJsonValue(name: string, object: any): Promise<number> {\r\n    return this.setValue(name, JSON.stringify(object));\r\n  }\r\n}\r\n","/**\r\n * Tactical Traps Bluetooth Lock App\r\n * (c) 2019-2022 Tactical Traps https://www.tacticaltraps.com/\r\n * License: Proprietary, by permission only\r\n */\r\n\r\n/** DynamicQueue\r\n *\r\n * A class designed to queue Promise-returning functions for\r\n * sequential execution.\r\n */\r\n\r\ninterface QueueItem<T = any> {\r\n  operation: () => Promise<T>; // Function returning a Promise with generic type T\r\n  resolve: (value: T) => void; // Resolve function with typed value\r\n  reject: (reason?: any) => void; // Reject function with optional reason\r\n}\r\n\r\nexport class DynamicQueue {\r\n  private queue: QueueItem[] = []; // Typed array of QueueItem\r\n  private pendingPromise = false;\r\n  private workingOnPromise = false;\r\n\r\n  /**\r\n   * Flushes the queue by clearing all items.\r\n   */\r\n  flush(): void {\r\n    this.queue = [];\r\n  }\r\n\r\n  /**\r\n   * Add a function to the queue for execution; return an enclosing Promise.\r\n   * The secondary Promise is needed because the function's Promise can only\r\n   * be secured by beginning execution.\r\n   *\r\n   * @param operation - The Promise-returning function to enqueue\r\n   * @returns Promise for the operation's result\r\n   */\r\n  enqueue<T = any>(operation: () => Promise<T>): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      this.queue.push({\r\n        operation,\r\n        resolve,\r\n        reject,\r\n      });\r\n      this.dequeue();\r\n    });\r\n  }\r\n\r\n  /** If not busy, pull the next function from the queue and execute it. When the\r\n   * promise completes, the next item is recursively started. Repeats until\r\n   * the queue is empty. With promises, the enqueueing task only needs to\r\n   * invoke dequeue() when it pushes onto an empty queue.\r\n   *\r\n   * @returns boolean indicating if an item was dequeued\r\n   */\r\n  private dequeue(): boolean {\r\n    if (this.workingOnPromise) {\r\n      return false;\r\n    }\r\n    const item = this.queue.shift();\r\n    if (!item) {\r\n      return false;\r\n    }\r\n    try {\r\n      this.workingOnPromise = true;\r\n      item\r\n        .operation()\r\n        .then((value: any) => {\r\n          // Explicitly typed value, can be refined with T\r\n          this.workingOnPromise = false;\r\n          item.resolve(value);\r\n          this.dequeue();\r\n        })\r\n        .catch((err: any) => {\r\n          // Explicitly typed err, can be refined\r\n          this.workingOnPromise = false;\r\n          item.reject(err);\r\n          this.dequeue();\r\n        });\r\n    } catch (err: any) {\r\n      this.workingOnPromise = false;\r\n      item.reject(err);\r\n      this.dequeue();\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default DynamicQueue;\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t7518,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t1981,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t1603,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t2273,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t9642,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t2095,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t2335,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t8221,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t7184,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t8759,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t4248,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t9863,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t1769,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t2569,\n\t\t\"default-node_modules_ionic_core_dist_esm_data-GIsHsYIB_js\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t6534,\n\t\t\"default-node_modules_ionic_core_dist_esm_data-GIsHsYIB_js\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t5458,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t654,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t6034,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input-otp.entry.js\": [\n\t\t381,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input-otp_entry_js\"\n\t],\n\t\"./ion-input-password-toggle.entry.js\": [\n\t\t5196,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input-password-toggle_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t761,\n\t\t\"default-node_modules_ionic_core_dist_esm_input_utils-zWijNCrx_js-node_modules_ionic_core_dist-2e0994\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t6492,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t9557,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t8353,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t1024,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t9160,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t393,\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-option.entry.js\": [\n\t\t8442,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-option_entry_js\"\n\t],\n\t\"./ion-picker-column.entry.js\": [\n\t\t3110,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column_entry_js\"\n\t],\n\t\"./ion-picker.entry.js\": [\n\t\t5575,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t6772,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t4810,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t4639,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t628,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t852,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t1479,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t4065,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t7971,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t3184,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment-content.entry.js\": [\n\t\t4312,\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment-content_entry_js\"\n\t],\n\t\"./ion-segment-view.entry.js\": [\n\t\t4540,\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment-view_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t469,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select-modal.entry.js\": [\n\t\t7101,\n\t\t\"node_modules_ionic_core_dist_esm_ion-select-modal_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t8471,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t388,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t2392,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t6059,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t5427,\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t198,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t1735,\n\t\t\"default-node_modules_ionic_core_dist_esm_input_utils-zWijNCrx_js-node_modules_ionic_core_dist-2e0994\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t7510,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5297,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8996;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 4140;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["NgModule","PreloadAllModules","RouterModule","routes","path","loadChildren","then","m","HomePageModule","redirectTo","pathMatch","AppRoutingModule","__decorate","imports","forRoot","preloadingStrategy","exports","Component","Platform","SplashScreen","StatusBar","AppComponent","constructor","platform","initializeApp","ready","val","hide","clickyClasses","window","nativeclick","watch","selector","template","__NG_CLI_RESOURCE__0","BrowserModule","RouteReuseStrategy","IonicModule","IonicRouteStrategy","AndroidPermissions","BLE","BleService","DevicesService","LockDataService","AppModule","declarations","providers","provide","useClass","bootstrap","Injectable","Device","System","Subject","DynamicQueue","CMD","ASK","EXT","SUM","DATA","RANDDATA","CMD_SystemExit","CMD_SystemInit","ASK_correct","ASK_failure","ASK_timeout","ASK_unknown","ASK_checksum","ASK_password_not_verified","ASK_failed_verification","ResponseMap","IsLocked","IsUnhooked","IsHooked","InactiveDisconnectTime","Android11","androidPermissions","ble","deviceId","connectSubscriber","notificationSubscriber","connectRepeater","opQueue","notificationHandler","messageHandler","alertHandler","writeLockBusy","LongServiceUuid","LongStatusUuid","LongCommandUuid","LongConfigUuid","keepAliveInterval","lastConnectedDevice","reconnectAttempts","maxReconnectAttempts","PERMISSION","BLUETOOTH_CONNECT","BLUETOOTH_SCAN","setup","_messageHandler","_alertHandler","console","log","osDataRequest","getInfo","standin","isEnabled","a","b","Promise","reject","enable","startScan","stopScan","alert","q","iosEnable","bind","isAvailable","_this","_asyncToGenerator","available","deviceInfo","operatingSystem","osVersion","e","err","result","bluetooth","location","checkPermission","BLUETOOTH","hasPermission","ACCESS_FINE_LOCATION","JSON","stringify","requestPermission","scan","connect","that","notifier","startStateNotifications","resolve","stateWatcher","timer","setTimeout","subscribe","state","handled","clearTimeout","unsubscribe","stopStateNotifications","catch","reason","services","connectTo","scanData","id","selectUuids","obs","_ref","peripheralData","name","next","flush","startNotification","ServiceUuid","StatusUuid","value","error","notificationError","add","startKeepAlive","_x","apply","arguments","_ref2","connectFailed","purgeConnection","stopKeepAlive","tryReconnect","_x2","readableHexToBuffer","spaceSeparatedHex","n","split","forEach","x","push","parseInt","Uint8Array","from","bufferToReadableHex","buffer","Array","map","toString","padStart","join","isLockBusy","writeToLock","commandName","command","_this2","pendingResolve","pendingReject","notificationInjector","reduce","previous","current","_ref3","responseHandler","errorHandler","write","CommandUuid","fakeAlarmResponse","_x3","_x4","data","response","output","bytes","length","S","extraBytes","isStatus","isError","verified","alarmOn","buzzerOn","responseMsg","openCloseState","hookState","voltageValue","lockId","randData","msg","isArray","readLockStatus","enqueue","handleVerification","lockPair","readable","zi","pin","charCodeAt","getAlarmState","setAlarmState","enabled","_this3","waitForMilliseconds","triggerLock","toggle","encryptByte","setDateTime","now","getFullYear","slice","getMonth","getDate","getHours","getMinutes","getSeconds","putLockToSleep","initializeLock","disconnect","isConnected","readRSSI","target","shorten","uuid","extract","substr","toUpperCase","undefined","isShort","hasLongUuids","ConfigUuid","forceDisconnect","device","_this4","ms","ngOnDestroy","localStorage","setItem","setInterval","clearInterval","_this5","autoReconnectOnStart","_this6","last","getItem","parse","providedIn","UnknownDeviceName","devices","decoder","TextDecoder","blocking","hexByte","advertisementDecoder","advStrings","index","s","count","adLength","adType","adData","p1","p2","unshift","adView","DataView","decode","addDevice","adverts","advertising","customName","getCustomName","find","item","getDevices","getDevice","findIndex","reset","setCustomName","d","extractSerialNumber","startsWith","getDisplayName","trim","serial","DevicesService_1","Preferences","LockDataErrors","SUCCESS","NATIVE_WRITE_FAILED","ITEM_NOT_FOUND","NULL_REFERENCE","UNDEFINED_TYPE","JSON_ERROR","WRONG_PARAMETER","DUPLICATE_KEY","BAD_NAME","locks","_statusMessageHandler","statusMessageHandler","makeLock","serialNumber","clear","getAuthorization","exception","code","get","key","v","addAuthorization","lock","set","getValue","getJsonValue","errorMessage","Error","message","setValue","setJsonValue","object","queue","pendingPromise","workingOnPromise","operation","dequeue","shift","environment","production","enableProdMode","platformBrowserDynamic","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[9,10]}