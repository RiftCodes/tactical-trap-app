"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-searchbar_entry_js"],{

/***/ 3184:
/*!******************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ion_searchbar: () => (/* binding */ Searchbar)
/* harmony export */ });
/* harmony import */ var C_Users_Faizan_Desktop_Desktop_Projects_tactical_trap_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 9204);
/* harmony import */ var _index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-B_U9CtaY.js */ 4917);
/* harmony import */ var _helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers-1O4D2b7y.js */ 450);
/* harmony import */ var _dir_C53feagD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dir-C53feagD.js */ 1008);
/* harmony import */ var _theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./theme-DiVJyqlX.js */ 247);
/* harmony import */ var _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-BLV6ykCk.js */ 4361);

/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */





const searchbarIosCss = ".sc-ion-searchbar-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:var(--ion-placeholder-opacity, 0.6);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;width:100%;color:var(--color);font-family:var(--ion-font-family, inherit);-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-searchbar-ios-h{color:var(--ion-color-contrast)}.ion-color.sc-ion-searchbar-ios-h .searchbar-input.sc-ion-searchbar-ios{background:var(--ion-color-base)}.ion-color.sc-ion-searchbar-ios-h .searchbar-clear-button.sc-ion-searchbar-ios,.ion-color.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios,.ion-color.sc-ion-searchbar-ios-h .searchbar-search-icon.sc-ion-searchbar-ios{color:inherit}.searchbar-search-icon.sc-ion-searchbar-ios{color:var(--icon-color);pointer-events:none}.searchbar-input-container.sc-ion-searchbar-ios{display:block;position:relative;-ms-flex-negative:1;flex-shrink:1;width:100%}.searchbar-input.sc-ion-searchbar-ios{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;border-radius:var(--border-radius);display:block;width:100%;min-height:inherit;border:0;outline:none;background:var(--background);font-family:inherit;-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}.searchbar-input.sc-ion-searchbar-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-ios::-webkit-search-cancel-button,.searchbar-input.sc-ion-searchbar-ios::-ms-clear{display:none}.searchbar-cancel-button.sc-ion-searchbar-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:none;height:100%;border:0;outline:none;color:var(--cancel-button-color);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}.searchbar-cancel-button.sc-ion-searchbar-ios>div.sc-ion-searchbar-ios{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%}.searchbar-clear-button.sc-ion-searchbar-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;display:none;min-height:0;outline:none;color:var(--clear-button-color);-webkit-appearance:none;-moz-appearance:none;appearance:none}.searchbar-clear-button.sc-ion-searchbar-ios:focus{opacity:0.5}.searchbar-has-value.searchbar-should-show-clear.sc-ion-searchbar-ios-h .searchbar-clear-button.sc-ion-searchbar-ios{display:block}.searchbar-disabled.sc-ion-searchbar-ios-h{cursor:default;opacity:0.4;pointer-events:none}.sc-ion-searchbar-ios-h{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.07);--border-radius:10px;--box-shadow:none;--cancel-button-color:var(--ion-color-primary, #0054e9);--clear-button-color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));--color:var(--ion-text-color, #000);--icon-color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:12px;padding-bottom:12px;min-height:60px;contain:content}.searchbar-input-container.sc-ion-searchbar-ios{min-height:36px}.searchbar-search-icon.sc-ion-searchbar-ios{-webkit-margin-start:calc(50% - 60px);margin-inline-start:calc(50% - 60px);top:0;position:absolute;width:1.375rem;height:100%;contain:strict}.searchbar-search-icon.sc-ion-searchbar-ios{inset-inline-start:5px}.searchbar-input.sc-ion-searchbar-ios{-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:6px;padding-bottom:6px;height:100%;font-size:1.0625rem;font-weight:400;contain:strict}.searchbar-has-value.searchbar-should-show-clear.sc-ion-searchbar-ios-h .searchbar-input.sc-ion-searchbar-ios{-webkit-padding-start:1.75rem;padding-inline-start:1.75rem;-webkit-padding-end:1.75rem;padding-inline-end:1.75rem}.searchbar-clear-button.sc-ion-searchbar-ios{top:0;background-position:center;position:absolute;width:1.875rem;height:100%;border:0;background-color:transparent}.searchbar-clear-button.sc-ion-searchbar-ios{inset-inline-end:0}.searchbar-clear-icon.sc-ion-searchbar-ios{width:1.125rem;height:100%}.searchbar-cancel-button.sc-ion-searchbar-ios{-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0;-ms-flex-negative:0;flex-shrink:0;background-color:transparent;font-size:17px}.searchbar-left-aligned.sc-ion-searchbar-ios-h .searchbar-search-icon.sc-ion-searchbar-ios{-webkit-margin-start:0;margin-inline-start:0}.searchbar-left-aligned.sc-ion-searchbar-ios-h .searchbar-input.sc-ion-searchbar-ios{-webkit-padding-start:1.875rem;padding-inline-start:1.875rem}.searchbar-has-focus.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios,.searchbar-should-show-cancel.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios,.searchbar-animated.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios{display:block}.searchbar-animated.sc-ion-searchbar-ios-h .searchbar-search-icon.sc-ion-searchbar-ios,.searchbar-animated.sc-ion-searchbar-ios-h .searchbar-input.sc-ion-searchbar-ios{-webkit-transition:all 300ms ease;transition:all 300ms ease}.searchbar-animated.searchbar-has-focus.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios,.searchbar-animated.searchbar-should-show-cancel.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios{opacity:1;pointer-events:auto}.searchbar-animated.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios{-webkit-margin-end:-100%;margin-inline-end:-100%;-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);-webkit-transition:all 300ms ease;transition:all 300ms ease;opacity:0;pointer-events:none}.searchbar-no-animate.sc-ion-searchbar-ios-h .searchbar-search-icon.sc-ion-searchbar-ios,.searchbar-no-animate.sc-ion-searchbar-ios-h .searchbar-input.sc-ion-searchbar-ios,.searchbar-no-animate.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios{-webkit-transition-duration:0ms;transition-duration:0ms}.ion-color.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios{color:var(--ion-color-base)}@media (any-hover: hover){.ion-color.sc-ion-searchbar-ios-h .searchbar-cancel-button.sc-ion-searchbar-ios:hover{color:var(--ion-color-tint)}}ion-toolbar.sc-ion-searchbar-ios-h,ion-toolbar .sc-ion-searchbar-ios-h{padding-top:1px;padding-bottom:15px;min-height:52px}ion-toolbar.ion-color.sc-ion-searchbar-ios-h:not(.ion-color),ion-toolbar.ion-color .sc-ion-searchbar-ios-h:not(.ion-color){color:inherit}ion-toolbar.ion-color.sc-ion-searchbar-ios-h:not(.ion-color) .searchbar-cancel-button.sc-ion-searchbar-ios,ion-toolbar.ion-color .sc-ion-searchbar-ios-h:not(.ion-color) .searchbar-cancel-button.sc-ion-searchbar-ios{color:currentColor}ion-toolbar.ion-color.sc-ion-searchbar-ios-h .searchbar-search-icon.sc-ion-searchbar-ios,ion-toolbar.ion-color .sc-ion-searchbar-ios-h .searchbar-search-icon.sc-ion-searchbar-ios{color:currentColor;opacity:0.5}ion-toolbar.ion-color.sc-ion-searchbar-ios-h:not(.ion-color) .searchbar-input.sc-ion-searchbar-ios,ion-toolbar.ion-color .sc-ion-searchbar-ios-h:not(.ion-color) .searchbar-input.sc-ion-searchbar-ios{background:rgba(var(--ion-color-contrast-rgb), 0.07);color:currentColor}ion-toolbar.ion-color.sc-ion-searchbar-ios-h:not(.ion-color) .searchbar-clear-button.sc-ion-searchbar-ios,ion-toolbar.ion-color .sc-ion-searchbar-ios-h:not(.ion-color) .searchbar-clear-button.sc-ion-searchbar-ios{color:currentColor;opacity:0.5}";
const searchbarMdCss = ".sc-ion-searchbar-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:var(--ion-placeholder-opacity, 0.6);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;width:100%;color:var(--color);font-family:var(--ion-font-family, inherit);-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-searchbar-md-h{color:var(--ion-color-contrast)}.ion-color.sc-ion-searchbar-md-h .searchbar-input.sc-ion-searchbar-md{background:var(--ion-color-base)}.ion-color.sc-ion-searchbar-md-h .searchbar-clear-button.sc-ion-searchbar-md,.ion-color.sc-ion-searchbar-md-h .searchbar-cancel-button.sc-ion-searchbar-md,.ion-color.sc-ion-searchbar-md-h .searchbar-search-icon.sc-ion-searchbar-md{color:inherit}.searchbar-search-icon.sc-ion-searchbar-md{color:var(--icon-color);pointer-events:none}.searchbar-input-container.sc-ion-searchbar-md{display:block;position:relative;-ms-flex-negative:1;flex-shrink:1;width:100%}.searchbar-input.sc-ion-searchbar-md{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;border-radius:var(--border-radius);display:block;width:100%;min-height:inherit;border:0;outline:none;background:var(--background);font-family:inherit;-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}.searchbar-input.sc-ion-searchbar-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.searchbar-input.sc-ion-searchbar-md::-webkit-search-cancel-button,.searchbar-input.sc-ion-searchbar-md::-ms-clear{display:none}.searchbar-cancel-button.sc-ion-searchbar-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:none;height:100%;border:0;outline:none;color:var(--cancel-button-color);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}.searchbar-cancel-button.sc-ion-searchbar-md>div.sc-ion-searchbar-md{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%}.searchbar-clear-button.sc-ion-searchbar-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;display:none;min-height:0;outline:none;color:var(--clear-button-color);-webkit-appearance:none;-moz-appearance:none;appearance:none}.searchbar-clear-button.sc-ion-searchbar-md:focus{opacity:0.5}.searchbar-has-value.searchbar-should-show-clear.sc-ion-searchbar-md-h .searchbar-clear-button.sc-ion-searchbar-md{display:block}.searchbar-disabled.sc-ion-searchbar-md-h{cursor:default;opacity:0.4;pointer-events:none}.sc-ion-searchbar-md-h{--background:var(--ion-background-color, #fff);--border-radius:2px;--box-shadow:0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);--cancel-button-color:var(--ion-color-step-900, var(--ion-text-color-step-100, #1a1a1a));--clear-button-color:initial;--color:var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));--icon-color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;background:inherit}.searchbar-search-icon.sc-ion-searchbar-md{top:11px;width:1.3125rem;height:1.3125rem}.searchbar-search-icon.sc-ion-searchbar-md{inset-inline-start:16px}.searchbar-cancel-button.sc-ion-searchbar-md{top:0;background-color:transparent;font-size:1.5em}.searchbar-cancel-button.sc-ion-searchbar-md{inset-inline-start:9px}.searchbar-search-icon.sc-ion-searchbar-md,.searchbar-cancel-button.sc-ion-searchbar-md{position:absolute}.searchbar-search-icon.ion-activated.sc-ion-searchbar-md,.searchbar-cancel-button.ion-activated.sc-ion-searchbar-md{background-color:transparent}.searchbar-input.sc-ion-searchbar-md{-webkit-padding-start:3.4375rem;padding-inline-start:3.4375rem;-webkit-padding-end:3.4375rem;padding-inline-end:3.4375rem;padding-top:0.375rem;padding-bottom:0.375rem;background-position:left 8px center;height:auto;font-size:1rem;font-weight:400;line-height:30px}[dir=rtl].sc-ion-searchbar-md-h .searchbar-input.sc-ion-searchbar-md,[dir=rtl] .sc-ion-searchbar-md-h .searchbar-input.sc-ion-searchbar-md{background-position:right 8px center}[dir=rtl].sc-ion-searchbar-md .searchbar-input.sc-ion-searchbar-md{background-position:right 8px center}@supports selector(:dir(rtl)){.searchbar-input.sc-ion-searchbar-md:dir(rtl){background-position:right 8px center}}.searchbar-clear-button.sc-ion-searchbar-md{top:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;position:absolute;height:100%;border:0;background-color:transparent}.searchbar-clear-button.sc-ion-searchbar-md{inset-inline-end:13px}.searchbar-clear-button.ion-activated.sc-ion-searchbar-md{background-color:transparent}.searchbar-clear-icon.sc-ion-searchbar-md{width:1.375rem;height:100%}.searchbar-has-focus.sc-ion-searchbar-md-h .searchbar-search-icon.sc-ion-searchbar-md{display:block}.searchbar-has-focus.sc-ion-searchbar-md-h .searchbar-cancel-button.sc-ion-searchbar-md,.searchbar-should-show-cancel.sc-ion-searchbar-md-h .searchbar-cancel-button.sc-ion-searchbar-md{display:block}.searchbar-has-focus.sc-ion-searchbar-md-h .searchbar-cancel-button.sc-ion-searchbar-md+.searchbar-search-icon.sc-ion-searchbar-md,.searchbar-should-show-cancel.sc-ion-searchbar-md-h .searchbar-cancel-button.sc-ion-searchbar-md+.searchbar-search-icon.sc-ion-searchbar-md{display:none}ion-toolbar.sc-ion-searchbar-md-h,ion-toolbar .sc-ion-searchbar-md-h{-webkit-padding-start:7px;padding-inline-start:7px;-webkit-padding-end:7px;padding-inline-end:7px;padding-top:3px;padding-bottom:3px}";
const Searchbar = class {
  constructor(hostRef) {
    var _this = this;
    (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.ionInput = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionInput", 7);
    this.ionChange = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionChange", 7);
    this.ionCancel = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionCancel", 7);
    this.ionClear = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionClear", 7);
    this.ionBlur = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionBlur", 7);
    this.ionFocus = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionFocus", 7);
    this.ionStyle = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, "ionStyle", 7);
    this.isCancelVisible = false;
    this.shouldAlignLeft = true;
    this.inputId = `ion-searchbar-${searchbarIds++}`;
    this.inheritedAttributes = {};
    this.focused = false;
    this.noAnimate = true;
    /**
     * If `true`, enable searchbar animation.
     */
    this.animated = false;
    /**
     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.
     * Available options: `"off"`, `"none"`, `"on"`, `"sentences"`, `"words"`, `"characters"`.
     */
    this.autocapitalize = 'off';
    /**
     * Set the input's autocomplete property.
     */
    this.autocomplete = 'off';
    /**
     * Set the input's autocorrect property.
     */
    this.autocorrect = 'off';
    /**
     * Set the cancel button icon. Only applies to `md` mode.
     * Defaults to `arrow-back-sharp`.
     */
    this.cancelButtonIcon = _index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.l.get('backButtonIcon', _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_5__.a);
    /**
     * Set the cancel button text. Only applies to `ios` mode.
     */
    this.cancelButtonText = 'Cancel';
    /**
     * If `true`, the user cannot interact with the input.
     */
    this.disabled = false;
    /**
     * If used in a form, set the name of the control, which is submitted with the form data.
     */
    this.name = this.inputId;
    /**
     * Set the input's placeholder.
     * `placeholder` can accept either plaintext or HTML as a string.
     * To display characters normally reserved for HTML, they
     * must be escaped. For example `<Ionic>` would become
     * `&lt;Ionic&gt;`
     *
     * For more information: [Security Documentation](https://ionicframework.com/docs/faq/security)
     */
    this.placeholder = 'Search';
    /**
     * Sets the behavior for the cancel button. Defaults to `"never"`.
     * Setting to `"focus"` shows the cancel button on focus.
     * Setting to `"never"` hides the cancel button.
     * Setting to `"always"` shows the cancel button regardless
     * of focus state.
     */
    this.showCancelButton = 'never';
    /**
     * Sets the behavior for the clear button. Defaults to `"focus"`.
     * Setting to `"focus"` shows the clear button on focus if the
     * input is not empty.
     * Setting to `"never"` hides the clear button.
     * Setting to `"always"` shows the clear button regardless
     * of focus state, but only if the input is not empty.
     */
    this.showClearButton = 'always';
    /**
     * If `true`, enable spellcheck on the input.
     */
    this.spellcheck = false;
    /**
     * Set the type of the input.
     */
    this.type = 'search';
    /**
     * the value of the searchbar.
     */
    this.value = '';
    /**
     * Clears the input field and triggers the control change.
     */
    this.onClearInput = /*#__PURE__*/function () {
      var _ref = (0,C_Users_Faizan_Desktop_Desktop_Projects_tactical_trap_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (shouldFocus) {
        _this.ionClear.emit();
        return new Promise(resolve => {
          // setTimeout() fixes https://github.com/ionic-team/ionic-framework/issues/7527
          // wait for 4 frames
          setTimeout(() => {
            const value = _this.getValue();
            if (value !== '') {
              _this.value = '';
              _this.emitInputChange();
              /**
               * When tapping clear button
               * ensure input is focused after
               * clearing input so users
               * can quickly start typing.
               */
              if (shouldFocus && !_this.focused) {
                _this.setFocus();
                /**
                 * The setFocus call above will clear focusedValue,
                 * but ionChange will never have gotten a chance to
                 * fire. Manually revert focusedValue so onBlur can
                 * compare against what was in the box before the clear.
                 */
                _this.focusedValue = value;
              }
            }
            resolve();
          }, 16 * 4);
        });
      });
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
    /**
     * Clears the input field and tells the input to blur since
     * the clearInput function doesn't want the input to blur
     * then calls the custom cancel function if the user passed one in.
     */
    this.onCancelSearchbar = /*#__PURE__*/function () {
      var _ref2 = (0,C_Users_Faizan_Desktop_Desktop_Projects_tactical_trap_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (ev) {
        if (ev) {
          ev.preventDefault();
          ev.stopPropagation();
        }
        _this.ionCancel.emit();
        // get cached values before clearing the input
        const value = _this.getValue();
        const focused = _this.focused;
        yield _this.onClearInput();
        /**
         * If there used to be something in the box, and we weren't focused
         * beforehand (meaning no blur fired that would already handle this),
         * manually fire ionChange.
         */
        if (value && !focused) {
          _this.emitValueChange(ev);
        }
        if (_this.nativeInput) {
          _this.nativeInput.blur();
        }
      });
      return function (_x2) {
        return _ref2.apply(this, arguments);
      };
    }();
    /**
     * Update the Searchbar input value when the input changes
     */
    this.onInput = ev => {
      const input = ev.target;
      if (input) {
        this.value = input.value;
      }
      this.emitInputChange(ev);
    };
    this.onChange = ev => {
      this.emitValueChange(ev);
    };
    /**
     * Sets the Searchbar to not focused and checks if it should align left
     * based on whether there is a value in the searchbar or not.
     */
    this.onBlur = ev => {
      this.focused = false;
      this.ionBlur.emit();
      this.positionElements();
      if (this.focusedValue !== this.value) {
        this.emitValueChange(ev);
      }
      this.focusedValue = undefined;
    };
    /**
     * Sets the Searchbar to focused and active on input focus.
     */
    this.onFocus = () => {
      this.focused = true;
      this.focusedValue = this.value;
      this.ionFocus.emit();
      this.positionElements();
    };
  }
  /**
   * lang and dir are globally enumerated attributes.
   * As a result, creating these as properties
   * can have unintended side effects. Instead, we
   * listen for attribute changes and inherit them
   * to the inner `<input>` element.
   */
  onLangChanged(newValue) {
    this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), {
      lang: newValue
    });
    (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.n)(this);
  }
  onDirChanged(newValue) {
    this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), {
      dir: newValue
    });
    (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.n)(this);
  }
  debounceChanged() {
    const {
      ionInput,
      debounce,
      originalIonInput
    } = this;
    /**
     * If debounce is undefined, we have to manually revert the ionInput emitter in case
     * debounce used to be set to a number. Otherwise, the event would stay debounced.
     */
    this.ionInput = debounce === undefined ? originalIonInput !== null && originalIonInput !== void 0 ? originalIonInput : ionInput : (0,_helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_2__.d)(ionInput, debounce);
  }
  valueChanged() {
    const inputEl = this.nativeInput;
    const value = this.getValue();
    if (inputEl && inputEl.value !== value) {
      inputEl.value = value;
    }
  }
  showCancelButtonChanged() {
    requestAnimationFrame(() => {
      this.positionElements();
      (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.n)(this);
    });
  }
  connectedCallback() {
    this.emitStyle();
  }
  componentWillLoad() {
    this.inheritedAttributes = Object.assign({}, (0,_helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_2__.b)(this.el, ['lang', 'dir']));
  }
  componentDidLoad() {
    this.originalIonInput = this.ionInput;
    this.positionElements();
    this.debounceChanged();
    setTimeout(() => {
      this.noAnimate = false;
    }, 300);
  }
  emitStyle() {
    this.ionStyle.emit({
      searchbar: true
    });
  }
  /**
   * Sets focus on the native `input` in `ion-searchbar`. Use this method instead of the global
   * `input.focus()`.
   *
   * Developers who wish to focus an input when a page enters
   * should call `setFocus()` in the `ionViewDidEnter()` lifecycle method.
   *
   * Developers who wish to focus an input when an overlay is presented
   * should call `setFocus` after `didPresent` has resolved.
   *
   * See [managing focus](/docs/developing/managing-focus) for more information.
   */
  setFocus() {
    var _this2 = this;
    return (0,C_Users_Faizan_Desktop_Desktop_Projects_tactical_trap_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this2.nativeInput) {
        _this2.nativeInput.focus();
      }
    })();
  }
  /**
   * Returns the native `<input>` element used under the hood.
   */
  getInputElement() {
    var _this3 = this;
    return (0,C_Users_Faizan_Desktop_Desktop_Projects_tactical_trap_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      /**
       * If this gets called in certain early lifecycle hooks (ex: Vue onMounted),
       * nativeInput won't be defined yet with the custom elements build, so wait for it to load in.
       */
      if (!_this3.nativeInput) {
        yield new Promise(resolve => (0,_helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_2__.c)(_this3.el, resolve));
      }
      return Promise.resolve(_this3.nativeInput);
    })();
  }
  /**
   * Emits an `ionChange` event.
   *
   * This API should be called for user committed changes.
   * This API should not be used for external value changes.
   */
  emitValueChange(event) {
    const {
      value
    } = this;
    // Checks for both null and undefined values
    const newValue = value == null ? value : value.toString();
    // Emitting a value change should update the internal state for tracking the focused value
    this.focusedValue = newValue;
    this.ionChange.emit({
      value: newValue,
      event
    });
  }
  /**
   * Emits an `ionInput` event.
   */
  emitInputChange(event) {
    const {
      value
    } = this;
    this.ionInput.emit({
      value,
      event
    });
  }
  /**
   * Positions the input search icon, placeholder, and the cancel button
   * based on the input value and if it is focused. (ios only)
   */
  positionElements() {
    const value = this.getValue();
    const prevAlignLeft = this.shouldAlignLeft;
    const mode = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.e)(this);
    const shouldAlignLeft = !this.animated || value.trim() !== '' || !!this.focused;
    this.shouldAlignLeft = shouldAlignLeft;
    if (mode !== 'ios') {
      return;
    }
    if (prevAlignLeft !== shouldAlignLeft) {
      this.positionPlaceholder();
    }
    if (this.animated) {
      this.positionCancelButton();
    }
  }
  /**
   * Positions the input placeholder
   */
  positionPlaceholder() {
    const inputEl = this.nativeInput;
    if (!inputEl) {
      return;
    }
    const rtl = (0,_dir_C53feagD_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.el);
    const iconEl = (this.el.shadowRoot || this.el).querySelector('.searchbar-search-icon');
    if (this.shouldAlignLeft) {
      inputEl.removeAttribute('style');
      iconEl.removeAttribute('style');
    } else {
      // Create a dummy span to get the placeholder width
      const doc = document;
      const tempSpan = doc.createElement('span');
      tempSpan.innerText = this.placeholder || '';
      doc.body.appendChild(tempSpan);
      // Get the width of the span then remove it
      (0,_helpers_1O4D2b7y_js__WEBPACK_IMPORTED_MODULE_2__.r)(() => {
        const textWidth = tempSpan.offsetWidth;
        tempSpan.remove();
        // Calculate the input padding
        const inputLeft = 'calc(50% - ' + textWidth / 2 + 'px)';
        // Calculate the icon margin
        /**
         * We take the icon width to account
         * for any text scales applied to the icon
         * such as Dynamic Type on iOS as well as 8px
         * of padding.
         */
        const iconLeft = 'calc(50% - ' + (textWidth / 2 + iconEl.clientWidth + 8) + 'px)';
        // Set the input padding start and icon margin start
        if (rtl) {
          inputEl.style.paddingRight = inputLeft;
          iconEl.style.marginRight = iconLeft;
        } else {
          inputEl.style.paddingLeft = inputLeft;
          iconEl.style.marginLeft = iconLeft;
        }
      });
    }
  }
  /**
   * Show the iOS Cancel button on focus, hide it offscreen otherwise
   */
  positionCancelButton() {
    const rtl = (0,_dir_C53feagD_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.el);
    const cancelButton = (this.el.shadowRoot || this.el).querySelector('.searchbar-cancel-button');
    const shouldShowCancel = this.shouldShowCancelButton();
    if (cancelButton !== null && shouldShowCancel !== this.isCancelVisible) {
      const cancelStyle = cancelButton.style;
      this.isCancelVisible = shouldShowCancel;
      if (shouldShowCancel) {
        if (rtl) {
          cancelStyle.marginLeft = '0';
        } else {
          cancelStyle.marginRight = '0';
        }
      } else {
        const offset = cancelButton.offsetWidth;
        if (offset > 0) {
          if (rtl) {
            cancelStyle.marginLeft = -offset + 'px';
          } else {
            cancelStyle.marginRight = -offset + 'px';
          }
        }
      }
    }
  }
  getValue() {
    return this.value || '';
  }
  hasValue() {
    return this.getValue() !== '';
  }
  /**
   * Determines whether or not the cancel button should be visible onscreen.
   * Cancel button should be shown if one of two conditions applies:
   * 1. `showCancelButton` is set to `always`.
   * 2. `showCancelButton` is set to `focus`, and the searchbar has been focused.
   */
  shouldShowCancelButton() {
    if (this.showCancelButton === 'never' || this.showCancelButton === 'focus' && !this.focused) {
      return false;
    }
    return true;
  }
  /**
   * Determines whether or not the clear button should be visible onscreen.
   * Clear button should be shown if one of two conditions applies:
   * 1. `showClearButton` is set to `always`.
   * 2. `showClearButton` is set to `focus`, and the searchbar has been focused.
   */
  shouldShowClearButton() {
    if (this.showClearButton === 'never' || this.showClearButton === 'focus' && !this.focused) {
      return false;
    }
    return true;
  }
  render() {
    const {
      cancelButtonText,
      autocapitalize
    } = this;
    const animated = this.animated && _index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.l.getBoolean('animated', true);
    const mode = (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.e)(this);
    const clearIcon = this.clearIcon || (mode === 'ios' ? _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_5__.b : _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_5__.d);
    const searchIcon = this.searchIcon || (mode === 'ios' ? _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_5__.s : _index_BLV6ykCk_js__WEBPACK_IMPORTED_MODULE_5__.e);
    const shouldShowCancelButton = this.shouldShowCancelButton();
    const cancelButton = this.showCancelButton !== 'never' && (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      key: '5835c36fcb0b52aec956538202a783f6c194d853',
      "aria-label": cancelButtonText,
      "aria-hidden": shouldShowCancelButton ? undefined : 'true',
      type: "button",
      tabIndex: mode === 'ios' && !shouldShowCancelButton ? -1 : undefined,
      onMouseDown: this.onCancelSearchbar,
      onTouchStart: this.onCancelSearchbar,
      class: "searchbar-cancel-button"
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      key: '85df41676bed611467bd4df0002b08baee4f539c',
      "aria-hidden": "true"
    }, mode === 'md' ? (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-icon", {
      "aria-hidden": "true",
      mode: mode,
      icon: this.cancelButtonIcon,
      lazy: false
    }) : cancelButtonText));
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.j, {
      key: 'e1e30cdd79f9f54d5f2d27501012358bc46880e5',
      role: "search",
      "aria-disabled": this.disabled ? 'true' : null,
      class: (0,_theme_DiVJyqlX_js__WEBPACK_IMPORTED_MODULE_4__.c)(this.color, {
        [mode]: true,
        'searchbar-animated': animated,
        'searchbar-disabled': this.disabled,
        'searchbar-no-animate': animated && this.noAnimate,
        'searchbar-has-value': this.hasValue(),
        'searchbar-left-aligned': this.shouldAlignLeft,
        'searchbar-has-focus': this.focused,
        'searchbar-should-show-clear': this.shouldShowClearButton(),
        'searchbar-should-show-cancel': this.shouldShowCancelButton()
      })
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      key: '7e9db147282a35bb1e3c9c6125b9a044e81ddde5',
      class: "searchbar-input-container"
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("input", Object.assign({
      key: '02f08da21326b78d6cd249d54deab96fd8472ba8',
      "aria-label": "search text",
      disabled: this.disabled,
      ref: el => this.nativeInput = el,
      class: "searchbar-input",
      inputMode: this.inputmode,
      enterKeyHint: this.enterkeyhint,
      name: this.name,
      onInput: this.onInput,
      onChange: this.onChange,
      onBlur: this.onBlur,
      onFocus: this.onFocus,
      minLength: this.minlength,
      maxLength: this.maxlength,
      placeholder: this.placeholder,
      type: this.type,
      value: this.getValue(),
      autoCapitalize: autocapitalize === 'default' ? undefined : autocapitalize,
      autoComplete: this.autocomplete,
      autoCorrect: this.autocorrect,
      spellcheck: this.spellcheck
    }, this.inheritedAttributes)), mode === 'md' && cancelButton, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-icon", {
      key: '048b00348456bd827ae734491c46a67bfb146227',
      "aria-hidden": "true",
      mode: mode,
      icon: searchIcon,
      lazy: false,
      class: "searchbar-search-icon"
    }), (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      key: '71f64339bbfd54ebd26a0946c8ee9d726cd89c04',
      "aria-label": "reset",
      type: "button",
      "no-blur": true,
      class: "searchbar-clear-button",
      onPointerDown: ev => {
        /**
         * This prevents mobile browsers from
         * blurring the input when the clear
         * button is activated.
         */
        ev.preventDefault();
      },
      onClick: () => this.onClearInput(true)
    }, (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-icon", {
      key: '9b1a177b21951c1c95897a468b34bb7bbd63d137',
      "aria-hidden": "true",
      mode: mode,
      icon: clearIcon,
      lazy: false,
      class: "searchbar-clear-icon"
    }))), mode === 'ios' && cancelButton);
  }
  get el() {
    return (0,_index_B_U9CtaY_js__WEBPACK_IMPORTED_MODULE_1__.k)(this);
  }
  static get watchers() {
    return {
      "lang": ["onLangChanged"],
      "dir": ["onDirChanged"],
      "debounce": ["debounceChanged"],
      "value": ["valueChanged"],
      "showCancelButton": ["showCancelButtonChanged"]
    };
  }
};
let searchbarIds = 0;
Searchbar.style = {
  ios: searchbarIosCss,
  md: searchbarMdCss
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLXNlYXJjaGJhcl9lbnRyeV9qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUM2SjtBQUN6QztBQUNyRTtBQUNlO0FBQ3FFO0FBRW5JLE1BQU0rQixlQUFlLEdBQUcsazJSQUFrMlI7QUFFMTNSLE1BQU1DLGNBQWMsR0FBRyw0Nk5BQTQ2TjtBQUVuOE4sTUFBTUMsU0FBUyxHQUFHLE1BQU07RUFDcEJDLFdBQVdBLENBQUNDLE9BQU8sRUFBRTtJQUFBLElBQUFDLEtBQUE7SUFDakJuQyxxREFBZ0IsQ0FBQyxJQUFJLEVBQUVrQyxPQUFPLENBQUM7SUFDL0IsSUFBSSxDQUFDRSxRQUFRLEdBQUdsQyxxREFBVyxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELElBQUksQ0FBQ21DLFNBQVMsR0FBR25DLHFEQUFXLENBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxDQUFDLENBQUM7SUFDbEQsSUFBSSxDQUFDb0MsU0FBUyxHQUFHcEMscURBQVcsQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQztJQUNsRCxJQUFJLENBQUNxQyxRQUFRLEdBQUdyQyxxREFBVyxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELElBQUksQ0FBQ3NDLE9BQU8sR0FBR3RDLHFEQUFXLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7SUFDOUMsSUFBSSxDQUFDdUMsUUFBUSxHQUFHdkMscURBQVcsQ0FBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQztJQUNoRCxJQUFJLENBQUN3QyxRQUFRLEdBQUd4QyxxREFBVyxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELElBQUksQ0FBQ3lDLGVBQWUsR0FBRyxLQUFLO0lBQzVCLElBQUksQ0FBQ0MsZUFBZSxHQUFHLElBQUk7SUFD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O01BQUVxRyxPQUFPLEVBQUVBLENBQUEsS0FBTSxJQUFJLENBQUN2SCxZQUFZLENBQUMsSUFBSTtJQUFFLENBQUMsRUFBRXhELHFEQUFDLENBQUMsVUFBVSxFQUFFO01BQUV5SixHQUFHLEVBQUUsMENBQTBDO01BQUUsYUFBYSxFQUFFLE1BQU07TUFBRXRDLElBQUksRUFBRUEsSUFBSTtNQUFFMkMsSUFBSSxFQUFFUCxTQUFTO01BQUVRLElBQUksRUFBRSxLQUFLO01BQUVGLEtBQUssRUFBRTtJQUF1QixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUxQyxJQUFJLEtBQUssS0FBSyxJQUFJMkIsWUFBWSxDQUFDO0VBQzFQO0VBQ0EsSUFBSXJDLEVBQUVBLENBQUEsRUFBRztJQUFFLE9BQU9yRyxxREFBVSxDQUFDLElBQUksQ0FBQztFQUFFO0VBQ3BDLFdBQVc0SyxRQUFRQSxDQUFBLEVBQUc7SUFBRSxPQUFPO01BQzNCLE1BQU0sRUFBRSxDQUFDLGVBQWUsQ0FBQztNQUN6QixLQUFLLEVBQUUsQ0FBQyxjQUFjLENBQUM7TUFDdkIsVUFBVSxFQUFFLENBQUMsaUJBQWlCLENBQUM7TUFDL0IsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDO01BQ3pCLGtCQUFrQixFQUFFLENBQUMseUJBQXlCO0lBQ2xELENBQUM7RUFBRTtBQUNQLENBQUM7QUFDRCxJQUFJM0ksWUFBWSxHQUFHLENBQUM7QUFDcEJkLFNBQVMsQ0FBQ2tILEtBQUssR0FBRztFQUNkd0MsR0FBRyxFQUFFNUosZUFBZTtFQUNwQjZKLEVBQUUsRUFBRTVKO0FBQ1IsQ0FBQyIsInNvdXJjZXMiOlsiLi9ub2RlX21vZHVsZXMvQGlvbmljL2NvcmUvZGlzdC9lc20vaW9uLXNlYXJjaGJhci5lbnRyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIChDKSBJb25pYyBodHRwOi8vaW9uaWNmcmFtZXdvcmsuY29tIC0gTUlUIExpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgciBhcyByZWdpc3Rlckluc3RhbmNlLCBkIGFzIGNyZWF0ZUV2ZW50LCBsIGFzIGNvbmZpZywgbiBhcyBmb3JjZVVwZGF0ZSwgZSBhcyBnZXRJb25Nb2RlLCBoLCBqIGFzIEhvc3QsIGsgYXMgZ2V0RWxlbWVudCB9IGZyb20gJy4vaW5kZXgtQl9VOUN0YVkuanMnO1xuaW1wb3J0IHsgZCBhcyBkZWJvdW5jZUV2ZW50LCBiIGFzIGluaGVyaXRBdHRyaWJ1dGVzLCBjIGFzIGNvbXBvbmVudE9uUmVhZHksIHIgYXMgcmFmIH0gZnJvbSAnLi9oZWxwZXJzLTFPNEQyYjd5LmpzJztcbmltcG9ydCB7IGkgYXMgaXNSVEwgfSBmcm9tICcuL2Rpci1DNTNmZWFnRC5qcyc7XG5pbXBvcnQgeyBjIGFzIGNyZWF0ZUNvbG9yQ2xhc3NlcyB9IGZyb20gJy4vdGhlbWUtRGlWSnlxbFguanMnO1xuaW1wb3J0IHsgYSBhcyBhcnJvd0JhY2tTaGFycCwgcyBhcyBzZWFyY2hPdXRsaW5lLCBlIGFzIHNlYXJjaFNoYXJwLCBiIGFzIGNsb3NlQ2lyY2xlLCBkIGFzIGNsb3NlU2hhcnAgfSBmcm9tICcuL2luZGV4LUJMVjZ5a0NrLmpzJztcblxuY29uc3Qgc2VhcmNoYmFySW9zQ3NzID0gXCIuc2MtaW9uLXNlYXJjaGJhci1pb3MtaHstLXBsYWNlaG9sZGVyLWNvbG9yOmluaXRpYWw7LS1wbGFjZWhvbGRlci1mb250LXN0eWxlOmluaXRpYWw7LS1wbGFjZWhvbGRlci1mb250LXdlaWdodDppbml0aWFsOy0tcGxhY2Vob2xkZXItb3BhY2l0eTp2YXIoLS1pb24tcGxhY2Vob2xkZXItb3BhY2l0eSwgMC42KTstbW96LW9zeC1mb250LXNtb290aGluZzpncmF5c2NhbGU7LXdlYmtpdC1mb250LXNtb290aGluZzphbnRpYWxpYXNlZDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDtwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3dpZHRoOjEwMCU7Y29sb3I6dmFyKC0tY29sb3IpO2ZvbnQtZmFtaWx5OnZhcigtLWlvbi1mb250LWZhbWlseSwgaW5oZXJpdCk7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fS5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1pb3MtaHtjb2xvcjp2YXIoLS1pb24tY29sb3ItY29udHJhc3QpfS5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLWlucHV0LnNjLWlvbi1zZWFyY2hiYXItaW9ze2JhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLWJhc2UpfS5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLWNsZWFyLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvcywuaW9uLWNvbG9yLnNjLWlvbi1zZWFyY2hiYXItaW9zLWggLnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItaW9zLC5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLXNlYXJjaC1pY29uLnNjLWlvbi1zZWFyY2hiYXItaW9ze2NvbG9yOmluaGVyaXR9LnNlYXJjaGJhci1zZWFyY2gtaWNvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3tjb2xvcjp2YXIoLS1pY29uLWNvbG9yKTtwb2ludGVyLWV2ZW50czpub25lfS5zZWFyY2hiYXItaW5wdXQtY29udGFpbmVyLnNjLWlvbi1zZWFyY2hiYXItaW9ze2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXgtbmVnYXRpdmU6MTtmbGV4LXNocmluazoxO3dpZHRoOjEwMCV9LnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLWlvc3tmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtc3R5bGU6aW5oZXJpdDtmb250LXdlaWdodDppbmhlcml0O2xldHRlci1zcGFjaW5nOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOmluaGVyaXQ7dGV4dC1pbmRlbnQ6aW5oZXJpdDt0ZXh0LW92ZXJmbG93OmluaGVyaXQ7dGV4dC10cmFuc2Zvcm06aW5oZXJpdDt0ZXh0LWFsaWduOmluaGVyaXQ7d2hpdGUtc3BhY2U6aW5oZXJpdDtjb2xvcjppbmhlcml0O2JvcmRlci1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21pbi1oZWlnaHQ6aW5oZXJpdDtib3JkZXI6MDtvdXRsaW5lOm5vbmU7YmFja2dyb3VuZDp2YXIoLS1iYWNrZ3JvdW5kKTtmb250LWZhbWlseTppbmhlcml0Oy13ZWJraXQtYm94LXNoYWRvdzp2YXIoLS1ib3gtc2hhZG93KTtib3gtc2hhZG93OnZhcigtLWJveC1zaGFkb3cpOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9LnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLWlvczo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjp2YXIoLS1wbGFjZWhvbGRlci1jb2xvcik7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXN0eWxlOnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtc3R5bGUpO2ZvbnQtd2VpZ2h0OnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtd2VpZ2h0KTtvcGFjaXR5OnZhcigtLXBsYWNlaG9sZGVyLW9wYWNpdHkpfS5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1pb3M6Oi1tb3otcGxhY2Vob2xkZXJ7Y29sb3I6dmFyKC0tcGxhY2Vob2xkZXItY29sb3IpO2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zdHlsZTp2YXIoLS1wbGFjZWhvbGRlci1mb250LXN0eWxlKTtmb250LXdlaWdodDp2YXIoLS1wbGFjZWhvbGRlci1mb250LXdlaWdodCk7b3BhY2l0eTp2YXIoLS1wbGFjZWhvbGRlci1vcGFjaXR5KX0uc2VhcmNoYmFyLWlucHV0LnNjLWlvbi1zZWFyY2hiYXItaW9zOi1tcy1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjp2YXIoLS1wbGFjZWhvbGRlci1jb2xvcik7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXN0eWxlOnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtc3R5bGUpO2ZvbnQtd2VpZ2h0OnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtd2VpZ2h0KTtvcGFjaXR5OnZhcigtLXBsYWNlaG9sZGVyLW9wYWNpdHkpfS5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1pb3M6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjp2YXIoLS1wbGFjZWhvbGRlci1jb2xvcik7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXN0eWxlOnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtc3R5bGUpO2ZvbnQtd2VpZ2h0OnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtd2VpZ2h0KTtvcGFjaXR5OnZhcigtLXBsYWNlaG9sZGVyLW9wYWNpdHkpfS5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1pb3M6OnBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9LnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLWlvczo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiwuc2VhcmNoYmFyLWlucHV0LnNjLWlvbi1zZWFyY2hiYXItaW9zOjotbXMtY2xlYXJ7ZGlzcGxheTpub25lfS5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3ttYXJnaW4tbGVmdDowO21hcmdpbi1yaWdodDowO21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjA7ZGlzcGxheTpub25lO2hlaWdodDoxMDAlO2JvcmRlcjowO291dGxpbmU6bm9uZTtjb2xvcjp2YXIoLS1jYW5jZWwtYnV0dG9uLWNvbG9yKTtjdXJzb3I6cG9pbnRlcjstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9LnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItaW9zPmRpdi5zYy1pb24tc2VhcmNoYmFyLWlvc3tkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0uc2VhcmNoYmFyLWNsZWFyLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3ttYXJnaW4tbGVmdDowO21hcmdpbi1yaWdodDowO21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjA7cGFkZGluZy1sZWZ0OjA7cGFkZGluZy1yaWdodDowO3BhZGRpbmctdG9wOjA7cGFkZGluZy1ib3R0b206MDtkaXNwbGF5Om5vbmU7bWluLWhlaWdodDowO291dGxpbmU6bm9uZTtjb2xvcjp2YXIoLS1jbGVhci1idXR0b24tY29sb3IpOy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZX0uc2VhcmNoYmFyLWNsZWFyLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvczpmb2N1c3tvcGFjaXR5OjAuNX0uc2VhcmNoYmFyLWhhcy12YWx1ZS5zZWFyY2hiYXItc2hvdWxkLXNob3ctY2xlYXIuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLWNsZWFyLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3tkaXNwbGF5OmJsb2NrfS5zZWFyY2hiYXItZGlzYWJsZWQuc2MtaW9uLXNlYXJjaGJhci1pb3MtaHtjdXJzb3I6ZGVmYXVsdDtvcGFjaXR5OjAuNDtwb2ludGVyLWV2ZW50czpub25lfS5zYy1pb24tc2VhcmNoYmFyLWlvcy1oey0tYmFja2dyb3VuZDpyZ2JhKHZhcigtLWlvbi10ZXh0LWNvbG9yLXJnYiwgMCwgMCwgMCksIDAuMDcpOy0tYm9yZGVyLXJhZGl1czoxMHB4Oy0tYm94LXNoYWRvdzpub25lOy0tY2FuY2VsLWJ1dHRvbi1jb2xvcjp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzAwNTRlOSk7LS1jbGVhci1idXR0b24tY29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtNjAwLCB2YXIoLS1pb24tdGV4dC1jb2xvci1zdGVwLTQwMCwgIzY2NjY2NikpOy0tY29sb3I6dmFyKC0taW9uLXRleHQtY29sb3IsICMwMDApOy0taWNvbi1jb2xvcjp2YXIoLS1pb24tY29sb3Itc3RlcC02MDAsIHZhcigtLWlvbi10ZXh0LWNvbG9yLXN0ZXAtNDAwLCAjNjY2NjY2KSk7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjEycHg7cGFkZGluZy1pbmxpbmUtc3RhcnQ6MTJweDstd2Via2l0LXBhZGRpbmctZW5kOjEycHg7cGFkZGluZy1pbmxpbmUtZW5kOjEycHg7cGFkZGluZy10b3A6MTJweDtwYWRkaW5nLWJvdHRvbToxMnB4O21pbi1oZWlnaHQ6NjBweDtjb250YWluOmNvbnRlbnR9LnNlYXJjaGJhci1pbnB1dC1jb250YWluZXIuc2MtaW9uLXNlYXJjaGJhci1pb3N7bWluLWhlaWdodDozNnB4fS5zZWFyY2hiYXItc2VhcmNoLWljb24uc2MtaW9uLXNlYXJjaGJhci1pb3N7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6Y2FsYyg1MCUgLSA2MHB4KTttYXJnaW4taW5saW5lLXN0YXJ0OmNhbGMoNTAlIC0gNjBweCk7dG9wOjA7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MS4zNzVyZW07aGVpZ2h0OjEwMCU7Y29udGFpbjpzdHJpY3R9LnNlYXJjaGJhci1zZWFyY2gtaWNvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3tpbnNldC1pbmxpbmUtc3RhcnQ6NXB4fS5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1pb3N7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjBweDtwYWRkaW5nLWlubGluZS1zdGFydDowcHg7LXdlYmtpdC1wYWRkaW5nLWVuZDowcHg7cGFkZGluZy1pbmxpbmUtZW5kOjBweDtwYWRkaW5nLXRvcDo2cHg7cGFkZGluZy1ib3R0b206NnB4O2hlaWdodDoxMDAlO2ZvbnQtc2l6ZToxLjA2MjVyZW07Zm9udC13ZWlnaHQ6NDAwO2NvbnRhaW46c3RyaWN0fS5zZWFyY2hiYXItaGFzLXZhbHVlLnNlYXJjaGJhci1zaG91bGQtc2hvdy1jbGVhci5zYy1pb24tc2VhcmNoYmFyLWlvcy1oIC5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1pb3N7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjEuNzVyZW07cGFkZGluZy1pbmxpbmUtc3RhcnQ6MS43NXJlbTstd2Via2l0LXBhZGRpbmctZW5kOjEuNzVyZW07cGFkZGluZy1pbmxpbmUtZW5kOjEuNzVyZW19LnNlYXJjaGJhci1jbGVhci1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1pb3N7dG9wOjA7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MS44NzVyZW07aGVpZ2h0OjEwMCU7Ym9yZGVyOjA7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uc2VhcmNoYmFyLWNsZWFyLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3tpbnNldC1pbmxpbmUtZW5kOjB9LnNlYXJjaGJhci1jbGVhci1pY29uLnNjLWlvbi1zZWFyY2hiYXItaW9ze3dpZHRoOjEuMTI1cmVtO2hlaWdodDoxMDAlfS5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3std2Via2l0LXBhZGRpbmctc3RhcnQ6MTJweDtwYWRkaW5nLWlubGluZS1zdGFydDoxMnB4Oy13ZWJraXQtcGFkZGluZy1lbmQ6MDtwYWRkaW5nLWlubGluZS1lbmQ6MDtwYWRkaW5nLXRvcDowO3BhZGRpbmctYm90dG9tOjA7LW1zLWZsZXgtbmVnYXRpdmU6MDtmbGV4LXNocmluazowO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Zm9udC1zaXplOjE3cHh9LnNlYXJjaGJhci1sZWZ0LWFsaWduZWQuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLXNlYXJjaC1pY29uLnNjLWlvbi1zZWFyY2hiYXItaW9zey13ZWJraXQtbWFyZ2luLXN0YXJ0OjA7bWFyZ2luLWlubGluZS1zdGFydDowfS5zZWFyY2hiYXItbGVmdC1hbGlnbmVkLnNjLWlvbi1zZWFyY2hiYXItaW9zLWggLnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLWlvc3std2Via2l0LXBhZGRpbmctc3RhcnQ6MS44NzVyZW07cGFkZGluZy1pbmxpbmUtc3RhcnQ6MS44NzVyZW19LnNlYXJjaGJhci1oYXMtZm9jdXMuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLWNhbmNlbC1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1pb3MsLnNlYXJjaGJhci1zaG91bGQtc2hvdy1jYW5jZWwuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLWNhbmNlbC1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1pb3MsLnNlYXJjaGJhci1hbmltYXRlZC5zYy1pb24tc2VhcmNoYmFyLWlvcy1oIC5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3tkaXNwbGF5OmJsb2NrfS5zZWFyY2hiYXItYW5pbWF0ZWQuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLXNlYXJjaC1pY29uLnNjLWlvbi1zZWFyY2hiYXItaW9zLC5zZWFyY2hiYXItYW5pbWF0ZWQuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLWlucHV0LnNjLWlvbi1zZWFyY2hiYXItaW9zey13ZWJraXQtdHJhbnNpdGlvbjphbGwgMzAwbXMgZWFzZTt0cmFuc2l0aW9uOmFsbCAzMDBtcyBlYXNlfS5zZWFyY2hiYXItYW5pbWF0ZWQuc2VhcmNoYmFyLWhhcy1mb2N1cy5zYy1pb24tc2VhcmNoYmFyLWlvcy1oIC5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvcywuc2VhcmNoYmFyLWFuaW1hdGVkLnNlYXJjaGJhci1zaG91bGQtc2hvdy1jYW5jZWwuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLWNhbmNlbC1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1pb3N7b3BhY2l0eToxO3BvaW50ZXItZXZlbnRzOmF1dG99LnNlYXJjaGJhci1hbmltYXRlZC5zYy1pb24tc2VhcmNoYmFyLWlvcy1oIC5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3std2Via2l0LW1hcmdpbi1lbmQ6LTEwMCU7bWFyZ2luLWlubGluZS1lbmQ6LTEwMCU7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgIDAsICAwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgIDAsICAwKTstd2Via2l0LXRyYW5zaXRpb246YWxsIDMwMG1zIGVhc2U7dHJhbnNpdGlvbjphbGwgMzAwbXMgZWFzZTtvcGFjaXR5OjA7cG9pbnRlci1ldmVudHM6bm9uZX0uc2VhcmNoYmFyLW5vLWFuaW1hdGUuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLXNlYXJjaC1pY29uLnNjLWlvbi1zZWFyY2hiYXItaW9zLC5zZWFyY2hiYXItbm8tYW5pbWF0ZS5zYy1pb24tc2VhcmNoYmFyLWlvcy1oIC5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1pb3MsLnNlYXJjaGJhci1uby1hbmltYXRlLnNjLWlvbi1zZWFyY2hiYXItaW9zLWggLnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItaW9zey13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbjowbXM7dHJhbnNpdGlvbi1kdXJhdGlvbjowbXN9Lmlvbi1jb2xvci5zYy1pb24tc2VhcmNoYmFyLWlvcy1oIC5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLWlvc3tjb2xvcjp2YXIoLS1pb24tY29sb3ItYmFzZSl9QG1lZGlhIChhbnktaG92ZXI6IGhvdmVyKXsuaW9uLWNvbG9yLnNjLWlvbi1zZWFyY2hiYXItaW9zLWggLnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItaW9zOmhvdmVye2NvbG9yOnZhcigtLWlvbi1jb2xvci10aW50KX19aW9uLXRvb2xiYXIuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCxpb24tdG9vbGJhciAuc2MtaW9uLXNlYXJjaGJhci1pb3MtaHtwYWRkaW5nLXRvcDoxcHg7cGFkZGluZy1ib3R0b206MTVweDttaW4taGVpZ2h0OjUycHh9aW9uLXRvb2xiYXIuaW9uLWNvbG9yLnNjLWlvbi1zZWFyY2hiYXItaW9zLWg6bm90KC5pb24tY29sb3IpLGlvbi10b29sYmFyLmlvbi1jb2xvciAuc2MtaW9uLXNlYXJjaGJhci1pb3MtaDpub3QoLmlvbi1jb2xvcil7Y29sb3I6aW5oZXJpdH1pb24tdG9vbGJhci5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1pb3MtaDpub3QoLmlvbi1jb2xvcikgLnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItaW9zLGlvbi10b29sYmFyLmlvbi1jb2xvciAuc2MtaW9uLXNlYXJjaGJhci1pb3MtaDpub3QoLmlvbi1jb2xvcikgLnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItaW9ze2NvbG9yOmN1cnJlbnRDb2xvcn1pb24tdG9vbGJhci5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLXNlYXJjaC1pY29uLnNjLWlvbi1zZWFyY2hiYXItaW9zLGlvbi10b29sYmFyLmlvbi1jb2xvciAuc2MtaW9uLXNlYXJjaGJhci1pb3MtaCAuc2VhcmNoYmFyLXNlYXJjaC1pY29uLnNjLWlvbi1zZWFyY2hiYXItaW9ze2NvbG9yOmN1cnJlbnRDb2xvcjtvcGFjaXR5OjAuNX1pb24tdG9vbGJhci5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1pb3MtaDpub3QoLmlvbi1jb2xvcikgLnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLWlvcyxpb24tdG9vbGJhci5pb24tY29sb3IgLnNjLWlvbi1zZWFyY2hiYXItaW9zLWg6bm90KC5pb24tY29sb3IpIC5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1pb3N7YmFja2dyb3VuZDpyZ2JhKHZhcigtLWlvbi1jb2xvci1jb250cmFzdC1yZ2IpLCAwLjA3KTtjb2xvcjpjdXJyZW50Q29sb3J9aW9uLXRvb2xiYXIuaW9uLWNvbG9yLnNjLWlvbi1zZWFyY2hiYXItaW9zLWg6bm90KC5pb24tY29sb3IpIC5zZWFyY2hiYXItY2xlYXItYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItaW9zLGlvbi10b29sYmFyLmlvbi1jb2xvciAuc2MtaW9uLXNlYXJjaGJhci1pb3MtaDpub3QoLmlvbi1jb2xvcikgLnNlYXJjaGJhci1jbGVhci1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1pb3N7Y29sb3I6Y3VycmVudENvbG9yO29wYWNpdHk6MC41fVwiO1xuXG5jb25zdCBzZWFyY2hiYXJNZENzcyA9IFwiLnNjLWlvbi1zZWFyY2hiYXItbWQtaHstLXBsYWNlaG9sZGVyLWNvbG9yOmluaXRpYWw7LS1wbGFjZWhvbGRlci1mb250LXN0eWxlOmluaXRpYWw7LS1wbGFjZWhvbGRlci1mb250LXdlaWdodDppbml0aWFsOy0tcGxhY2Vob2xkZXItb3BhY2l0eTp2YXIoLS1pb24tcGxhY2Vob2xkZXItb3BhY2l0eSwgMC42KTstbW96LW9zeC1mb250LXNtb290aGluZzpncmF5c2NhbGU7LXdlYmtpdC1mb250LXNtb290aGluZzphbnRpYWxpYXNlZDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDtwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3dpZHRoOjEwMCU7Y29sb3I6dmFyKC0tY29sb3IpO2ZvbnQtZmFtaWx5OnZhcigtLWlvbi1mb250LWZhbWlseSwgaW5oZXJpdCk7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fS5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1tZC1oe2NvbG9yOnZhcigtLWlvbi1jb2xvci1jb250cmFzdCl9Lmlvbi1jb2xvci5zYy1pb24tc2VhcmNoYmFyLW1kLWggLnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLW1ke2JhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLWJhc2UpfS5pb24tY29sb3Iuc2MtaW9uLXNlYXJjaGJhci1tZC1oIC5zZWFyY2hiYXItY2xlYXItYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItbWQsLmlvbi1jb2xvci5zYy1pb24tc2VhcmNoYmFyLW1kLWggLnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItbWQsLmlvbi1jb2xvci5zYy1pb24tc2VhcmNoYmFyLW1kLWggLnNlYXJjaGJhci1zZWFyY2gtaWNvbi5zYy1pb24tc2VhcmNoYmFyLW1ke2NvbG9yOmluaGVyaXR9LnNlYXJjaGJhci1zZWFyY2gtaWNvbi5zYy1pb24tc2VhcmNoYmFyLW1ke2NvbG9yOnZhcigtLWljb24tY29sb3IpO3BvaW50ZXItZXZlbnRzOm5vbmV9LnNlYXJjaGJhci1pbnB1dC1jb250YWluZXIuc2MtaW9uLXNlYXJjaGJhci1tZHtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4LW5lZ2F0aXZlOjE7ZmxleC1zaHJpbms6MTt3aWR0aDoxMDAlfS5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1tZHtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtc3R5bGU6aW5oZXJpdDtmb250LXdlaWdodDppbmhlcml0O2xldHRlci1zcGFjaW5nOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOmluaGVyaXQ7dGV4dC1pbmRlbnQ6aW5oZXJpdDt0ZXh0LW92ZXJmbG93OmluaGVyaXQ7dGV4dC10cmFuc2Zvcm06aW5oZXJpdDt0ZXh0LWFsaWduOmluaGVyaXQ7d2hpdGUtc3BhY2U6aW5oZXJpdDtjb2xvcjppbmhlcml0O2JvcmRlci1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21pbi1oZWlnaHQ6aW5oZXJpdDtib3JkZXI6MDtvdXRsaW5lOm5vbmU7YmFja2dyb3VuZDp2YXIoLS1iYWNrZ3JvdW5kKTtmb250LWZhbWlseTppbmhlcml0Oy13ZWJraXQtYm94LXNoYWRvdzp2YXIoLS1ib3gtc2hhZG93KTtib3gtc2hhZG93OnZhcigtLWJveC1zaGFkb3cpOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9LnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLW1kOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9LnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLW1kOjotbW96LXBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9LnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLW1kOi1tcy1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjp2YXIoLS1wbGFjZWhvbGRlci1jb2xvcik7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXN0eWxlOnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtc3R5bGUpO2ZvbnQtd2VpZ2h0OnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtd2VpZ2h0KTtvcGFjaXR5OnZhcigtLXBsYWNlaG9sZGVyLW9wYWNpdHkpfS5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1tZDo6LW1zLWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOnZhcigtLXBsYWNlaG9sZGVyLWNvbG9yKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc3R5bGU6dmFyKC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZSk7Zm9udC13ZWlnaHQ6dmFyKC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQpO29wYWNpdHk6dmFyKC0tcGxhY2Vob2xkZXItb3BhY2l0eSl9LnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLW1kOjpwbGFjZWhvbGRlcntjb2xvcjp2YXIoLS1wbGFjZWhvbGRlci1jb2xvcik7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXN0eWxlOnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtc3R5bGUpO2ZvbnQtd2VpZ2h0OnZhcigtLXBsYWNlaG9sZGVyLWZvbnQtd2VpZ2h0KTtvcGFjaXR5OnZhcigtLXBsYWNlaG9sZGVyLW9wYWNpdHkpfS5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1tZDo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiwuc2VhcmNoYmFyLWlucHV0LnNjLWlvbi1zZWFyY2hiYXItbWQ6Oi1tcy1jbGVhcntkaXNwbGF5Om5vbmV9LnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItbWR7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowO2Rpc3BsYXk6bm9uZTtoZWlnaHQ6MTAwJTtib3JkZXI6MDtvdXRsaW5lOm5vbmU7Y29sb3I6dmFyKC0tY2FuY2VsLWJ1dHRvbi1jb2xvcik7Y3Vyc29yOnBvaW50ZXI7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfS5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLW1kPmRpdi5zYy1pb24tc2VhcmNoYmFyLW1ke2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlfS5zZWFyY2hiYXItY2xlYXItYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItbWR7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowO3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLXRvcDowO3BhZGRpbmctYm90dG9tOjA7ZGlzcGxheTpub25lO21pbi1oZWlnaHQ6MDtvdXRsaW5lOm5vbmU7Y29sb3I6dmFyKC0tY2xlYXItYnV0dG9uLWNvbG9yKTstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9LnNlYXJjaGJhci1jbGVhci1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1tZDpmb2N1c3tvcGFjaXR5OjAuNX0uc2VhcmNoYmFyLWhhcy12YWx1ZS5zZWFyY2hiYXItc2hvdWxkLXNob3ctY2xlYXIuc2MtaW9uLXNlYXJjaGJhci1tZC1oIC5zZWFyY2hiYXItY2xlYXItYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItbWR7ZGlzcGxheTpibG9ja30uc2VhcmNoYmFyLWRpc2FibGVkLnNjLWlvbi1zZWFyY2hiYXItbWQtaHtjdXJzb3I6ZGVmYXVsdDtvcGFjaXR5OjAuNDtwb2ludGVyLWV2ZW50czpub25lfS5zYy1pb24tc2VhcmNoYmFyLW1kLWh7LS1iYWNrZ3JvdW5kOnZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLCAjZmZmKTstLWJvcmRlci1yYWRpdXM6MnB4Oy0tYm94LXNoYWRvdzowIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7LS1jYW5jZWwtYnV0dG9uLWNvbG9yOnZhcigtLWlvbi1jb2xvci1zdGVwLTkwMCwgdmFyKC0taW9uLXRleHQtY29sb3Itc3RlcC0xMDAsICMxYTFhMWEpKTstLWNsZWFyLWJ1dHRvbi1jb2xvcjppbml0aWFsOy0tY29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtODUwLCB2YXIoLS1pb24tdGV4dC1jb2xvci1zdGVwLTE1MCwgIzI2MjYyNikpOy0taWNvbi1jb2xvcjp2YXIoLS1pb24tY29sb3Itc3RlcC02MDAsIHZhcigtLWlvbi10ZXh0LWNvbG9yLXN0ZXAtNDAwLCAjNjY2NjY2KSk7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjhweDtwYWRkaW5nLWlubGluZS1zdGFydDo4cHg7LXdlYmtpdC1wYWRkaW5nLWVuZDo4cHg7cGFkZGluZy1pbmxpbmUtZW5kOjhweDtwYWRkaW5nLXRvcDo4cHg7cGFkZGluZy1ib3R0b206OHB4O2JhY2tncm91bmQ6aW5oZXJpdH0uc2VhcmNoYmFyLXNlYXJjaC1pY29uLnNjLWlvbi1zZWFyY2hiYXItbWR7dG9wOjExcHg7d2lkdGg6MS4zMTI1cmVtO2hlaWdodDoxLjMxMjVyZW19LnNlYXJjaGJhci1zZWFyY2gtaWNvbi5zYy1pb24tc2VhcmNoYmFyLW1ke2luc2V0LWlubGluZS1zdGFydDoxNnB4fS5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLW1ke3RvcDowO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Zm9udC1zaXplOjEuNWVtfS5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLW1ke2luc2V0LWlubGluZS1zdGFydDo5cHh9LnNlYXJjaGJhci1zZWFyY2gtaWNvbi5zYy1pb24tc2VhcmNoYmFyLW1kLC5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5zYy1pb24tc2VhcmNoYmFyLW1ke3Bvc2l0aW9uOmFic29sdXRlfS5zZWFyY2hiYXItc2VhcmNoLWljb24uaW9uLWFjdGl2YXRlZC5zYy1pb24tc2VhcmNoYmFyLW1kLC5zZWFyY2hiYXItY2FuY2VsLWJ1dHRvbi5pb24tYWN0aXZhdGVkLnNjLWlvbi1zZWFyY2hiYXItbWR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uc2VhcmNoYmFyLWlucHV0LnNjLWlvbi1zZWFyY2hiYXItbWR7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjMuNDM3NXJlbTtwYWRkaW5nLWlubGluZS1zdGFydDozLjQzNzVyZW07LXdlYmtpdC1wYWRkaW5nLWVuZDozLjQzNzVyZW07cGFkZGluZy1pbmxpbmUtZW5kOjMuNDM3NXJlbTtwYWRkaW5nLXRvcDowLjM3NXJlbTtwYWRkaW5nLWJvdHRvbTowLjM3NXJlbTtiYWNrZ3JvdW5kLXBvc2l0aW9uOmxlZnQgOHB4IGNlbnRlcjtoZWlnaHQ6YXV0bztmb250LXNpemU6MXJlbTtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MzBweH1bZGlyPXJ0bF0uc2MtaW9uLXNlYXJjaGJhci1tZC1oIC5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1tZCxbZGlyPXJ0bF0gLnNjLWlvbi1zZWFyY2hiYXItbWQtaCAuc2VhcmNoYmFyLWlucHV0LnNjLWlvbi1zZWFyY2hiYXItbWR7YmFja2dyb3VuZC1wb3NpdGlvbjpyaWdodCA4cHggY2VudGVyfVtkaXI9cnRsXS5zYy1pb24tc2VhcmNoYmFyLW1kIC5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1tZHtiYWNrZ3JvdW5kLXBvc2l0aW9uOnJpZ2h0IDhweCBjZW50ZXJ9QHN1cHBvcnRzIHNlbGVjdG9yKDpkaXIocnRsKSl7LnNlYXJjaGJhci1pbnB1dC5zYy1pb24tc2VhcmNoYmFyLW1kOmRpcihydGwpe2JhY2tncm91bmQtcG9zaXRpb246cmlnaHQgOHB4IGNlbnRlcn19LnNlYXJjaGJhci1jbGVhci1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1tZHt0b3A6MDtwYWRkaW5nLWxlZnQ6MDtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy10b3A6MDtwYWRkaW5nLWJvdHRvbTowO3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDAlO2JvcmRlcjowO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LnNlYXJjaGJhci1jbGVhci1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1tZHtpbnNldC1pbmxpbmUtZW5kOjEzcHh9LnNlYXJjaGJhci1jbGVhci1idXR0b24uaW9uLWFjdGl2YXRlZC5zYy1pb24tc2VhcmNoYmFyLW1ke2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LnNlYXJjaGJhci1jbGVhci1pY29uLnNjLWlvbi1zZWFyY2hiYXItbWR7d2lkdGg6MS4zNzVyZW07aGVpZ2h0OjEwMCV9LnNlYXJjaGJhci1oYXMtZm9jdXMuc2MtaW9uLXNlYXJjaGJhci1tZC1oIC5zZWFyY2hiYXItc2VhcmNoLWljb24uc2MtaW9uLXNlYXJjaGJhci1tZHtkaXNwbGF5OmJsb2NrfS5zZWFyY2hiYXItaGFzLWZvY3VzLnNjLWlvbi1zZWFyY2hiYXItbWQtaCAuc2VhcmNoYmFyLWNhbmNlbC1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1tZCwuc2VhcmNoYmFyLXNob3VsZC1zaG93LWNhbmNlbC5zYy1pb24tc2VhcmNoYmFyLW1kLWggLnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItbWR7ZGlzcGxheTpibG9ja30uc2VhcmNoYmFyLWhhcy1mb2N1cy5zYy1pb24tc2VhcmNoYmFyLW1kLWggLnNlYXJjaGJhci1jYW5jZWwtYnV0dG9uLnNjLWlvbi1zZWFyY2hiYXItbWQrLnNlYXJjaGJhci1zZWFyY2gtaWNvbi5zYy1pb24tc2VhcmNoYmFyLW1kLC5zZWFyY2hiYXItc2hvdWxkLXNob3ctY2FuY2VsLnNjLWlvbi1zZWFyY2hiYXItbWQtaCAuc2VhcmNoYmFyLWNhbmNlbC1idXR0b24uc2MtaW9uLXNlYXJjaGJhci1tZCsuc2VhcmNoYmFyLXNlYXJjaC1pY29uLnNjLWlvbi1zZWFyY2hiYXItbWR7ZGlzcGxheTpub25lfWlvbi10b29sYmFyLnNjLWlvbi1zZWFyY2hiYXItbWQtaCxpb24tdG9vbGJhciAuc2MtaW9uLXNlYXJjaGJhci1tZC1oey13ZWJraXQtcGFkZGluZy1zdGFydDo3cHg7cGFkZGluZy1pbmxpbmUtc3RhcnQ6N3B4Oy13ZWJraXQtcGFkZGluZy1lbmQ6N3B4O3BhZGRpbmctaW5saW5lLWVuZDo3cHg7cGFkZGluZy10b3A6M3B4O3BhZGRpbmctYm90dG9tOjNweH1cIjtcblxuY29uc3QgU2VhcmNoYmFyID0gY2xhc3Mge1xuICAgIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICAgICAgcmVnaXN0ZXJJbnN0YW5jZSh0aGlzLCBob3N0UmVmKTtcbiAgICAgICAgdGhpcy5pb25JbnB1dCA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uSW5wdXRcIiwgNyk7XG4gICAgICAgIHRoaXMuaW9uQ2hhbmdlID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25DaGFuZ2VcIiwgNyk7XG4gICAgICAgIHRoaXMuaW9uQ2FuY2VsID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25DYW5jZWxcIiwgNyk7XG4gICAgICAgIHRoaXMuaW9uQ2xlYXIgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkNsZWFyXCIsIDcpO1xuICAgICAgICB0aGlzLmlvbkJsdXIgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkJsdXJcIiwgNyk7XG4gICAgICAgIHRoaXMuaW9uRm9jdXMgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkZvY3VzXCIsIDcpO1xuICAgICAgICB0aGlzLmlvblN0eWxlID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25TdHlsZVwiLCA3KTtcbiAgICAgICAgdGhpcy5pc0NhbmNlbFZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zaG91bGRBbGlnbkxlZnQgPSB0cnVlO1xuICAgICAgICB0aGlzLmlucHV0SWQgPSBgaW9uLXNlYXJjaGJhci0ke3NlYXJjaGJhcklkcysrfWA7XG4gICAgICAgIHRoaXMuaW5oZXJpdGVkQXR0cmlidXRlcyA9IHt9O1xuICAgICAgICB0aGlzLmZvY3VzZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5ub0FuaW1hdGUgPSB0cnVlO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgYHRydWVgLCBlbmFibGUgc2VhcmNoYmFyIGFuaW1hdGlvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYW5pbWF0ZWQgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEluZGljYXRlcyB3aGV0aGVyIGFuZCBob3cgdGhlIHRleHQgdmFsdWUgc2hvdWxkIGJlIGF1dG9tYXRpY2FsbHkgY2FwaXRhbGl6ZWQgYXMgaXQgaXMgZW50ZXJlZC9lZGl0ZWQgYnkgdGhlIHVzZXIuXG4gICAgICAgICAqIEF2YWlsYWJsZSBvcHRpb25zOiBgXCJvZmZcImAsIGBcIm5vbmVcImAsIGBcIm9uXCJgLCBgXCJzZW50ZW5jZXNcImAsIGBcIndvcmRzXCJgLCBgXCJjaGFyYWN0ZXJzXCJgLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5hdXRvY2FwaXRhbGl6ZSA9ICdvZmYnO1xuICAgICAgICAvKipcbiAgICAgICAgICogU2V0IHRoZSBpbnB1dCdzIGF1dG9jb21wbGV0ZSBwcm9wZXJ0eS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYXV0b2NvbXBsZXRlID0gJ29mZic7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgdGhlIGlucHV0J3MgYXV0b2NvcnJlY3QgcHJvcGVydHkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmF1dG9jb3JyZWN0ID0gJ29mZic7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgdGhlIGNhbmNlbCBidXR0b24gaWNvbi4gT25seSBhcHBsaWVzIHRvIGBtZGAgbW9kZS5cbiAgICAgICAgICogRGVmYXVsdHMgdG8gYGFycm93LWJhY2stc2hhcnBgLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jYW5jZWxCdXR0b25JY29uID0gY29uZmlnLmdldCgnYmFja0J1dHRvbkljb24nLCBhcnJvd0JhY2tTaGFycCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgdGhlIGNhbmNlbCBidXR0b24gdGV4dC4gT25seSBhcHBsaWVzIHRvIGBpb3NgIG1vZGUuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNhbmNlbEJ1dHRvblRleHQgPSAnQ2FuY2VsJztcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIGB0cnVlYCwgdGhlIHVzZXIgY2Fubm90IGludGVyYWN0IHdpdGggdGhlIGlucHV0LlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgdXNlZCBpbiBhIGZvcm0sIHNldCB0aGUgbmFtZSBvZiB0aGUgY29udHJvbCwgd2hpY2ggaXMgc3VibWl0dGVkIHdpdGggdGhlIGZvcm0gZGF0YS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubmFtZSA9IHRoaXMuaW5wdXRJZDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldCB0aGUgaW5wdXQncyBwbGFjZWhvbGRlci5cbiAgICAgICAgICogYHBsYWNlaG9sZGVyYCBjYW4gYWNjZXB0IGVpdGhlciBwbGFpbnRleHQgb3IgSFRNTCBhcyBhIHN0cmluZy5cbiAgICAgICAgICogVG8gZGlzcGxheSBjaGFyYWN0ZXJzIG5vcm1hbGx5IHJlc2VydmVkIGZvciBIVE1MLCB0aGV5XG4gICAgICAgICAqIG11c3QgYmUgZXNjYXBlZC4gRm9yIGV4YW1wbGUgYDxJb25pYz5gIHdvdWxkIGJlY29tZVxuICAgICAgICAgKiBgJmx0O0lvbmljJmd0O2BcbiAgICAgICAgICpcbiAgICAgICAgICogRm9yIG1vcmUgaW5mb3JtYXRpb246IFtTZWN1cml0eSBEb2N1bWVudGF0aW9uXShodHRwczovL2lvbmljZnJhbWV3b3JrLmNvbS9kb2NzL2ZhcS9zZWN1cml0eSlcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucGxhY2Vob2xkZXIgPSAnU2VhcmNoJztcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldHMgdGhlIGJlaGF2aW9yIGZvciB0aGUgY2FuY2VsIGJ1dHRvbi4gRGVmYXVsdHMgdG8gYFwibmV2ZXJcImAuXG4gICAgICAgICAqIFNldHRpbmcgdG8gYFwiZm9jdXNcImAgc2hvd3MgdGhlIGNhbmNlbCBidXR0b24gb24gZm9jdXMuXG4gICAgICAgICAqIFNldHRpbmcgdG8gYFwibmV2ZXJcImAgaGlkZXMgdGhlIGNhbmNlbCBidXR0b24uXG4gICAgICAgICAqIFNldHRpbmcgdG8gYFwiYWx3YXlzXCJgIHNob3dzIHRoZSBjYW5jZWwgYnV0dG9uIHJlZ2FyZGxlc3NcbiAgICAgICAgICogb2YgZm9jdXMgc3RhdGUuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNob3dDYW5jZWxCdXR0b24gPSAnbmV2ZXInO1xuICAgICAgICAvKipcbiAgICAgICAgICogU2V0cyB0aGUgYmVoYXZpb3IgZm9yIHRoZSBjbGVhciBidXR0b24uIERlZmF1bHRzIHRvIGBcImZvY3VzXCJgLlxuICAgICAgICAgKiBTZXR0aW5nIHRvIGBcImZvY3VzXCJgIHNob3dzIHRoZSBjbGVhciBidXR0b24gb24gZm9jdXMgaWYgdGhlXG4gICAgICAgICAqIGlucHV0IGlzIG5vdCBlbXB0eS5cbiAgICAgICAgICogU2V0dGluZyB0byBgXCJuZXZlclwiYCBoaWRlcyB0aGUgY2xlYXIgYnV0dG9uLlxuICAgICAgICAgKiBTZXR0aW5nIHRvIGBcImFsd2F5c1wiYCBzaG93cyB0aGUgY2xlYXIgYnV0dG9uIHJlZ2FyZGxlc3NcbiAgICAgICAgICogb2YgZm9jdXMgc3RhdGUsIGJ1dCBvbmx5IGlmIHRoZSBpbnB1dCBpcyBub3QgZW1wdHkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNob3dDbGVhckJ1dHRvbiA9ICdhbHdheXMnO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgYHRydWVgLCBlbmFibGUgc3BlbGxjaGVjayBvbiB0aGUgaW5wdXQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNwZWxsY2hlY2sgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldCB0aGUgdHlwZSBvZiB0aGUgaW5wdXQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnR5cGUgPSAnc2VhcmNoJztcbiAgICAgICAgLyoqXG4gICAgICAgICAqIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy52YWx1ZSA9ICcnO1xuICAgICAgICAvKipcbiAgICAgICAgICogQ2xlYXJzIHRoZSBpbnB1dCBmaWVsZCBhbmQgdHJpZ2dlcnMgdGhlIGNvbnRyb2wgY2hhbmdlLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5vbkNsZWFySW5wdXQgPSBhc3luYyAoc2hvdWxkRm9jdXMpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaW9uQ2xlYXIuZW1pdCgpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gc2V0VGltZW91dCgpIGZpeGVzIGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2lvbmljLWZyYW1ld29yay9pc3N1ZXMvNzUyN1xuICAgICAgICAgICAgICAgIC8vIHdhaXQgZm9yIDQgZnJhbWVzXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXRJbnB1dENoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAgICAgKiBXaGVuIHRhcHBpbmcgY2xlYXIgYnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgKiBlbnN1cmUgaW5wdXQgaXMgZm9jdXNlZCBhZnRlclxuICAgICAgICAgICAgICAgICAgICAgICAgICogY2xlYXJpbmcgaW5wdXQgc28gdXNlcnNcbiAgICAgICAgICAgICAgICAgICAgICAgICAqIGNhbiBxdWlja2x5IHN0YXJ0IHR5cGluZy5cbiAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZEZvY3VzICYmICF0aGlzLmZvY3VzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldEZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICogVGhlIHNldEZvY3VzIGNhbGwgYWJvdmUgd2lsbCBjbGVhciBmb2N1c2VkVmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICogYnV0IGlvbkNoYW5nZSB3aWxsIG5ldmVyIGhhdmUgZ290dGVuIGEgY2hhbmNlIHRvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICogZmlyZS4gTWFudWFsbHkgcmV2ZXJ0IGZvY3VzZWRWYWx1ZSBzbyBvbkJsdXIgY2FuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICogY29tcGFyZSBhZ2FpbnN0IHdoYXQgd2FzIGluIHRoZSBib3ggYmVmb3JlIHRoZSBjbGVhci5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZvY3VzZWRWYWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICB9LCAxNiAqIDQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDbGVhcnMgdGhlIGlucHV0IGZpZWxkIGFuZCB0ZWxscyB0aGUgaW5wdXQgdG8gYmx1ciBzaW5jZVxuICAgICAgICAgKiB0aGUgY2xlYXJJbnB1dCBmdW5jdGlvbiBkb2Vzbid0IHdhbnQgdGhlIGlucHV0IHRvIGJsdXJcbiAgICAgICAgICogdGhlbiBjYWxscyB0aGUgY3VzdG9tIGNhbmNlbCBmdW5jdGlvbiBpZiB0aGUgdXNlciBwYXNzZWQgb25lIGluLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5vbkNhbmNlbFNlYXJjaGJhciA9IGFzeW5jIChldikgPT4ge1xuICAgICAgICAgICAgaWYgKGV2KSB7XG4gICAgICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBldi5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuaW9uQ2FuY2VsLmVtaXQoKTtcbiAgICAgICAgICAgIC8vIGdldCBjYWNoZWQgdmFsdWVzIGJlZm9yZSBjbGVhcmluZyB0aGUgaW5wdXRcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpO1xuICAgICAgICAgICAgY29uc3QgZm9jdXNlZCA9IHRoaXMuZm9jdXNlZDtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMub25DbGVhcklucHV0KCk7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIElmIHRoZXJlIHVzZWQgdG8gYmUgc29tZXRoaW5nIGluIHRoZSBib3gsIGFuZCB3ZSB3ZXJlbid0IGZvY3VzZWRcbiAgICAgICAgICAgICAqIGJlZm9yZWhhbmQgKG1lYW5pbmcgbm8gYmx1ciBmaXJlZCB0aGF0IHdvdWxkIGFscmVhZHkgaGFuZGxlIHRoaXMpLFxuICAgICAgICAgICAgICogbWFudWFsbHkgZmlyZSBpb25DaGFuZ2UuXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGlmICh2YWx1ZSAmJiAhZm9jdXNlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZW1pdFZhbHVlQ2hhbmdlKGV2KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLm5hdGl2ZUlucHV0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYXRpdmVJbnB1dC5ibHVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBVcGRhdGUgdGhlIFNlYXJjaGJhciBpbnB1dCB2YWx1ZSB3aGVuIHRoZSBpbnB1dCBjaGFuZ2VzXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9uSW5wdXQgPSAoZXYpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlucHV0ID0gZXYudGFyZ2V0O1xuICAgICAgICAgICAgaWYgKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9IGlucHV0LnZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5lbWl0SW5wdXRDaGFuZ2UoZXYpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLm9uQ2hhbmdlID0gKGV2KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmVtaXRWYWx1ZUNoYW5nZShldik7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXRzIHRoZSBTZWFyY2hiYXIgdG8gbm90IGZvY3VzZWQgYW5kIGNoZWNrcyBpZiBpdCBzaG91bGQgYWxpZ24gbGVmdFxuICAgICAgICAgKiBiYXNlZCBvbiB3aGV0aGVyIHRoZXJlIGlzIGEgdmFsdWUgaW4gdGhlIHNlYXJjaGJhciBvciBub3QuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9uQmx1ciA9IChldikgPT4ge1xuICAgICAgICAgICAgdGhpcy5mb2N1c2VkID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmlvbkJsdXIuZW1pdCgpO1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbkVsZW1lbnRzKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5mb2N1c2VkVmFsdWUgIT09IHRoaXMudmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVtaXRWYWx1ZUNoYW5nZShldik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmZvY3VzZWRWYWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldHMgdGhlIFNlYXJjaGJhciB0byBmb2N1c2VkIGFuZCBhY3RpdmUgb24gaW5wdXQgZm9jdXMuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9uRm9jdXMgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmZvY3VzZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5mb2N1c2VkVmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgdGhpcy5pb25Gb2N1cy5lbWl0KCk7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uRWxlbWVudHMoKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogbGFuZyBhbmQgZGlyIGFyZSBnbG9iYWxseSBlbnVtZXJhdGVkIGF0dHJpYnV0ZXMuXG4gICAgICogQXMgYSByZXN1bHQsIGNyZWF0aW5nIHRoZXNlIGFzIHByb3BlcnRpZXNcbiAgICAgKiBjYW4gaGF2ZSB1bmludGVuZGVkIHNpZGUgZWZmZWN0cy4gSW5zdGVhZCwgd2VcbiAgICAgKiBsaXN0ZW4gZm9yIGF0dHJpYnV0ZSBjaGFuZ2VzIGFuZCBpbmhlcml0IHRoZW1cbiAgICAgKiB0byB0aGUgaW5uZXIgYDxpbnB1dD5gIGVsZW1lbnQuXG4gICAgICovXG4gICAgb25MYW5nQ2hhbmdlZChuZXdWYWx1ZSkge1xuICAgICAgICB0aGlzLmluaGVyaXRlZEF0dHJpYnV0ZXMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuaW5oZXJpdGVkQXR0cmlidXRlcyksIHsgbGFuZzogbmV3VmFsdWUgfSk7XG4gICAgICAgIGZvcmNlVXBkYXRlKHRoaXMpO1xuICAgIH1cbiAgICBvbkRpckNoYW5nZWQobmV3VmFsdWUpIHtcbiAgICAgICAgdGhpcy5pbmhlcml0ZWRBdHRyaWJ1dGVzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLmluaGVyaXRlZEF0dHJpYnV0ZXMpLCB7IGRpcjogbmV3VmFsdWUgfSk7XG4gICAgICAgIGZvcmNlVXBkYXRlKHRoaXMpO1xuICAgIH1cbiAgICBkZWJvdW5jZUNoYW5nZWQoKSB7XG4gICAgICAgIGNvbnN0IHsgaW9uSW5wdXQsIGRlYm91bmNlLCBvcmlnaW5hbElvbklucHV0IH0gPSB0aGlzO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgZGVib3VuY2UgaXMgdW5kZWZpbmVkLCB3ZSBoYXZlIHRvIG1hbnVhbGx5IHJldmVydCB0aGUgaW9uSW5wdXQgZW1pdHRlciBpbiBjYXNlXG4gICAgICAgICAqIGRlYm91bmNlIHVzZWQgdG8gYmUgc2V0IHRvIGEgbnVtYmVyLiBPdGhlcndpc2UsIHRoZSBldmVudCB3b3VsZCBzdGF5IGRlYm91bmNlZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaW9uSW5wdXQgPSBkZWJvdW5jZSA9PT0gdW5kZWZpbmVkID8gb3JpZ2luYWxJb25JbnB1dCAhPT0gbnVsbCAmJiBvcmlnaW5hbElvbklucHV0ICE9PSB2b2lkIDAgPyBvcmlnaW5hbElvbklucHV0IDogaW9uSW5wdXQgOiBkZWJvdW5jZUV2ZW50KGlvbklucHV0LCBkZWJvdW5jZSk7XG4gICAgfVxuICAgIHZhbHVlQ2hhbmdlZCgpIHtcbiAgICAgICAgY29uc3QgaW5wdXRFbCA9IHRoaXMubmF0aXZlSW5wdXQ7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpO1xuICAgICAgICBpZiAoaW5wdXRFbCAmJiBpbnB1dEVsLnZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgaW5wdXRFbC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNob3dDYW5jZWxCdXR0b25DaGFuZ2VkKCkge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbkVsZW1lbnRzKCk7XG4gICAgICAgICAgICBmb3JjZVVwZGF0ZSh0aGlzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICB0aGlzLmVtaXRTdHlsZSgpO1xuICAgIH1cbiAgICBjb21wb25lbnRXaWxsTG9hZCgpIHtcbiAgICAgICAgdGhpcy5pbmhlcml0ZWRBdHRyaWJ1dGVzID0gT2JqZWN0LmFzc2lnbih7fSwgaW5oZXJpdEF0dHJpYnV0ZXModGhpcy5lbCwgWydsYW5nJywgJ2RpciddKSk7XG4gICAgfVxuICAgIGNvbXBvbmVudERpZExvYWQoKSB7XG4gICAgICAgIHRoaXMub3JpZ2luYWxJb25JbnB1dCA9IHRoaXMuaW9uSW5wdXQ7XG4gICAgICAgIHRoaXMucG9zaXRpb25FbGVtZW50cygpO1xuICAgICAgICB0aGlzLmRlYm91bmNlQ2hhbmdlZCgpO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubm9BbmltYXRlID0gZmFsc2U7XG4gICAgICAgIH0sIDMwMCk7XG4gICAgfVxuICAgIGVtaXRTdHlsZSgpIHtcbiAgICAgICAgdGhpcy5pb25TdHlsZS5lbWl0KHtcbiAgICAgICAgICAgIHNlYXJjaGJhcjogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgZm9jdXMgb24gdGhlIG5hdGl2ZSBgaW5wdXRgIGluIGBpb24tc2VhcmNoYmFyYC4gVXNlIHRoaXMgbWV0aG9kIGluc3RlYWQgb2YgdGhlIGdsb2JhbFxuICAgICAqIGBpbnB1dC5mb2N1cygpYC5cbiAgICAgKlxuICAgICAqIERldmVsb3BlcnMgd2hvIHdpc2ggdG8gZm9jdXMgYW4gaW5wdXQgd2hlbiBhIHBhZ2UgZW50ZXJzXG4gICAgICogc2hvdWxkIGNhbGwgYHNldEZvY3VzKClgIGluIHRoZSBgaW9uVmlld0RpZEVudGVyKClgIGxpZmVjeWNsZSBtZXRob2QuXG4gICAgICpcbiAgICAgKiBEZXZlbG9wZXJzIHdobyB3aXNoIHRvIGZvY3VzIGFuIGlucHV0IHdoZW4gYW4gb3ZlcmxheSBpcyBwcmVzZW50ZWRcbiAgICAgKiBzaG91bGQgY2FsbCBgc2V0Rm9jdXNgIGFmdGVyIGBkaWRQcmVzZW50YCBoYXMgcmVzb2x2ZWQuXG4gICAgICpcbiAgICAgKiBTZWUgW21hbmFnaW5nIGZvY3VzXSgvZG9jcy9kZXZlbG9waW5nL21hbmFnaW5nLWZvY3VzKSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRGb2N1cygpIHtcbiAgICAgICAgaWYgKHRoaXMubmF0aXZlSW5wdXQpIHtcbiAgICAgICAgICAgIHRoaXMubmF0aXZlSW5wdXQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBuYXRpdmUgYDxpbnB1dD5gIGVsZW1lbnQgdXNlZCB1bmRlciB0aGUgaG9vZC5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRJbnB1dEVsZW1lbnQoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJZiB0aGlzIGdldHMgY2FsbGVkIGluIGNlcnRhaW4gZWFybHkgbGlmZWN5Y2xlIGhvb2tzIChleDogVnVlIG9uTW91bnRlZCksXG4gICAgICAgICAqIG5hdGl2ZUlucHV0IHdvbid0IGJlIGRlZmluZWQgeWV0IHdpdGggdGhlIGN1c3RvbSBlbGVtZW50cyBidWlsZCwgc28gd2FpdCBmb3IgaXQgdG8gbG9hZCBpbi5cbiAgICAgICAgICovXG4gICAgICAgIGlmICghdGhpcy5uYXRpdmVJbnB1dCkge1xuICAgICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IGNvbXBvbmVudE9uUmVhZHkodGhpcy5lbCwgcmVzb2x2ZSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5uYXRpdmVJbnB1dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVtaXRzIGFuIGBpb25DaGFuZ2VgIGV2ZW50LlxuICAgICAqXG4gICAgICogVGhpcyBBUEkgc2hvdWxkIGJlIGNhbGxlZCBmb3IgdXNlciBjb21taXR0ZWQgY2hhbmdlcy5cbiAgICAgKiBUaGlzIEFQSSBzaG91bGQgbm90IGJlIHVzZWQgZm9yIGV4dGVybmFsIHZhbHVlIGNoYW5nZXMuXG4gICAgICovXG4gICAgZW1pdFZhbHVlQ2hhbmdlKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRoaXM7XG4gICAgICAgIC8vIENoZWNrcyBmb3IgYm90aCBudWxsIGFuZCB1bmRlZmluZWQgdmFsdWVzXG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gdmFsdWUgPT0gbnVsbCA/IHZhbHVlIDogdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgLy8gRW1pdHRpbmcgYSB2YWx1ZSBjaGFuZ2Ugc2hvdWxkIHVwZGF0ZSB0aGUgaW50ZXJuYWwgc3RhdGUgZm9yIHRyYWNraW5nIHRoZSBmb2N1c2VkIHZhbHVlXG4gICAgICAgIHRoaXMuZm9jdXNlZFZhbHVlID0gbmV3VmFsdWU7XG4gICAgICAgIHRoaXMuaW9uQ2hhbmdlLmVtaXQoeyB2YWx1ZTogbmV3VmFsdWUsIGV2ZW50IH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFbWl0cyBhbiBgaW9uSW5wdXRgIGV2ZW50LlxuICAgICAqL1xuICAgIGVtaXRJbnB1dENoYW5nZShldmVudCkge1xuICAgICAgICBjb25zdCB7IHZhbHVlIH0gPSB0aGlzO1xuICAgICAgICB0aGlzLmlvbklucHV0LmVtaXQoeyB2YWx1ZSwgZXZlbnQgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBvc2l0aW9ucyB0aGUgaW5wdXQgc2VhcmNoIGljb24sIHBsYWNlaG9sZGVyLCBhbmQgdGhlIGNhbmNlbCBidXR0b25cbiAgICAgKiBiYXNlZCBvbiB0aGUgaW5wdXQgdmFsdWUgYW5kIGlmIGl0IGlzIGZvY3VzZWQuIChpb3Mgb25seSlcbiAgICAgKi9cbiAgICBwb3NpdGlvbkVsZW1lbnRzKCkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0VmFsdWUoKTtcbiAgICAgICAgY29uc3QgcHJldkFsaWduTGVmdCA9IHRoaXMuc2hvdWxkQWxpZ25MZWZ0O1xuICAgICAgICBjb25zdCBtb2RlID0gZ2V0SW9uTW9kZSh0aGlzKTtcbiAgICAgICAgY29uc3Qgc2hvdWxkQWxpZ25MZWZ0ID0gIXRoaXMuYW5pbWF0ZWQgfHwgdmFsdWUudHJpbSgpICE9PSAnJyB8fCAhIXRoaXMuZm9jdXNlZDtcbiAgICAgICAgdGhpcy5zaG91bGRBbGlnbkxlZnQgPSBzaG91bGRBbGlnbkxlZnQ7XG4gICAgICAgIGlmIChtb2RlICE9PSAnaW9zJykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcmV2QWxpZ25MZWZ0ICE9PSBzaG91bGRBbGlnbkxlZnQpIHtcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb25QbGFjZWhvbGRlcigpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmFuaW1hdGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uQ2FuY2VsQnV0dG9uKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUG9zaXRpb25zIHRoZSBpbnB1dCBwbGFjZWhvbGRlclxuICAgICAqL1xuICAgIHBvc2l0aW9uUGxhY2Vob2xkZXIoKSB7XG4gICAgICAgIGNvbnN0IGlucHV0RWwgPSB0aGlzLm5hdGl2ZUlucHV0O1xuICAgICAgICBpZiAoIWlucHV0RWwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBydGwgPSBpc1JUTCh0aGlzLmVsKTtcbiAgICAgICAgY29uc3QgaWNvbkVsID0gKHRoaXMuZWwuc2hhZG93Um9vdCB8fCB0aGlzLmVsKS5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoYmFyLXNlYXJjaC1pY29uJyk7XG4gICAgICAgIGlmICh0aGlzLnNob3VsZEFsaWduTGVmdCkge1xuICAgICAgICAgICAgaW5wdXRFbC5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG4gICAgICAgICAgICBpY29uRWwucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gQ3JlYXRlIGEgZHVtbXkgc3BhbiB0byBnZXQgdGhlIHBsYWNlaG9sZGVyIHdpZHRoXG4gICAgICAgICAgICBjb25zdCBkb2MgPSBkb2N1bWVudDtcbiAgICAgICAgICAgIGNvbnN0IHRlbXBTcGFuID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgICAgIHRlbXBTcGFuLmlubmVyVGV4dCA9IHRoaXMucGxhY2Vob2xkZXIgfHwgJyc7XG4gICAgICAgICAgICBkb2MuYm9keS5hcHBlbmRDaGlsZCh0ZW1wU3Bhbik7XG4gICAgICAgICAgICAvLyBHZXQgdGhlIHdpZHRoIG9mIHRoZSBzcGFuIHRoZW4gcmVtb3ZlIGl0XG4gICAgICAgICAgICByYWYoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRleHRXaWR0aCA9IHRlbXBTcGFuLm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgICAgIHRlbXBTcGFuLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgaW5wdXQgcGFkZGluZ1xuICAgICAgICAgICAgICAgIGNvbnN0IGlucHV0TGVmdCA9ICdjYWxjKDUwJSAtICcgKyB0ZXh0V2lkdGggLyAyICsgJ3B4KSc7XG4gICAgICAgICAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBpY29uIG1hcmdpblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIFdlIHRha2UgdGhlIGljb24gd2lkdGggdG8gYWNjb3VudFxuICAgICAgICAgICAgICAgICAqIGZvciBhbnkgdGV4dCBzY2FsZXMgYXBwbGllZCB0byB0aGUgaWNvblxuICAgICAgICAgICAgICAgICAqIHN1Y2ggYXMgRHluYW1pYyBUeXBlIG9uIGlPUyBhcyB3ZWxsIGFzIDhweFxuICAgICAgICAgICAgICAgICAqIG9mIHBhZGRpbmcuXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgY29uc3QgaWNvbkxlZnQgPSAnY2FsYyg1MCUgLSAnICsgKHRleHRXaWR0aCAvIDIgKyBpY29uRWwuY2xpZW50V2lkdGggKyA4KSArICdweCknO1xuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgaW5wdXQgcGFkZGluZyBzdGFydCBhbmQgaWNvbiBtYXJnaW4gc3RhcnRcbiAgICAgICAgICAgICAgICBpZiAocnRsKSB7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0RWwuc3R5bGUucGFkZGluZ1JpZ2h0ID0gaW5wdXRMZWZ0O1xuICAgICAgICAgICAgICAgICAgICBpY29uRWwuc3R5bGUubWFyZ2luUmlnaHQgPSBpY29uTGVmdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0RWwuc3R5bGUucGFkZGluZ0xlZnQgPSBpbnB1dExlZnQ7XG4gICAgICAgICAgICAgICAgICAgIGljb25FbC5zdHlsZS5tYXJnaW5MZWZ0ID0gaWNvbkxlZnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU2hvdyB0aGUgaU9TIENhbmNlbCBidXR0b24gb24gZm9jdXMsIGhpZGUgaXQgb2Zmc2NyZWVuIG90aGVyd2lzZVxuICAgICAqL1xuICAgIHBvc2l0aW9uQ2FuY2VsQnV0dG9uKCkge1xuICAgICAgICBjb25zdCBydGwgPSBpc1JUTCh0aGlzLmVsKTtcbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0gKHRoaXMuZWwuc2hhZG93Um9vdCB8fCB0aGlzLmVsKS5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoYmFyLWNhbmNlbC1idXR0b24nKTtcbiAgICAgICAgY29uc3Qgc2hvdWxkU2hvd0NhbmNlbCA9IHRoaXMuc2hvdWxkU2hvd0NhbmNlbEJ1dHRvbigpO1xuICAgICAgICBpZiAoY2FuY2VsQnV0dG9uICE9PSBudWxsICYmIHNob3VsZFNob3dDYW5jZWwgIT09IHRoaXMuaXNDYW5jZWxWaXNpYmxlKSB7XG4gICAgICAgICAgICBjb25zdCBjYW5jZWxTdHlsZSA9IGNhbmNlbEJ1dHRvbi5zdHlsZTtcbiAgICAgICAgICAgIHRoaXMuaXNDYW5jZWxWaXNpYmxlID0gc2hvdWxkU2hvd0NhbmNlbDtcbiAgICAgICAgICAgIGlmIChzaG91bGRTaG93Q2FuY2VsKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJ0bCkge1xuICAgICAgICAgICAgICAgICAgICBjYW5jZWxTdHlsZS5tYXJnaW5MZWZ0ID0gJzAnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsU3R5bGUubWFyZ2luUmlnaHQgPSAnMCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2Zmc2V0ID0gY2FuY2VsQnV0dG9uLm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgICAgIGlmIChvZmZzZXQgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChydGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNlbFN0eWxlLm1hcmdpbkxlZnQgPSAtb2Zmc2V0ICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNlbFN0eWxlLm1hcmdpblJpZ2h0ID0gLW9mZnNldCArICdweCc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0VmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlIHx8ICcnO1xuICAgIH1cbiAgICBoYXNWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0VmFsdWUoKSAhPT0gJyc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciBvciBub3QgdGhlIGNhbmNlbCBidXR0b24gc2hvdWxkIGJlIHZpc2libGUgb25zY3JlZW4uXG4gICAgICogQ2FuY2VsIGJ1dHRvbiBzaG91bGQgYmUgc2hvd24gaWYgb25lIG9mIHR3byBjb25kaXRpb25zIGFwcGxpZXM6XG4gICAgICogMS4gYHNob3dDYW5jZWxCdXR0b25gIGlzIHNldCB0byBgYWx3YXlzYC5cbiAgICAgKiAyLiBgc2hvd0NhbmNlbEJ1dHRvbmAgaXMgc2V0IHRvIGBmb2N1c2AsIGFuZCB0aGUgc2VhcmNoYmFyIGhhcyBiZWVuIGZvY3VzZWQuXG4gICAgICovXG4gICAgc2hvdWxkU2hvd0NhbmNlbEJ1dHRvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuc2hvd0NhbmNlbEJ1dHRvbiA9PT0gJ25ldmVyJyB8fCAodGhpcy5zaG93Q2FuY2VsQnV0dG9uID09PSAnZm9jdXMnICYmICF0aGlzLmZvY3VzZWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciBvciBub3QgdGhlIGNsZWFyIGJ1dHRvbiBzaG91bGQgYmUgdmlzaWJsZSBvbnNjcmVlbi5cbiAgICAgKiBDbGVhciBidXR0b24gc2hvdWxkIGJlIHNob3duIGlmIG9uZSBvZiB0d28gY29uZGl0aW9ucyBhcHBsaWVzOlxuICAgICAqIDEuIGBzaG93Q2xlYXJCdXR0b25gIGlzIHNldCB0byBgYWx3YXlzYC5cbiAgICAgKiAyLiBgc2hvd0NsZWFyQnV0dG9uYCBpcyBzZXQgdG8gYGZvY3VzYCwgYW5kIHRoZSBzZWFyY2hiYXIgaGFzIGJlZW4gZm9jdXNlZC5cbiAgICAgKi9cbiAgICBzaG91bGRTaG93Q2xlYXJCdXR0b24oKSB7XG4gICAgICAgIGlmICh0aGlzLnNob3dDbGVhckJ1dHRvbiA9PT0gJ25ldmVyJyB8fCAodGhpcy5zaG93Q2xlYXJCdXR0b24gPT09ICdmb2N1cycgJiYgIXRoaXMuZm9jdXNlZCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNhbmNlbEJ1dHRvblRleHQsIGF1dG9jYXBpdGFsaXplIH0gPSB0aGlzO1xuICAgICAgICBjb25zdCBhbmltYXRlZCA9IHRoaXMuYW5pbWF0ZWQgJiYgY29uZmlnLmdldEJvb2xlYW4oJ2FuaW1hdGVkJywgdHJ1ZSk7XG4gICAgICAgIGNvbnN0IG1vZGUgPSBnZXRJb25Nb2RlKHRoaXMpO1xuICAgICAgICBjb25zdCBjbGVhckljb24gPSB0aGlzLmNsZWFySWNvbiB8fCAobW9kZSA9PT0gJ2lvcycgPyBjbG9zZUNpcmNsZSA6IGNsb3NlU2hhcnApO1xuICAgICAgICBjb25zdCBzZWFyY2hJY29uID0gdGhpcy5zZWFyY2hJY29uIHx8IChtb2RlID09PSAnaW9zJyA/IHNlYXJjaE91dGxpbmUgOiBzZWFyY2hTaGFycCk7XG4gICAgICAgIGNvbnN0IHNob3VsZFNob3dDYW5jZWxCdXR0b24gPSB0aGlzLnNob3VsZFNob3dDYW5jZWxCdXR0b24oKTtcbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0gdGhpcy5zaG93Q2FuY2VsQnV0dG9uICE9PSAnbmV2ZXInICYmIChoKFwiYnV0dG9uXCIsIHsga2V5OiAnNTgzNWMzNmZjYjBiNTJhZWM5NTY1MzgyMDJhNzgzZjZjMTk0ZDg1MycsIFwiYXJpYS1sYWJlbFwiOiBjYW5jZWxCdXR0b25UZXh0LCBcImFyaWEtaGlkZGVuXCI6IHNob3VsZFNob3dDYW5jZWxCdXR0b24gPyB1bmRlZmluZWQgOiAndHJ1ZScsIHR5cGU6IFwiYnV0dG9uXCIsIHRhYkluZGV4OiBtb2RlID09PSAnaW9zJyAmJiAhc2hvdWxkU2hvd0NhbmNlbEJ1dHRvbiA/IC0xIDogdW5kZWZpbmVkLCBvbk1vdXNlRG93bjogdGhpcy5vbkNhbmNlbFNlYXJjaGJhciwgb25Ub3VjaFN0YXJ0OiB0aGlzLm9uQ2FuY2VsU2VhcmNoYmFyLCBjbGFzczogXCJzZWFyY2hiYXItY2FuY2VsLWJ1dHRvblwiIH0sIGgoXCJkaXZcIiwgeyBrZXk6ICc4NWRmNDE2NzZiZWQ2MTE0NjdiZDRkZjAwMDJiMDhiYWVlNGY1MzljJywgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9LCBtb2RlID09PSAnbWQnID8gKGgoXCJpb24taWNvblwiLCB7IFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIsIG1vZGU6IG1vZGUsIGljb246IHRoaXMuY2FuY2VsQnV0dG9uSWNvbiwgbGF6eTogZmFsc2UgfSkpIDogKGNhbmNlbEJ1dHRvblRleHQpKSkpO1xuICAgICAgICByZXR1cm4gKGgoSG9zdCwgeyBrZXk6ICdlMWUzMGNkZDc5ZjlmNTRkNWYyZDI3NTAxMDEyMzU4YmM0Njg4MGU1Jywgcm9sZTogXCJzZWFyY2hcIiwgXCJhcmlhLWRpc2FibGVkXCI6IHRoaXMuZGlzYWJsZWQgPyAndHJ1ZScgOiBudWxsLCBjbGFzczogY3JlYXRlQ29sb3JDbGFzc2VzKHRoaXMuY29sb3IsIHtcbiAgICAgICAgICAgICAgICBbbW9kZV06IHRydWUsXG4gICAgICAgICAgICAgICAgJ3NlYXJjaGJhci1hbmltYXRlZCc6IGFuaW1hdGVkLFxuICAgICAgICAgICAgICAgICdzZWFyY2hiYXItZGlzYWJsZWQnOiB0aGlzLmRpc2FibGVkLFxuICAgICAgICAgICAgICAgICdzZWFyY2hiYXItbm8tYW5pbWF0ZSc6IGFuaW1hdGVkICYmIHRoaXMubm9BbmltYXRlLFxuICAgICAgICAgICAgICAgICdzZWFyY2hiYXItaGFzLXZhbHVlJzogdGhpcy5oYXNWYWx1ZSgpLFxuICAgICAgICAgICAgICAgICdzZWFyY2hiYXItbGVmdC1hbGlnbmVkJzogdGhpcy5zaG91bGRBbGlnbkxlZnQsXG4gICAgICAgICAgICAgICAgJ3NlYXJjaGJhci1oYXMtZm9jdXMnOiB0aGlzLmZvY3VzZWQsXG4gICAgICAgICAgICAgICAgJ3NlYXJjaGJhci1zaG91bGQtc2hvdy1jbGVhcic6IHRoaXMuc2hvdWxkU2hvd0NsZWFyQnV0dG9uKCksXG4gICAgICAgICAgICAgICAgJ3NlYXJjaGJhci1zaG91bGQtc2hvdy1jYW5jZWwnOiB0aGlzLnNob3VsZFNob3dDYW5jZWxCdXR0b24oKSxcbiAgICAgICAgICAgIH0pIH0sIGgoXCJkaXZcIiwgeyBrZXk6ICc3ZTlkYjE0NzI4MmEzNWJiMWUzYzljNjEyNWI5YTA0NGU4MWRkZGU1JywgY2xhc3M6IFwic2VhcmNoYmFyLWlucHV0LWNvbnRhaW5lclwiIH0sIGgoXCJpbnB1dFwiLCBPYmplY3QuYXNzaWduKHsga2V5OiAnMDJmMDhkYTIxMzI2Yjc4ZDZjZDI0OWQ1NGRlYWI5NmZkODQ3MmJhOCcsIFwiYXJpYS1sYWJlbFwiOiBcInNlYXJjaCB0ZXh0XCIsIGRpc2FibGVkOiB0aGlzLmRpc2FibGVkLCByZWY6IChlbCkgPT4gKHRoaXMubmF0aXZlSW5wdXQgPSBlbCksIGNsYXNzOiBcInNlYXJjaGJhci1pbnB1dFwiLCBpbnB1dE1vZGU6IHRoaXMuaW5wdXRtb2RlLCBlbnRlcktleUhpbnQ6IHRoaXMuZW50ZXJrZXloaW50LCBuYW1lOiB0aGlzLm5hbWUsIG9uSW5wdXQ6IHRoaXMub25JbnB1dCwgb25DaGFuZ2U6IHRoaXMub25DaGFuZ2UsIG9uQmx1cjogdGhpcy5vbkJsdXIsIG9uRm9jdXM6IHRoaXMub25Gb2N1cywgbWluTGVuZ3RoOiB0aGlzLm1pbmxlbmd0aCwgbWF4TGVuZ3RoOiB0aGlzLm1heGxlbmd0aCwgcGxhY2Vob2xkZXI6IHRoaXMucGxhY2Vob2xkZXIsIHR5cGU6IHRoaXMudHlwZSwgdmFsdWU6IHRoaXMuZ2V0VmFsdWUoKSwgYXV0b0NhcGl0YWxpemU6IGF1dG9jYXBpdGFsaXplID09PSAnZGVmYXVsdCcgPyB1bmRlZmluZWQgOiBhdXRvY2FwaXRhbGl6ZSwgYXV0b0NvbXBsZXRlOiB0aGlzLmF1dG9jb21wbGV0ZSwgYXV0b0NvcnJlY3Q6IHRoaXMuYXV0b2NvcnJlY3QsIHNwZWxsY2hlY2s6IHRoaXMuc3BlbGxjaGVjayB9LCB0aGlzLmluaGVyaXRlZEF0dHJpYnV0ZXMpKSwgbW9kZSA9PT0gJ21kJyAmJiBjYW5jZWxCdXR0b24sIGgoXCJpb24taWNvblwiLCB7IGtleTogJzA0OGIwMDM0ODQ1NmJkODI3YWU3MzQ0OTFjNDZhNjdiZmIxNDYyMjcnLCBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiLCBtb2RlOiBtb2RlLCBpY29uOiBzZWFyY2hJY29uLCBsYXp5OiBmYWxzZSwgY2xhc3M6IFwic2VhcmNoYmFyLXNlYXJjaC1pY29uXCIgfSksIGgoXCJidXR0b25cIiwgeyBrZXk6ICc3MWY2NDMzOWJiZmQ1NGViZDI2YTA5NDZjOGVlOWQ3MjZjZDg5YzA0JywgXCJhcmlhLWxhYmVsXCI6IFwicmVzZXRcIiwgdHlwZTogXCJidXR0b25cIiwgXCJuby1ibHVyXCI6IHRydWUsIGNsYXNzOiBcInNlYXJjaGJhci1jbGVhci1idXR0b25cIiwgb25Qb2ludGVyRG93bjogKGV2KSA9PiB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogVGhpcyBwcmV2ZW50cyBtb2JpbGUgYnJvd3NlcnMgZnJvbVxuICAgICAgICAgICAgICAgICAqIGJsdXJyaW5nIHRoZSBpbnB1dCB3aGVuIHRoZSBjbGVhclxuICAgICAgICAgICAgICAgICAqIGJ1dHRvbiBpcyBhY3RpdmF0ZWQuXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH0sIG9uQ2xpY2s6ICgpID0+IHRoaXMub25DbGVhcklucHV0KHRydWUpIH0sIGgoXCJpb24taWNvblwiLCB7IGtleTogJzliMWExNzdiMjE5NTFjMWM5NTg5N2E0NjhiMzRiYjdiYmQ2M2QxMzcnLCBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiLCBtb2RlOiBtb2RlLCBpY29uOiBjbGVhckljb24sIGxhenk6IGZhbHNlLCBjbGFzczogXCJzZWFyY2hiYXItY2xlYXItaWNvblwiIH0pKSksIG1vZGUgPT09ICdpb3MnICYmIGNhbmNlbEJ1dHRvbikpO1xuICAgIH1cbiAgICBnZXQgZWwoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XG4gICAgc3RhdGljIGdldCB3YXRjaGVycygpIHsgcmV0dXJuIHtcbiAgICAgICAgXCJsYW5nXCI6IFtcIm9uTGFuZ0NoYW5nZWRcIl0sXG4gICAgICAgIFwiZGlyXCI6IFtcIm9uRGlyQ2hhbmdlZFwiXSxcbiAgICAgICAgXCJkZWJvdW5jZVwiOiBbXCJkZWJvdW5jZUNoYW5nZWRcIl0sXG4gICAgICAgIFwidmFsdWVcIjogW1widmFsdWVDaGFuZ2VkXCJdLFxuICAgICAgICBcInNob3dDYW5jZWxCdXR0b25cIjogW1wic2hvd0NhbmNlbEJ1dHRvbkNoYW5nZWRcIl1cbiAgICB9OyB9XG59O1xubGV0IHNlYXJjaGJhcklkcyA9IDA7XG5TZWFyY2hiYXIuc3R5bGUgPSB7XG4gICAgaW9zOiBzZWFyY2hiYXJJb3NDc3MsXG4gICAgbWQ6IHNlYXJjaGJhck1kQ3NzXG59O1xuXG5leHBvcnQgeyBTZWFyY2hiYXIgYXMgaW9uX3NlYXJjaGJhciB9O1xuIl0sIm5hbWVzIjpbInIiLCJyZWdpc3Rlckluc3RhbmNlIiwiZCIsImNyZWF0ZUV2ZW50IiwibCIsImNvbmZpZyIsIm4iLCJmb3JjZVVwZGF0ZSIsImUiLCJnZXRJb25Nb2RlIiwiaCIsImoiLCJIb3N0IiwiayIsImdldEVsZW1lbnQiLCJkZWJvdW5jZUV2ZW50IiwiYiIsImluaGVyaXRBdHRyaWJ1dGVzIiwiYyIsImNvbXBvbmVudE9uUmVhZHkiLCJyYWYiLCJpIiwiaXNSVEwiLCJjcmVhdGVDb2xvckNsYXNzZXMiLCJhIiwiYXJyb3dCYWNrU2hhcnAiLCJzIiwic2VhcmNoT3V0bGluZSIsInNlYXJjaFNoYXJwIiwiY2xvc2VDaXJjbGUiLCJjbG9zZVNoYXJwIiwic2VhcmNoYmFySW9zQ3NzIiwic2VhcmNoYmFyTWRDc3MiLCJTZWFyY2hiYXIiLCJjb25zdHJ1Y3RvciIsImhvc3RSZWYiLCJfdGhpcyIsImlvbklucHV0IiwiaW9uQ2hhbmdlIiwiaW9uQ2FuY2VsIiwiaW9uQ2xlYXIiLCJpb25CbHVyIiwiaW9uRm9jdXMiLCJpb25TdHlsZSIsImlzQ2FuY2VsVmlzaWJsZSIsInNob3VsZEFsaWduTGVmdCIsImlucHV0SWQiLCJzZWFyY2hiYXJJZHMiLCJpbmhlcml0ZWRBdHRyaWJ1dGVzIiwiZm9jdXNlZCIsIm5vQW5pbWF0ZSIsImFuaW1hdGVkIiwiYXV0b2NhcGl0YWxpemUiLCJhdXRvY29tcGxldGUiLCJhdXRvY29ycmVjdCIsImNhbmNlbEJ1dHRvbkljb24iLCJnZXQiLCJjYW5jZWxCdXR0b25UZXh0IiwiZGlzYWJsZWQiLCJuYW1lIiwicGxhY2Vob2xkZXIiLCJzaG93Q2FuY2VsQnV0dG9uIiwic2hvd0NsZWFyQnV0dG9uIiwic3BlbGxjaGVjayIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2xlYXJJbnB1dCIsIl9yZWYiLCJfYXN5bmNUb0dlbmVyYXRvciIsInNob3VsZEZvY3VzIiwiZW1pdCIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsImdldFZhbHVlIiwiZW1pdElucHV0Q2hhbmdlIiwic2V0Rm9jdXMiLCJmb2N1c2VkVmFsdWUiLCJfeCIsImFwcGx5IiwiYXJndW1lbnRzIiwib25DYW5jZWxTZWFyY2hiYXIiLCJfcmVmMiIsImV2IiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJlbWl0VmFsdWVDaGFuZ2UiLCJuYXRpdmVJbnB1dCIsImJsdXIiLCJfeDIiLCJvbklucHV0IiwiaW5wdXQiLCJ0YXJnZXQiLCJvbkNoYW5nZSIsIm9uQmx1ciIsInBvc2l0aW9uRWxlbWVudHMiLCJ1bmRlZmluZWQiLCJvbkZvY3VzIiwib25MYW5nQ2hhbmdlZCIsIm5ld1ZhbHVlIiwiT2JqZWN0IiwiYXNzaWduIiwibGFuZyIsIm9uRGlyQ2hhbmdlZCIsImRpciIsImRlYm91bmNlQ2hhbmdlZCIsImRlYm91bmNlIiwib3JpZ2luYWxJb25JbnB1dCIsInZhbHVlQ2hhbmdlZCIsImlucHV0RWwiLCJzaG93Q2FuY2VsQnV0dG9uQ2hhbmdlZCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNvbm5lY3RlZENhbGxiYWNrIiwiZW1pdFN0eWxlIiwiY29tcG9uZW50V2lsbExvYWQiLCJlbCIsImNvbXBvbmVudERpZExvYWQiLCJzZWFyY2hiYXIiLCJfdGhpczIiLCJmb2N1cyIsImdldElucHV0RWxlbWVudCIsIl90aGlzMyIsImV2ZW50IiwidG9TdHJpbmciLCJwcmV2QWxpZ25MZWZ0IiwibW9kZSIsInRyaW0iLCJwb3NpdGlvblBsYWNlaG9sZGVyIiwicG9zaXRpb25DYW5jZWxCdXR0b24iLCJydGwiLCJpY29uRWwiLCJzaGFkb3dSb290IiwicXVlcnlTZWxlY3RvciIsInJlbW92ZUF0dHJpYnV0ZSIsImRvYyIsImRvY3VtZW50IiwidGVtcFNwYW4iLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJUZXh0IiwiYm9keSIsImFwcGVuZENoaWxkIiwidGV4dFdpZHRoIiwib2Zmc2V0V2lkdGgiLCJyZW1vdmUiLCJpbnB1dExlZnQiLCJpY29uTGVmdCIsImNsaWVudFdpZHRoIiwic3R5bGUiLCJwYWRkaW5nUmlnaHQiLCJtYXJnaW5SaWdodCIsInBhZGRpbmdMZWZ0IiwibWFyZ2luTGVmdCIsImNhbmNlbEJ1dHRvbiIsInNob3VsZFNob3dDYW5jZWwiLCJzaG91bGRTaG93Q2FuY2VsQnV0dG9uIiwiY2FuY2VsU3R5bGUiLCJvZmZzZXQiLCJoYXNWYWx1ZSIsInNob3VsZFNob3dDbGVhckJ1dHRvbiIsInJlbmRlciIsImdldEJvb2xlYW4iLCJjbGVhckljb24iLCJzZWFyY2hJY29uIiwia2V5IiwidGFiSW5kZXgiLCJvbk1vdXNlRG93biIsIm9uVG91Y2hTdGFydCIsImNsYXNzIiwiaWNvbiIsImxhenkiLCJyb2xlIiwiY29sb3IiLCJyZWYiLCJpbnB1dE1vZGUiLCJpbnB1dG1vZGUiLCJlbnRlcktleUhpbnQiLCJlbnRlcmtleWhpbnQiLCJtaW5MZW5ndGgiLCJtaW5sZW5ndGgiLCJtYXhMZW5ndGgiLCJtYXhsZW5ndGgiLCJhdXRvQ2FwaXRhbGl6ZSIsImF1dG9Db21wbGV0ZSIsImF1dG9Db3JyZWN0Iiwib25Qb2ludGVyRG93biIsIm9uQ2xpY2siLCJ3YXRjaGVycyIsImlvcyIsIm1kIiwiaW9uX3NlYXJjaGJhciJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8iLCJ4X2dvb2dsZV9pZ25vcmVMaXN0IjpbMF19